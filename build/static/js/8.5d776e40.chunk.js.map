{"version":3,"sources":["views/Voting/helpers.ts","views/Voting/config.ts","utils/truncateWalletAddress.ts","views/Voting/components/CastVoteModal/styles.tsx","views/Voting/components/BreadcrumbLink.tsx","views/Voting/components/Layout.tsx","views/Voting/components/CastVoteModal/DetailsView.tsx","views/Voting/hooks/useGetVotingPower.tsx","components/ReactMarkdown/styles.tsx","components/ReactMarkdown/index.tsx","../node_modules/lodash/isEmpty.js","views/Voting/CreateProposal/styles.tsx","views/Voting/CreateProposal/Choice.tsx","views/Voting/CreateProposal/Choices.tsx","views/Voting/CreateProposal/helpers.ts","views/Voting/components/VoteDetailsModal.tsx","views/Voting/CreateProposal/index.tsx"],"names":["isCoreProposal","proposal","author","toLowerCase","ADMIN_ADDRESS","filterProposalsByType","proposals","proposalType","ProposalType","COMMUNITY","filter","CORE","ALL","filterProposalsByState","state","generateMetaData","plugins","network","strategies","name","params","symbol","address","getCakeAddress","decimals","generatePayloadData","version","SNAPSHOT_VERSION","timestamp","Date","now","toFixed","space","PANCAKE_SPACE","sendSnaphotData","message","a","fetch","SNAPSHOT_HUB_API","method","headers","Accept","body","JSON","stringify","response","ok","json","error","Error","error_description","data","getVotingPower","account","poolAddresses","block","simpleRpcProvider","getBlockNumber","blockNumber","SNAPSHOT_VOTING_API","calculateVoteResults","votes","reduce","accum","vote","choiceText","choices","choice","getTotalFromVotes","power","BigNumber","metadata","votingPower","plus","BIG_ZERO","PROPOSALS_TO_SHOW","IPFS_GATEWAY","VOTE_THRESHOLD","truncateWalletAddress","startLength","endLength","substring","length","VotingBox","styled","div","theme","colors","cardBorder","ModalInner","props","mb","maxWidth","BreadcrumbLink","Link","primaryBright","Layout","mediaQueries","lg","DetailsView","total","cakeBalance","cakeVaultBalance","cakePoolBalance","poolsBalance","cakeBnbLpBalance","t","useTranslation","as","fontSize","color","textTransform","bold","toFormat","alignItems","justifyContent","textAlign","initialState","verificationHash","useGetVotingPower","isActive","useWeb3React","useState","setVotingPower","isLoading","setIsLoading","useEffect","getActivePools","eligiblePools","map","contractAddress","getAddress","prevVotingPower","fetchVotingPower","Table","table","ThemedComponent","text","Title","scale","my","markdownComponents","h1","h2","h3","h4","h5","h6","p","ol","ul","pre","ReactMarkdown","remarkPlugins","gfm","components","baseKeys","require","getTag","isArguments","isArray","isArrayLike","isBuffer","isPrototype","isTypedArray","hasOwnProperty","Object","prototype","module","exports","value","splice","tag","size","key","call","BaseLabel","label","Label","SecondaryLabel","FormError","children","FormErrors","errors","mt","Choice","onRemove","onTextInput","isWarning","setIsWarning","isDirty","setIsDirty","position","onChange","evt","currentTarget","right","top","zIndex","variant","onClick","makeChoice","id","uniqueId","Choices","hasMinimumChoices","index","newValue","newChoices","choiceIndex","findIndex","newChoice","placeholder","newPrevChoice","undefined","type","disabled","combineDateAndTime","date","time","isValid","dateStr","format","timeStr","parseISO","getTime","VoteDetailsModal","onDismiss","modalIsOpen","setModalIsOpen","useTheme","title","headerBackground","gradients","cardHeader","width","height","EasyMde","lazy","CreateProposal","times","startDate","startTime","endDate","endTime","snapshot","setState","fieldsState","setFieldsState","initialBlock","useInitialBlock","push","useHistory","provider","useWeb3Provider","useToast","toastSuccess","toastError","useModal","onPresentVoteDetailsModal","formErrors","formData","field","num","hasEmptyChoice","some","Array","startDateTimestamp","getFormErrors","handleSubmit","preventDefault","SnapshotCommand","PROPOSAL","payload","start","end","signMessage","sig","msg","ipfsHash","console","updateValue","prevState","prevFieldsState","handleDateChange","options","useMemo","hideIcons","Container","py","to","onSubmit","htmlFor","inputName","required","onTextChange","px","DatePicker","selected","placeholderText","mr","href","getBscScanAddressUrl","getBscScanBlockNumberUrl","endIcon","spin","isEmpty","count","UnlockButton"],"mappings":"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","file":"static/js/8.5d776e40.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { SNAPSHOT_HUB_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Proposal, ProposalState, ProposalType, Vote } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { ADMIN_ADDRESS, PANCAKE_SPACE, SNAPSHOT_VERSION } from './config'\r\n\r\nexport const isCoreProposal = (proposal: Proposal) => {\r\n  return proposal.author.toLowerCase() === ADMIN_ADDRESS.toLowerCase()\r\n}\r\n\r\nexport const filterProposalsByType = (proposals: Proposal[], proposalType: ProposalType) => {\r\n  switch (proposalType) {\r\n    case ProposalType.COMMUNITY:\r\n      return proposals.filter((proposal) => !isCoreProposal(proposal))\r\n    case ProposalType.CORE:\r\n      return proposals.filter((proposal) => isCoreProposal(proposal))\r\n    case ProposalType.ALL:\r\n    default:\r\n      return proposals\r\n  }\r\n}\r\n\r\nexport const filterProposalsByState = (proposals: Proposal[], state: ProposalState) => {\r\n  return proposals.filter((proposal) => proposal.state === state)\r\n}\r\n\r\nexport interface Message {\r\n  address: string\r\n  msg: string\r\n  sig: string\r\n}\r\n\r\n/**\r\n * Generates metadata required by snapshot to validate payload\r\n */\r\nexport const generateMetaData = () => {\r\n  return {\r\n    plugins: {},\r\n    network: 56,\r\n    strategies: [{ name: 'cake', params: { symbol: 'FARM', address: getCakeAddress(), decimals: 18 } }],\r\n  }\r\n}\r\n\r\n/**\r\n * Returns data that is required on all snapshot payloads\r\n */\r\nexport const generatePayloadData = () => {\r\n  return {\r\n    version: SNAPSHOT_VERSION,\r\n    timestamp: (Date.now() / 1e3).toFixed(),\r\n    space: PANCAKE_SPACE,\r\n  }\r\n}\r\n\r\n/**\r\n * General function to send commands to the snapshot api\r\n */\r\nexport const sendSnaphotData = async (message: Message) => {\r\n  const response = await fetch(SNAPSHOT_HUB_API, {\r\n    method: 'post',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(message),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    const error = await response.json()\r\n    throw new Error(error?.error_description)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getVotingPower = async (account: string, poolAddresses: string[], block?: number) => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/power`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      address: account,\r\n      block: blockNumber,\r\n      poolAddresses,\r\n    }),\r\n  })\r\n  const data = await response.json()\r\n  return data.data\r\n}\r\n\r\nexport const calculateVoteResults = (votes: Vote[]): { [key: string]: Vote[] } => {\r\n  return votes.reduce((accum, vote) => {\r\n    const choiceText = vote.proposal.choices[vote.choice - 1]\r\n\r\n    return {\r\n      ...accum,\r\n      [choiceText]: accum[choiceText] ? [...accum[choiceText], vote] : [vote],\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getTotalFromVotes = (votes: Vote[]) => {\r\n  return votes.reduce((accum, vote) => {\r\n    const power = new BigNumber(vote.metadata?.votingPower)\r\n    return accum.plus(power)\r\n  }, BIG_ZERO)\r\n}\r\n","export const PROPOSALS_TO_SHOW = 10\r\nexport const ADMIN_ADDRESS = '0x6eaf1b33b8672c5dc40aB8f4bA3A0111723126c7'\r\nexport const IPFS_GATEWAY = 'https://gateway.ipfs.io/ipfs'\r\nexport const SNAPSHOT_VERSION = '0.1.3'\r\nexport const PANCAKE_SPACE = 'cake.eth'\r\nexport const VOTE_THRESHOLD = 10\r\n","/**\r\n * Truncates a wallet's address\r\n */\r\nconst truncateWalletAddress = (address: string, startLength = 4, endLength = 4) => {\r\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n}\r\n\r\nexport default truncateWalletAddress\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nexport const VotingBox = styled.div`\r\n  align-items: center;\r\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\r\n  border-radius: 12px;\r\n  display: flex;\r\n  height: 64px;\r\n  justify-content: space-between;\r\n  margin-bottom: 24px;\r\n  padding: 0 16px;\r\n`\r\n\r\nexport const ModalInner: React.FC<BoxProps> = (props) => {\r\n  return <Box mb=\"24px\" maxWidth=\"320px\" {...props} />\r\n}\r\n","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst BreadcrumbLink = styled(Link)`\r\n  color: ${({ theme }) => theme.colors.primaryBright};\r\n`\r\n\r\nexport default BreadcrumbLink\r\n","import styled from 'styled-components'\r\n\r\nconst Layout = styled.div`\r\n  align-items: start;\r\n  display: grid;\r\n  grid-gap: 32px;\r\n  grid-template-columns: minmax(0, 1fr);\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    grid-template-columns: 1fr 332px;\r\n  }\r\n`\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport { Text, Flex } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { VotingBox, ModalInner } from './styles'\r\n\r\ninterface DetailsViewProps {\r\n  total: BigNumber\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n}\r\n\r\nconst DetailsView: React.FC<DetailsViewProps> = ({\r\n  total,\r\n  cakeBalance,\r\n  cakeVaultBalance,\r\n  cakePoolBalance,\r\n  poolsBalance,\r\n  cakeBnbLpBalance,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <ModalInner mb=\"0\">\r\n      <Text as=\"p\" mb=\"24px\" fontSize=\"14px\" color=\"textSubtle\">\r\n        {t(\r\n          'Your voting power is determined by the amount of FARM you held at the block detailed below. FARM held in other places does not contribute to your voting power.',\r\n        )}\r\n      </Text>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Overview')}\r\n      </Text>\r\n      <VotingBox>\r\n        <Text color=\"secondary\">{t('Your Voting Power')}</Text>\r\n        <Text bold fontSize=\"20px\">\r\n          {total.toFormat(3)}\r\n        </Text>\r\n      </VotingBox>\r\n      <Text color=\"secondary\" textTransform=\"uppercase\" mb=\"4px\" bold fontSize=\"14px\">\r\n        {t('Your Cake Held Now')}\r\n      </Text>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Wallet')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Manual FARM Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakePoolBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Auto FARM Pool')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeVaultBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('Other Syrup Pools')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{poolsBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"4px\">\r\n        <Text color=\"textSubtle\" fontSize=\"16px\">\r\n          {t('FARM BNB LP')}\r\n        </Text>\r\n        <Text textAlign=\"right\">{cakeBnbLpBalance.toFormat(3)}</Text>\r\n      </Flex>\r\n    </ModalInner>\r\n  )\r\n}\r\n\r\nexport default DetailsView\r\n","import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getActivePools } from 'utils/calls'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getVotingPower } from '../helpers'\r\n\r\ninterface State {\r\n  verificationHash: string\r\n  cakeBalance: BigNumber\r\n  cakeVaultBalance: BigNumber\r\n  cakePoolBalance: BigNumber\r\n  poolsBalance: BigNumber\r\n  cakeBnbLpBalance: BigNumber\r\n  total: BigNumber\r\n}\r\n\r\nconst initialState: State = {\r\n  verificationHash: null,\r\n  cakeBalance: BIG_ZERO,\r\n  cakeVaultBalance: BIG_ZERO,\r\n  cakePoolBalance: BIG_ZERO,\r\n  poolsBalance: BIG_ZERO,\r\n  cakeBnbLpBalance: BIG_ZERO,\r\n  total: BIG_ZERO,\r\n}\r\n\r\nconst useGetVotingPower = (block?: number, isActive = true): State & { isLoading: boolean } => {\r\n  const { account } = useWeb3React()\r\n  const [votingPower, setVotingPower] = useState(initialState)\r\n  const [isLoading, setIsLoading] = useState(!!account)\r\n\r\n  useEffect(() => {\r\n    const fetchVotingPower = async () => {\r\n      setIsLoading(true)\r\n\r\n      try {\r\n        const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n        const eligiblePools = await getActivePools(blockNumber)\r\n        const poolAddresses = eligiblePools.map(({ contractAddress }) => getAddress(contractAddress))\r\n        const {\r\n          cakeBalance,\r\n          cakeBnbLpBalance,\r\n          cakePoolBalance,\r\n          total,\r\n          poolsBalance,\r\n          cakeVaultBalance,\r\n          verificationHash,\r\n        } = await getVotingPower(account, poolAddresses, blockNumber)\r\n\r\n        if (isActive) {\r\n          setVotingPower((prevVotingPower) => ({\r\n            ...prevVotingPower,\r\n            verificationHash,\r\n            cakeBalance: new BigNumber(cakeBalance),\r\n            cakeBnbLpBalance: new BigNumber(cakeBnbLpBalance),\r\n            cakePoolBalance: new BigNumber(cakePoolBalance),\r\n            poolsBalance: new BigNumber(poolsBalance),\r\n            cakeVaultBalance: new BigNumber(cakeVaultBalance),\r\n            total: new BigNumber(total),\r\n          }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (account && isActive) {\r\n      fetchVotingPower()\r\n    }\r\n  }, [account, block, setVotingPower, isActive, setIsLoading])\r\n\r\n  return { ...votingPower, isLoading }\r\n}\r\n\r\nexport default useGetVotingPower\r\n","import React from 'react'\r\nimport { Heading, Text } from '@pancakeswap/uikit'\r\nimport { NormalComponents, SpecialComponents } from 'react-markdown/src/ast-to-react'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 32px;\r\n  margin-top: 32px;\r\n  width: 100%;\r\n\r\n  td,\r\n  th {\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst ThemedComponent = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n\r\n  li {\r\n    margin-bottom: 8px;\r\n  }\r\n`\r\n\r\nconst Pre = styled.pre`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  margin-bottom: 16px;\r\n  margin-top: 16px;\r\n  max-width: 100%;\r\n  overflow-x: auto;\r\n`\r\n\r\nconst Title = (props) => {\r\n  return <Heading as=\"h4\" scale=\"lg\" my=\"16px\" {...props} />\r\n}\r\n\r\nconst markdownComponents: Partial<NormalComponents & SpecialComponents> = {\r\n  h1: Title,\r\n  h2: Title,\r\n  h3: Title,\r\n  h4: Title,\r\n  h5: Title,\r\n  h6: Title,\r\n  p: (props) => {\r\n    return <Text as=\"p\" my=\"16px\" {...props} />\r\n  },\r\n  table: Table,\r\n  ol: (props) => {\r\n    return <ThemedComponent as=\"ol\" {...props} />\r\n  },\r\n  ul: (props) => {\r\n    return <ThemedComponent as=\"ul\" {...props} />\r\n  },\r\n  pre: Pre,\r\n}\r\n\r\nexport default markdownComponents\r\n","import React from 'react'\r\nimport ReactMarkdownLib, { ReactMarkdownOptions } from 'react-markdown'\r\nimport gfm from 'remark-gfm'\r\nimport markdownComponents from './styles'\r\n\r\nconst ReactMarkdown: React.FC<ReactMarkdownOptions> = (props) => {\r\n  return <ReactMarkdownLib remarkPlugins={[gfm]} components={markdownComponents} {...props} />\r\n}\r\n\r\nexport default ReactMarkdown\r\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import React from 'react'\r\nimport { Box, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseLabel = styled.label`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: block;\r\n  font-weight: 600;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Label = styled(BaseLabel)`\r\n  font-size: 20px;\r\n`\r\n\r\nexport const SecondaryLabel = styled(BaseLabel)`\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n`\r\n\r\nexport const FormError: React.FC = ({ children }) => (\r\n  <Text color=\"failure\" mb=\"4px\">\r\n    {children}\r\n  </Text>\r\n)\r\n\r\nexport const FormErrors: React.FC<{ errors: string[] }> = ({ errors }) => {\r\n  return (\r\n    <Box mt=\"8px\">\r\n      {errors.map((error) => {\r\n        return <FormError key={error}>{error}</FormError>\r\n      })}\r\n    </Box>\r\n  )\r\n}\r\n","import React, { ChangeEvent, InputHTMLAttributes, useState } from 'react'\r\nimport { Box, CloseIcon, IconButton, Input, InputProps } from '@pancakeswap/uikit'\r\n\r\ninterface ChoiceProps extends InputProps, InputHTMLAttributes<HTMLInputElement> {\r\n  onTextInput: (value: string) => void\r\n  onRemove?: () => void\r\n}\r\n\r\nconst Choice: React.FC<ChoiceProps> = ({ onRemove, onTextInput, ...props }) => {\r\n  const [isWarning, setIsWarning] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = evt.currentTarget\r\n\r\n    setIsWarning(isDirty && value.length === 0)\r\n    setIsDirty(true)\r\n    onTextInput(value)\r\n  }\r\n\r\n  return (\r\n    <Box position=\"relative\" mb=\"16px\">\r\n      <Input {...props} onChange={handleChange} isWarning={isWarning} />\r\n      {onRemove && (\r\n        <Box position=\"absolute\" right=\"8px\" top=\"0px\" zIndex={30}>\r\n          <IconButton variant=\"text\" onClick={onRemove}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Choice\r\n","import React from 'react'\r\nimport { Button, Card, CardBody, CardHeader, Heading } from '@pancakeswap/uikit'\r\nimport uniqueId from 'lodash/uniqueId'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Choice from './Choice'\r\n\r\nexport interface Choice {\r\n  id: string\r\n  value: string\r\n}\r\n\r\ninterface ChoicesProps {\r\n  choices: Choice[]\r\n  onChange: (newChoices: Choice[]) => void\r\n}\r\n\r\nexport const MINIMUM_CHOICES = 2\r\nexport const makeChoice = (): Choice => ({ id: uniqueId(), value: '' })\r\n\r\nconst Choices: React.FC<ChoicesProps> = ({ choices, onChange }) => {\r\n  const { t } = useTranslation()\r\n  const hasMinimumChoices = choices.filter((choice) => choice.value.length > 0).length >= MINIMUM_CHOICES\r\n\r\n  const addChoice = () => {\r\n    onChange([...choices, makeChoice()])\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Heading as=\"h3\" scale=\"md\">\r\n          {t('Choices')}\r\n        </Heading>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {choices.map(({ id, value }, index) => {\r\n          const handleTextInput = (newValue: string) => {\r\n            const newChoices = [...choices]\r\n            const choiceIndex = newChoices.findIndex((newChoice) => newChoice.id === id)\r\n\r\n            newChoices[choiceIndex].value = newValue\r\n\r\n            onChange(newChoices)\r\n          }\r\n\r\n          const handleRemove = () => {\r\n            onChange(choices.filter((newPrevChoice) => newPrevChoice.id !== id))\r\n          }\r\n\r\n          return (\r\n            <Choice\r\n              key={id}\r\n              scale=\"lg\"\r\n              onTextInput={handleTextInput}\r\n              placeholder={t('Input choice text')}\r\n              value={value}\r\n              onRemove={index > 1 ? handleRemove : undefined}\r\n            />\r\n          )\r\n        })}\r\n\r\n        <Button type=\"button\" onClick={addChoice} disabled={!hasMinimumChoices}>\r\n          {t('Add Choice')}\r\n        </Button>\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Choices\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { format, parseISO, isValid } from 'date-fns'\r\nimport { MINIMUM_CHOICES } from './Choices'\r\nimport { FormState } from './types'\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  if (!isValid(date) || !isValid(time)) {\r\n    return null\r\n  }\r\n\r\n  const dateStr = format(date, 'yyyy-MM-dd')\r\n  const timeStr = format(time, 'HH:mm:ss')\r\n\r\n  return parseISO(`${dateStr}T${timeStr}`).getTime() / 1e3\r\n}\r\n\r\nexport const getFormErrors = (formData: FormState, t: ContextApi['t']) => {\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = formData\r\n  const errors: { [key: string]: string[] } = {}\r\n\r\n  if (!name) {\r\n    errors.name = [t('%field% is required', { field: 'Title' })]\r\n  }\r\n\r\n  if (!body) {\r\n    errors.body = [t('%field% is required', { field: 'Body' })]\r\n  }\r\n\r\n  if (choices.length < MINIMUM_CHOICES) {\r\n    errors.choices = [t('Please create a minimum of %num% choices', { num: MINIMUM_CHOICES })]\r\n  }\r\n\r\n  const hasEmptyChoice = choices.some((choice) => !choice.value)\r\n  if (choices.length === MINIMUM_CHOICES && hasEmptyChoice) {\r\n    errors.choices = Array.isArray(errors.choices)\r\n      ? [...errors.choices, t('Choices must not be empty')]\r\n      : (errors.choices = [t('Choices must not be empty')])\r\n  }\r\n\r\n  if (!isValid(startDate)) {\r\n    errors.startDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(startTime)) {\r\n    errors.startTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  if (!isValid(endDate)) {\r\n    errors.endDate = [t('Please select a valid date')]\r\n  }\r\n\r\n  if (!isValid(endTime)) {\r\n    errors.endTime = [t('Please select a valid time')]\r\n  }\r\n\r\n  const startDateTimestamp = combineDateAndTime(startDate, startTime)\r\n  const endDateTimestamp = combineDateAndTime(endDate, endTime)\r\n\r\n  if (endDateTimestamp < startDateTimestamp) {\r\n    errors.endDate = Array.isArray(errors.endDate)\r\n      ? [...errors.endDate, t('End date must be after the start date')]\r\n      : (errors.endDate = [t('End date must be after the start date')])\r\n  }\r\n\r\n  if (snapshot === 0) {\r\n    errors.snapshot = [t('Invalid snapshot')]\r\n  }\r\n\r\n  return errors\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Box, Flex, InjectedModalProps, Modal, Button, Spinner } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useGetVotingPower from '../hooks/useGetVotingPower'\r\nimport DetailsView from './CastVoteModal/DetailsView'\r\n\r\ninterface VoteDetailsModalProps extends InjectedModalProps {\r\n  block: number\r\n}\r\n\r\nconst VoteDetailsModal: React.FC<VoteDetailsModalProps> = ({ block, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const [modalIsOpen, setModalIsOpen] = useState(true)\r\n  const { isLoading, total, cakeBalance, cakeVaultBalance, cakePoolBalance, poolsBalance, cakeBnbLpBalance } =\r\n    useGetVotingPower(block, modalIsOpen)\r\n  const { theme } = useTheme()\r\n\r\n  const handleDismiss = () => {\r\n    setModalIsOpen(false)\r\n    onDismiss()\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Voting Power')} onDismiss={handleDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      <Box mb=\"24px\" width=\"320px\">\r\n        {isLoading ? (\r\n          <Flex height=\"450px\" alignItems=\"center\" justifyContent=\"center\">\r\n            <Spinner size={80} />\r\n          </Flex>\r\n        ) : (\r\n          <>\r\n            <DetailsView\r\n              total={total}\r\n              cakeBalance={cakeBalance}\r\n              cakeVaultBalance={cakeVaultBalance}\r\n              cakePoolBalance={cakePoolBalance}\r\n              poolsBalance={poolsBalance}\r\n              cakeBnbLpBalance={cakeBnbLpBalance}\r\n            />\r\n            <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" mt=\"16px\">\r\n              {t('Close')}\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Box>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VoteDetailsModal\r\n","import React, { ChangeEvent, FormEvent, lazy, useEffect, useState, useMemo } from 'react'\r\nimport {\r\n  AutoRenewIcon,\r\n  Box,\r\n  Breadcrumbs,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Flex,\r\n  Heading,\r\n  Input,\r\n  LinkExternal,\r\n  Text,\r\n  useModal,\r\n} from '@pancakeswap/uikit'\r\nimport { useHistory } from 'react-router'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport times from 'lodash/times'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { useInitialBlock } from 'state/hooks'\r\nimport { SnapshotCommand } from 'state/types'\r\nimport useToast from 'hooks/useToast'\r\nimport useWeb3Provider from 'hooks/useWeb3Provider'\r\nimport { getBscScanAddressUrl, getBscScanBlockNumberUrl } from 'utils/bscscan'\r\nimport truncateWalletAddress from 'utils/truncateWalletAddress'\r\nimport { signMessage } from 'utils/web3React'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/Layout/Container'\r\nimport { DatePicker, TimePicker } from 'components/DatePicker'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport ReactMarkdown from 'components/ReactMarkdown'\r\nimport BreadcrumbLink from '../components/BreadcrumbLink'\r\nimport { sendSnaphotData, Message, generateMetaData, generatePayloadData } from '../helpers'\r\nimport Layout from '../components/Layout'\r\nimport { FormErrors, Label, SecondaryLabel } from './styles'\r\nimport Choices, { Choice, makeChoice, MINIMUM_CHOICES } from './Choices'\r\nimport { combineDateAndTime, getFormErrors } from './helpers'\r\nimport { FormState } from './types'\r\nimport { ADMIN_ADDRESS, VOTE_THRESHOLD } from '../config'\r\nimport VoteDetailsModal from '../components/VoteDetailsModal'\r\n\r\nconst EasyMde = lazy(() => import('components/EasyMde'))\r\n\r\nconst CreateProposal = () => {\r\n  const [state, setState] = useState<FormState>({\r\n    name: '',\r\n    body: '',\r\n    choices: times(MINIMUM_CHOICES).map(makeChoice),\r\n    startDate: null,\r\n    startTime: null,\r\n    endDate: null,\r\n    endTime: null,\r\n    snapshot: 0,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [fieldsState, setFieldsState] = useState<{ [key: string]: boolean }>({})\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const initialBlock = useInitialBlock()\r\n  const { push } = useHistory()\r\n  const provider = useWeb3Provider()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [onPresentVoteDetailsModal] = useModal(<VoteDetailsModal block={state.snapshot} />)\r\n  const { name, body, choices, startDate, startTime, endDate, endTime, snapshot } = state\r\n  const formErrors = getFormErrors(state, t)\r\n\r\n  const handleSubmit = async (evt: FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n\r\n    try {\r\n      setIsLoading(true)\r\n      const proposal = JSON.stringify({\r\n        ...generatePayloadData(),\r\n        type: SnapshotCommand.PROPOSAL,\r\n        payload: {\r\n          name,\r\n          body,\r\n          snapshot,\r\n          start: combineDateAndTime(startDate, startTime),\r\n          end: combineDateAndTime(endDate, endTime),\r\n          choices: choices\r\n            .filter((choice) => choice.value)\r\n            .map((choice) => {\r\n              return choice.value\r\n            }),\r\n          metadata: generateMetaData(),\r\n          type: 'single-choice',\r\n        },\r\n      })\r\n\r\n      const sig = await signMessage(provider, account, proposal)\r\n\r\n      if (sig) {\r\n        const msg: Message = { address: account, msg: proposal, sig }\r\n\r\n        // Save proposal to snapshot\r\n        const data = await sendSnaphotData(msg)\r\n\r\n        // Redirect user to newly created proposal page\r\n        push(`/voting/proposal/${data.ipfsHash}`)\r\n\r\n        toastSuccess(t('Proposal created!'))\r\n      } else {\r\n        toastError(t('Error'), t('Unable to sign payload'))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), error?.message || error?.error)\r\n      console.error(error)\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const updateValue = (key: string, value: string | Choice[] | Date) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Keep track of what fields the user has attempted to edit\r\n    setFieldsState((prevFieldsState) => ({\r\n      ...prevFieldsState,\r\n      [key]: true,\r\n    }))\r\n  }\r\n\r\n  const handleChange = (evt: ChangeEvent<HTMLInputElement>) => {\r\n    const { name: inputName, value } = evt.currentTarget\r\n    updateValue(inputName, value)\r\n  }\r\n\r\n  const handleEasyMdeChange = (value: string) => {\r\n    updateValue('body', value)\r\n  }\r\n\r\n  const handleChoiceChange = (newChoices: Choice[]) => {\r\n    updateValue('choices', newChoices)\r\n  }\r\n\r\n  const handleDateChange = (key: string) => (value: Date) => {\r\n    updateValue(key, value)\r\n  }\r\n\r\n  const options = useMemo(\r\n    () => ({\r\n      hideIcons: account === ADMIN_ADDRESS ? [] : ['guide', 'fullscreen', 'preview', 'side-by-side', 'image'],\r\n    }),\r\n    [account],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (initialBlock > 0) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        snapshot: initialBlock,\r\n      }))\r\n    }\r\n  }, [initialBlock, setState])\r\n\r\n  return (\r\n    <Container py=\"40px\">\r\n      <Box mb=\"48px\">\r\n        <Breadcrumbs>\r\n          <BreadcrumbLink to=\"/\">{t('Home')}</BreadcrumbLink>\r\n          <BreadcrumbLink to=\"/voting\">{t('Voting')}</BreadcrumbLink>\r\n          <Text>{t('Make a Proposal')}</Text>\r\n        </Breadcrumbs>\r\n      </Box>\r\n      <form onSubmit={handleSubmit}>\r\n        <Layout>\r\n          <Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"name\">{t('Title')}</Label>\r\n              <Input id=\"name\" name=\"name\" value={name} scale=\"lg\" onChange={handleChange} required />\r\n              {formErrors.name && fieldsState.name && <FormErrors errors={formErrors.name} />}\r\n            </Box>\r\n            <Box mb=\"24px\">\r\n              <Label htmlFor=\"body\">{t('Content')}</Label>\r\n              <Text color=\"textSubtle\" mb=\"8px\">\r\n                {t('Tip: write in Markdown!')}\r\n              </Text>\r\n              <EasyMde\r\n                id=\"body\"\r\n                name=\"body\"\r\n                onTextChange={handleEasyMdeChange}\r\n                value={body}\r\n                options={options}\r\n                required\r\n              />\r\n              {formErrors.body && fieldsState.body && <FormErrors errors={formErrors.body} />}\r\n            </Box>\r\n            {body && (\r\n              <Box mb=\"24px\">\r\n                <Card>\r\n                  <CardHeader>\r\n                    <Heading as=\"h3\" scale=\"md\">\r\n                      {t('Preview')}\r\n                    </Heading>\r\n                  </CardHeader>\r\n                  <CardBody p=\"0\" px=\"24px\">\r\n                    <ReactMarkdown>{body}</ReactMarkdown>\r\n                  </CardBody>\r\n                </Card>\r\n              </Box>\r\n            )}\r\n            <Choices choices={choices} onChange={handleChoiceChange} />\r\n            {formErrors.choices && fieldsState.choices && <FormErrors errors={formErrors.choices} />}\r\n          </Box>\r\n          <Box>\r\n            <Card>\r\n              <CardHeader>\r\n                <Heading as=\"h3\" scale=\"md\">\r\n                  {t('Actions')}\r\n                </Heading>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"startDate\"\r\n                    onChange={handleDateChange('startDate')}\r\n                    selected={startDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.startDate && fieldsState.startDate && <FormErrors errors={formErrors.startDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('Start Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"startTime\"\r\n                    onChange={handleDateChange('startTime')}\r\n                    selected={startTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.startTime && fieldsState.startTime && <FormErrors errors={formErrors.startTime} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Date')}</SecondaryLabel>\r\n                  <DatePicker\r\n                    name=\"endDate\"\r\n                    onChange={handleDateChange('endDate')}\r\n                    selected={endDate}\r\n                    placeholderText=\"YYYY/MM/DD\"\r\n                  />\r\n                  {formErrors.endDate && fieldsState.endDate && <FormErrors errors={formErrors.endDate} />}\r\n                </Box>\r\n                <Box mb=\"24px\">\r\n                  <SecondaryLabel>{t('End Time')}</SecondaryLabel>\r\n                  <TimePicker\r\n                    name=\"endTime\"\r\n                    onChange={handleDateChange('endTime')}\r\n                    selected={endTime}\r\n                    placeholderText=\"00:00\"\r\n                  />\r\n                  {formErrors.endTime && fieldsState.endTime && <FormErrors errors={formErrors.endTime} />}\r\n                </Box>\r\n                {account && (\r\n                  <Flex alignItems=\"center\" mb=\"8px\">\r\n                    <Text color=\"textSubtle\" mr=\"16px\">\r\n                      {t('Creator')}\r\n                    </Text>\r\n                    <LinkExternal href={getBscScanAddressUrl(account)}>{truncateWalletAddress(account)}</LinkExternal>\r\n                  </Flex>\r\n                )}\r\n                <Flex alignItems=\"center\" mb=\"16px\">\r\n                  <Text color=\"textSubtle\" mr=\"16px\">\r\n                    {t('Snapshot')}\r\n                  </Text>\r\n                  <LinkExternal href={getBscScanBlockNumberUrl(snapshot)}>{snapshot}</LinkExternal>\r\n                </Flex>\r\n                {account ? (\r\n                  <>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      width=\"100%\"\r\n                      isLoading={isLoading}\r\n                      endIcon={isLoading ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n                      disabled={!isEmpty(formErrors)}\r\n                      mb=\"16px\"\r\n                    >\r\n                      {t('Publish')}\r\n                    </Button>\r\n                    <Text color=\"failure\" as=\"p\" mb=\"4px\">\r\n                      {t('You need at least %count% voting power to publish a proposal.', { count: VOTE_THRESHOLD })}{' '}\r\n                    </Text>\r\n                    <Button scale=\"sm\" type=\"button\" variant=\"text\" onClick={onPresentVoteDetailsModal} p={0}>\r\n                      {t('Check voting power')}\r\n                    </Button>\r\n                  </>\r\n                ) : (\r\n                  <UnlockButton width=\"100%\" type=\"button\" />\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Box>\r\n        </Layout>\r\n      </form>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CreateProposal\r\n"],"sourceRoot":""}