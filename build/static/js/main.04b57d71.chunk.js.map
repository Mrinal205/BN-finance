{"version":3,"sources":["config/localization/languages.ts","hooks/useTheme.ts","utils/compoundApyHelpers.ts","hooks/useEagerConnect.ts","views/Presale/PresaleCard.tsx","views/Presale/PresaleDetail.tsx","test.js","views/Presale/PurchaseModal.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Presale/SwapModal.tsx","views/Presale/Presale.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/EasterEgg/EasterEgg.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.ts","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","App.tsx","Providers.tsx","index.tsx","components/UnlockButton.tsx","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","components/Tags.tsx","state/teams/index.tsx","hooks/useAuth.ts","config/constants/nfts.ts","hooks/useRefresh.ts","utils/bscscan.ts","config/constants/index.ts","utils/getLiquidityUrlPathParts.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","state/lottery/getLotteriesData.ts","state/lottery/getUserLotteryData.ts","state/lottery/index.ts","views/Farms/components/types.ts","config/constants/farms.ts","config/constants/meta.ts","components/Layout/Page.tsx","components/TokenPairImage/index.tsx","utils/web3React.ts","utils/wallet.ts","components/ApyCalculatorModal/index.tsx","utils/addressHelpers.ts","utils/latinise.ts","utils/getRpcUrl.ts","utils/farmHelpers.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","config/constants/campaigns.ts","components/Modal/Spacer.tsx","components/Modal/ModalActions.tsx","components/Modal/ModalInput.tsx","hooks/usePersistState.ts","utils/formatBalance.ts","components/Layout/Flex.tsx","config/constants/teams.ts","utils/bigNumber.ts","state/teams/helpers.ts","state/pools/helpers.ts","utils/collectibles.ts","utils/apr.ts","views/Pools/hooks/useWithdrawalFeeTimer.ts","config/constants/ifo.ts","state/block/index.ts","state/hooks.ts","state/collectibles/index.ts","hooks/useDelayedUnmount.ts","state/achievements/helpers.ts","state/achievements/index.ts","utils/farmsPriceHelpers.ts","contexts/RefreshContext.tsx","contexts/ThemeContext.tsx","components/Balance.tsx","utils/achievements.ts","state/predictions/index.ts","components/Layout/Container.tsx","hooks/useLastUpdated.ts","utils/getTimePeriods.ts","components/PageLoader.tsx","config/constants/types.ts","state/voting/helpers.ts","state/voting/index.tsx","state/lottery/fetchUnclaimedUserRewards.ts","utils/contractHelpers.ts","components/Select/Select.tsx","hooks/usePreviousValue.ts","routerHistory.ts","components/SearchInput/SearchInput.tsx","config/index.ts","utils/multicall.ts","hooks/useContract.ts","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/hooks/useHarvestFarm.ts","views/Farms/hooks/useUnstakeFarms.ts","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/hooks/useStakeFarms.ts","views/Farms/hooks/useApproveFarm.ts","views/Home/hooks/useFarmsWithBalance.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Fee.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","components/DatePicker/DatePicker.tsx","components/DatePicker/DatePickerPortal.tsx","components/DatePicker/TimePicker.tsx","state/index.ts","state/types.ts","views/Pools/helpers.tsx","config/constants/contracts.ts","hooks/useToast.ts","config/constants/tokens.ts","state/predictions/helpers.ts","state/predictions/queries.ts","hooks/useWeb3Provider.ts","state/actions.ts","state/lottery/helpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","config/constants/pools.ts","config/constants/endpoints.ts","utils/providers.ts","utils/calls/estimateGas.ts","utils/calls/farms.ts","utils/calls/pools.ts","config/constants/priceHelperLps.ts","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmsPrices.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts"],"names":["EN","locale","language","code","languages","languageList","Object","values","useTheme","useContext","ThemeContext","isDark","toggleTheme","theme","StyledThemeContext","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","roundingDecimals","compoundFrequency","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","parseFloat","toFixed","getRoi","amountEarned","amountInvested","_binanceChainListener","a","Promise","resolve","defineProperty","window","get","this","bsc","set","useEagerConnect","login","useAuth","useEffect","connectorId","localStorage","getItem","connectorLocalStorageKey","isConnectorBinanceChain","ConnectorNames","BSC","isBinanceChainDefined","Reflect","has","then","AccentGradient","keyframes","styled","div","colors","primaryBright","secondary","props","card","background","isPromotedFarm","radii","cardBorder","expanded","StyledFarmStakingCard","Card","PresaleDetail","img","textSubtle","useState","setPendingTx","t","useWeb3React","account","useTranslation","toastError","useToast","farmsWithBalance","useFarmsWithBalance","masterChefContract","useMasterchef","balancesWithValue","filter","balanceType","balance","gt","useCallback","farmWithBalance","harvestFarm","pid","className","style","paddingTop","scale","mb","web3","Web3","ethereum","enable","ViewMode","xyz","myPFarmTokenAbi","PFarmTokenAbi","chainId","parseInt","process","preFarmInstance","eth","Contract","contracts","preFarm","Grid","GridItem","ControlStretch","ul","Flex","PurchaseModal","onDismiss","purchaseCallbackData","library","connector","activate","purchaseInput","setPurcahseInput","maticBal","setMaticBal","isDoingTran","setIsDoingTran","getMyBalance","getBalance","maticBalance","maticEtherValue","Number","utils","fromWei","confirmNow","sendAmount","toWei","methods","buyPFarm","send","from","value","res","status","title","color","marginBottom","marginRight","onChange","e","target","placeholder","disabled","onClick","toString","float","FarmRedeemAbi","myPFarmTokenAbi2","preFarmReedemInstance","preFarmReedem","SwapModal","swapCallbackData","preLithBal","setPreLithBal","balanceOf","call","preLithiumBalance","preLithiumBalanceEthValue","swapPFarmForFarm","mediaQueries","sm","Text","StyledCardAccent","StyledImage","Image","FCard","Divider","getDisplayApr","cakeRewardsApr","lpRewardsApr","toLocaleString","maximumFractionDigits","Presale","useRouteMatch","path","pathname","useLocation","useFarms","farmsLP","data","cakePrice","userDataLoaded","usePriceCakeBusd","query","maticPreVal","setMaticPreVal","preLitRemBal","setPreLitRemBal","allowanceVal","setAllowanceVal","usePersistState","TABLE","localStorageKey","sortOption","isArchived","includes","isInactive","isActive","usePollFarmsData","stakedOnly","setStakedOnly","activeFarms","farm","multiplier","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","userData","BigNumber","stakedBalance","isGreaterThan","stakedInactiveFarms","stakedArchivedFarms","purchaseData","salePriceE35","maticPreLithium","ethValue","ethValue2","preLithiumRemaingBal","preLithiumRemaingBalethValue","getAllownes","allowance","allowanceRes","farmsList","farmsToDisplay","farmsToDisplayWithAPR","map","lpTotalInQuoteToken","quoteToken","busdPrice","totalLiquidity","times","getFarmApr","poolWeight","lpAddresses","ChainId","MAINNET","apr","liquidity","lowercaseQuery","latinise","toLowerCase","lpSymbol","loadMoreRef","useRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","useMemo","farmsStaked","farms","orderBy","slice","earnings","sortFarms","logout","onPresentConnectModal","useWalletModal","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","current","token","tokenAddress","address","quoteTokenAddress","lpLabel","split","toUpperCase","replace","originalValue","label","earned","getBalanceNumber","fee","details","approveFun","approve","ethers","constants","MaxUint256","useModal","onPresentSwapModal","onPresentPurchaseModal","as","Page","justifyContent","alignItems","ref","src","alt","width","height","GlobalStyle","createGlobalStyle","config","icon","href","text","toLocaleUpperCase","items","Menu","cakePriceUsd","profile","useProfile","currentLanguage","setLanguage","currentLang","langs","setLang","toNumber","links","username","image","nft","images","undefined","profileLink","noProfileLink","showPip","SuspenseWithChunkError","state","hasError","error","isJsChunkLoadError","name","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","history","nextState","replaceState","location","reload","fallback","React","Component","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","AprRow","pool","stakingToken","earningToken","isFinished","earningTokenPrice","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","getAprData","earningsPercentageToDisplay","apyModalLink","BASE_EXCHANGE_URL","getAddress","ApyCalculatorModal","linkLabel","symbol","linkHref","earningTokenSymbol","onPresentApyModal","Balance","fontSize","isDisabled","decimals","unit","bold","variant","PromotedGradient","StyledCard","isPromoted","css","isDesktop","StyledCardInner","Box","ExpandedWrapper","ExpandedFooter","currentBlock","useBlock","useCakeVault","totalCakeInVault","fees","totalStaked","startBlock","endBlock","stakingLimit","contractAddress","sousId","poolContractAddress","cakeVaultContractAddress","getCakeVaultAddress","imageSrc","BASE_URL","isMetaMaskInScope","isMetaMask","isManualCakePool","getPoolBlockInfo","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","flexDirection","small","gte","manualCakeTotalMinusAutoVault","minus","getTotalStakedBalance","ml","mt","getFullDisplayBalance","external","getBscScanBlockCountdownUrl","textTransform","projectLink","BASE_BSC_SCAN_URL","p","registerToken","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","tokens","cake","primarySrc","secondarySrc","Wrapper","CardHeader","backgroundDisabled","gradients","StyledCardHeader","isStaking","isCakePool","TokenPairImage","primaryToken","secondaryToken","useApprovePool","lpContract","requestedApproval","setRequestedApproval","toastSuccess","dispatch","useAppDispatch","sousChefContract","useSousChef","handleApprove","tx","wait","receipt","updateUserAllowance","console","useVaultApprove","setLastUpdated","cakeVaultContract","useCakeVaultContract","cakeContract","useCake","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","useLastUpdated","lastUpdated","response","currentAllowance","checkApprovalStatus","ApprovalAction","isLoading","stakingTokenContract","useERC20","endIcon","spin","StyledLink","Link","NotEnoughTokensModal","tokenSymbol","headerBackground","cardHeader","StyledButton","Button","PercentageButton","children","mx","options","gasLimit","DEFAULT_GAS_LIMIT","sousStake","amount","deposit","BIG_TEN","pow","sousStakeBnb","DEFAULT_TOKEN_DECIMAL","useStakePool","isUsingBnb","handleStake","stakeFarm","updateUserStakedBalance","updateUserBalance","onStake","sousUnstake","withdraw","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","unstakeFarm","updateUserPendingReward","onUnstake","StakeModal","isBnbPool","stakingTokenBalance","stakingTokenPrice","isRemovingStake","pendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","formatNumber","fullDecimalStakeAmount","getDecimalAmount","plus","handleChangePercent","sliderPercent","percentageOfStakingMax","dividedBy","multipliedBy","amountToStake","handleConfirmClick","textAlign","minWidth","onUserInput","input","convertedInput","percentage","Math","floor","min","currencyValue","isWarning","max","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","prefix","mr","harvestPool","harvestPoolBnb","BIG_ZERO","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","index","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","CardActions","harvest","poolCategory","PoolCategory","BINANCE","pendingReward","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","UnlockButton","CardFooter","VaultApprovalAction","WithdrawalFeeTimer","secondsRemaining","getTimePeriods","days","hours","minutes","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","lastDepositedTime","userShares","withdrawalFee","withdrawalFeePeriod","feeAsDecimal","useWithdrawalFeeTimer","hasUnstakingFee","noFeeToPay","shouldShowTimer","FeeSummary","stakingTokenSymbol","feeInCake","callOptions","VaultStakeModal","stakingMax","pricePerFullShare","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","convertCakeToShares","triggerWithdrawAllThreshold","sharesRemaining","sharesAsBigNumber","lte","withdrawAll","fetchCakeVaultUserData","handleDeposit","HasSharesActions","convertSharesToCake","cakeAsBigNumber","cakeAsNumberBalance","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","cakeAtLastUserAction","lastUserActionTime","getCakeVaultEarnings","hasAutoEarnings","autoCakeToDisplay","autoUsdToDisplay","lastActionInMs","Date","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","Container","ToggleView","viewMode","onToggle","handleToggle","mode","id","CARD","PoolTabButtons","hasStakeInFinishedPools","setViewMode","url","isExact","isXs","isSm","viewModeToggle","liveOrFinishedSwitch","to","stakedOnlySwitch","checked","prev","BountyModal","TooltipComponent","estimatedCakeBountyReward","totalPendingCakeHarvest","callFee","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","tooltipPadding","right","BountyCard","fontWeight","onPresentBountyModal","ButtonText","xs","HelpButton","px","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","subtitle","showSubtitle","toLocaleLowerCase","role","HelpIconWrapper","EarningsCell","labelText","asset","event","stopPropagation","Apr","showIcon","openRoiModal","padding","marginLeft","md","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","flex","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","xl","ActionTitles","ActionContent","HarvestAction","actionTitle","pt","alignSelf","lineHeight","marginTop","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","expandAnimation","collapseAnimation","StyledActionPanel","dropdown","lg","InfoSection","ActionPanel","breakpoints","isMd","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","maxWidth","Harvest","Stake","StyledRow","PoolRow","isLg","setExpanded","shouldRenderActionPanel","useDelayedUnmount","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","pools","tableWrapperEl","scrollIntoView","behavior","CardLayout","FlexLayout","PoolControls","SearchSortContainer","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","searchQuery","setSearchQuery","setSortOption","accountHasVaultShares","cakePool","find","partition","finishedPools","openPools","stakedOnlyFinishedPools","stakedOnlyOpenPools","length","useFetchCakeVault","useFetchPublicPoolsData","poolsCurrentlyVisible","showFinishedPools","poolsToShow","chosenPools","finalArray","poolsToSort","sortPools","forEach","cardLayout","tableLayout","Select","option","SearchInput","Home","lazy","Farms","Autofarm","Lottery","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","usePollBlockNumber","useFetchProfile","usePollCoreFarmData","Global","PageLoader","exact","component","iterations","DatePicker","Providers","getLibrary","store","RefreshContext","ReactDOM","render","StrictMode","document","getElementById","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","tokenId","points","profileContract","getProfileContract","getUsername","fetch","ok","json","getProfile","hasRegistered","getUserProfile","getTeam","team","getNftByTokenId","Cookies","avatar","domain","secure","expires","initialState","isInitialized","profileSlice","createSlice","reducers","profileFetchStart","profileFetchSucceeded","_state","action","payload","profileFetchFailed","profileClear","addPoints","actions","fetchProfile","CoreTag","outline","startIcon","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","VoteNowTag","SoonTag","ClosedTag","teamsList","reduce","accum","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","getTeams","teams","deactivate","connectorID","connectorsByName","UnsupportedChainIdError","setupNetwork","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","IPFS_GATEWAY","nftSources","NftType","PANCAKE","137","80001","identifierKey","MIXIE","Nfts","description","ipfs","sortOrder","identifier","type","variationId","video","webm","mp4","blur","useRefresh","fastRefresh","fast","slowRefresh","slow","getBscScanAddressUrl","getBscScanTransactionUrl","transactionHash","getBscScanBlockNumberUrl","block","getLiquidityUrlPathParts","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","tokenAddressString","secondPart","LS_KEY","fetchLocale","getLanguageCodeFromLS","isFetching","languageMap","Map","translations","LanguageContext","createContext","LanguageProvider","codeFromStorage","setState","enLocale","currentLocale","prevState","fetchInitialLocales","setItem","translate","key","translatedText","match","interpolatedText","keys","dataKey","templateKey","RegExp","Provider","languageContext","Error","applyNodeDataToLotteriesGraphResponse","nodeData","graphResponse","nodeRound","endTime","finalNumber","startTime","lotteryId","ticketPrice","priceTicketInCake","totalTickets","totalUsers","winningTickets","graphRound","getGraphLotteries","request","GRAPH_API_LOTTERY","gql","lotteries","getLotteriesData","currentLotteryId","idsForNodesCall","getRoundIdsArray","fetchMultipleLotteries","mergedData","applyNodeDataToUserGraphResponse","graphData","ticketData","ticketDataForRound","roundTickets","roundId","claimed","hasRoundBeenClaimed","userTickets","getGraphLotteryUser","blankUser","totalCake","rounds","userRes","user","round","lottery","getUserLotteryData","idsForTicketsNodeCall","blindRoundData","fetchUserTicketsForMultipleRounds","rawUserTicketNodeData","roundDataAndUserTickets","rawRoundTicketData","processRawTicketsResponse","roundsWithUserParticipation","idsForLotteriesNodeCall","lotteriesNodeData","mergedRoundData","graphResponseWithNodeRounds","isTransitioning","maxNumberTicketsPerBuyOrClaim","currentRound","LotteryStatus","PENDING","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","tickets","lotteriesData","userLotteryData","fetchCurrentLottery","createAsyncThunk","fetchLottery","lotteryInfo","fetchCurrentLotteryId","fetchCurrentLotteryIdAndMaxBuy","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","fetchTickets","userLotteries","fetchPublicLotteries","fetchUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","extraReducers","builder","addCase","fulfilled","MobileColumnSchema","sortable","DesktopColumnSchema","syrup","wbnb","busd","DEFAULT_META","StyledPage","PageMeta","cakePriceUsdDisplay","minimumFractionDigits","pageMeta","getCustomMeta","pageTitle","join","property","content","getImageUrlFromToken","rpcUrl","getNodeUrl","injected","InjectedConnector","supportedChainIds","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","Injected","WalletConnect","provider","providers","Web3Provider","signMessage","BinanceChain","bnbSign","signature","wc","wcMessage","hexlify","toUtf8Bytes","signPersonalMessage","getSigner","method","params","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","tokenDecimals","tokenImage","tokenAdded","GridHeaderItem","BulletList","displayApr","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","num","freq","getCakeAddress","getMasterChefAddress","addresses","masterChef","getMulticallAddress","multiCall","getLotteryV2Address","lotteryV2","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo","getBunnySpecialAddress","bunnySpecial","getTradingCompetitionAddress","tradingCompetition","getEasterNftAddress","easterNft","cakeVault","getPredictionsAddress","predictions","getChainlinkOracleAddress","chainlinkOracle","getBunnySpecialCakeVaultAddress","bunnySpecialCakeVault","getBunnySpecialPredictionAddress","bunnySpecialPrediction","Latinise","latin_map","τ","Τ","x","sample","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","SUCCESS","toastWarning","WARNING","ToastListener","onRemove","campaigns","badge","campaignMap","campaign","StyledSpacer","size","Spacer","s","spacing","StyledModalActions","primaryDark","StyledModalAction","ModalActions","l","Children","toArray","child","i","StyledTokenInput","shadows","warning","inset","StyledInput","Input","StyledErrorMessage","ModalInput","onSelectMax","addLiquidityUrl","inputTitle","isBalanceZero","position","pl","balanceBigNumber","lt","ROUND_DOWN","displayBalance","pattern","inputMode","defaultOptions","hydrate","identity","dehydrate","initialValue","userOptions","valueFromLS","JSON","parse","setValue","stringify","getBalanceAmount","getBalanceNumber1","displayDecimals","number","minPrecision","maxPrecision","formatBigNumber","remainder","mod","formatUnits","sub","formatBigNumberToFixed","formattedString","formatFixedNumber","leftSide","textColor","users","BIG_ONE","BIG_NINE","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","merge","teamsById","numberTeams","nbTeams","calls","push","multicallv2","profileABI","teamData","onChainTeamData","transformUserData","transformPool","rest","getTokenPricesFromFarm","prices","getIdentifierKeyFromAddress","nftSource","nftSourceEntry","getTokenUrl","tokenUri","startsWith","getAddressByType","getTokenUriData","contract","getErc721Contract","tokenURI","uriDataResponse","uriData","getPoolApr","rewardTokenPrice","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","isNaN","isFinite","poolLiquidityUsd","farmAddress","CAKE_PER_YEAR","cakeRewardsAprAsNumber","lpAprs","setSecondsRemaining","setHasUnstakingFee","now","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","setInterval","prevSeconds","clearInterval","ifos","blockSlice","initialBlock","setBlock","includeArchive","pids","farmsConfig","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","fetchFarmUserDataAsync","interval","simpleRpcProvider","getBlockNumber","blockNumber","useSelector","useFarmFromPid","f","useFarmUser","tokenBalance","useBusdPriceFromPid","useLpTokenPrice","farmTokenPriceInUsd","lpTokenPrice","lpTotalSupply","overallValueOfAllTokensInFarm","tokenAmountTotal","totalLpTokens","fetchPoolsPublicDataAsync","fetchPoolsPublicData","fetchPoolsStakingLimitsAsync","fetchPoolsUserDataAsync","fetchCakeVaultPublicData","fetchCakeVaultFees","totalSharesAsString","totalShares","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","hasProfile","useTeam","useTeams","useFetchAchievements","fetchAchievements","useAchievements","achievements","usePriceBnbBusd","bnbBusdFarm","cakeBnbFarm","useInitialBlock","useGetSortedRounds","roundData","epoch","parseBigNumberObj","useGetRounds","useGetBetByEpoch","bets","ledgers","useGetIsClaimable","claimableStatuses","useGetEarliestEpoch","earliestRound","minBy","useIsHistoryPaneOpen","isHistoryPaneOpen","useIsChartPaneOpen","isChartPaneOpen","useGetCurrentEpoch","currentEpoch","useGetIntervalBlocks","intervalBlocks","useGetTotalIntervalBlocks","bufferBlocks","useGetPredictionsStatus","useGetHistoryFilter","historyFilter","useGetCurrentRoundBlockNumber","currentRoundStartBlockNumber","useGetMinBetAmount","minBetAmount","useGetRewardRate","rewardRate","useGetIsFetchingHistory","isFetchingHistory","useGetHistoryByAccount","useGetLastOraclePrice","lastOraclePrice","useGetCollectibles","collectibles","identifiers","fetchWalletNfts","tokenIds","nftsInWallet","useGetProposals","proposals","voting","useGetProposal","proposalId","useGetVotes","votes","vote","_inValid","useGetVotingStateLoadingStatus","voteLoadingStatus","useGetProposalLoadingStatus","proposalLoadingStatus","useGetCurrentLotteryId","useGetUserLotteriesGraphData","useGetUserLotteryGraphRoundById","userRound","useGetLotteriesGraphData","useGetLotteryGraphDataById","useFetchLottery","useLottery","processedCurrentRound","useProcessLotteryResponse","maxNumberTicketsPerBuyOrClaimAsString","useTotalValue","bnbPrice","val","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","walletNft","balanceOfResponse","nftDataFetchPromises","all","nftData","nftSourceData","flat","collectiblesSlice","pending","association","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","getUserPointIncreaseEvents","GRAPH_API_PROFILE","getAchievements","pointIncreaseEvents","userPoint","campaignId","campaignMeta","getAchievementTitle","getAchievementDescription","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","CACHE_KEY","ThemeContextProvider","isDarkUserSetting","setIsDark","dark","light","previousValue","start","end","duration","separator","getClaimableIfoData","ifoCampaigns","ifosList","ifoItem","claimStatusCalls","pointCenterIfoABI","requireSuccess","claimStatuses","claimStatusArr","claimableIfoData","claimableIfoDataItem","ifoCampaign","BLOCK_PADDING","PredictionStatus","INITIAL","HistoryFilter","ALL","initializePredictions","getPredictionData","marketData","epochs","range","getRoundsData","roundsResponse","initialRoundData","roundResponse","reduxNodeRound","serializePredictionsRoundsResponse","initializedData","getLedgerData","ledgerResponses","getClaimStatuses","makeLedgerData","fetchRound","predictionContract","getPredictionsContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","getBetHistory","transformBetResponse","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markBetHistoryAsCollected","betId","betIndex","findIndex","bet","newestRound","maxBy","futureRound","makeFutureRoundResponse","futureRounds","makeRoundData","rejected","setStateLastUpdated","previousLastUpdated","usePreviousValue","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","seconds","delta","abs","timeLeft","years","months","PoolIds","QuoteToken","getProposals","first","skip","ProposalState","ACTIVE","SNAPSHOT_API","getProposal","proposal","getVotes","where","getVoteVerificationStatuses","votesToVerify","voter","verificationHash","metadata","total","votingPower","SNAPSHOT_VOTING_API","headers","body","statusText","isValid","getAllVotes","votesPerChunk","reject","fetchVoteChunk","newSkip","voteChunk","VotingStateLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","getState","proposalVotes","results","votingSlice","LOADING","IDLE","lotteryAddress","fetchCakeRewardsForTickets","winningTicket","rewardBracket","lotteryV2Abi","cakeRewards","cakeTotal","cakeReward","ticketsWithUnclaimedRewards","getRewardBracketByNumber","ticketNumber","ticketNumAsArray","reverse","winningNumsAsArray","matchingNumbers","getWinningTickets","ticketsWithRewardBrackets","ticket","allWinningTickets","unclaimedWinningTickets","getWinningNumbersForRound","targetRoundId","targetRound","pastLottery","roundsToCheck","callsWithRoundData","getViewUserTicketInfoCalls","count","multicalls","concat","callWithRoundData","multicallRes","multicallResPerRound","resCount","singleRoundResponse","mergedMulticallResponse","mergeViewUserTicketInfoMulticallResponse","fetchUnclaimedUserRewards","claimableRounds","CLAIMABLE","rawUserTicketData","roundIds","winningTicketsForPastRounds","roundsWithWinningTickets","winningTicketData","roundsWithUnclaimedWinningTickets","getContract","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","sousChefBnb","sousChef","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","getCakeContract","cakeAbi","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","DropDownContainer","isOpen","boxShadow","DropDownList","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","containerSize","setContainerSize","toggling","offsetWidth","offsetHeight","handleClickOutside","selectedIndex","createBrowserHistory","InputWrapper","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","onBlur","BSC_BLOCK_TIME","CAKE_PER_BLOCK","BASE_ADD_LIQUIDITY_URL","multicall","multi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","tryAggregate","result","useIfoV1Contract","useWeb3Provider","useIfoV2Contract","useERC721","useBunnyFactory","useLotteryV2Contract","usePointCenterIfoContract","useClaimRefundContract","useTradingCompetitionContract","useEasterNftContract","usePredictionsContract","useSpecialBunnyCakeVaultContract","useSpecialBunnyPredictionContract","ApyButton","useHarvestFarm","farmPid","useUnstakeFarms","DepositModal","onConfirm","tokenName","setVal","valNumber","fullBalanceNumber","handleChange","currentTarget","validity","valid","handleSelectMax","eq","WithdrawModal","useStakeFarms","txHash","info","useApproveFarm","onApprove","farmsWithBalances","setFarmsWithBalances","masterChefABI","rawResults","fetchBalances","AprWrapper","hideButton","liquidityUrlPathParts","TokenWrapper","Farm","rawStakedBalance","Amount","span","textDisabled","Earned","userDataReady","primary","Details","actionPanelToggled","isMobile","ReferenceElement","MultiplierWrapper","Multiplier","displayMultiplier","LiquidityWrapper","Fee","displayFee","Liquidity","displayLiquidity","earningsBigNumber","earningsBusd","isZero","pr","lpPrice","isApproved","lpAddress","stakedBalanceBigNumber","onPresentDeposit","onPresentWithdraw","item","StyledLinkExternal","LinkExternal","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","dual","isCommunity","StakedAction","Label","ContentContainer","CellLayout","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","tableSchema","columnNames","column","columnIndex","indexOf","createElement","colSpan","dropShadow","TableWrapper","table","TableBody","tbody","TableContainer","FarmTable","columns","rows","useTable","sortColumn","row","original","inputProps","customInput","portalId","dateFormat","StyledDatePickerPortal","DatePickerPortal","TimePicker","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","predictionsReducer","profileReducer","teamsReducer","collectiblesReducer","votingReducer","lotteryReducer","useDispatch","BetPosition","SnapshotCommand","ProposalType","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","cakeAsDisplayBalance","amountInShares","sharesAsNumberBalance","sharesAsDisplayBalance","isHighValueToken","autoCakeProfit","autoUsdProfit","Boolean","toastContext","bnb","Result","numberOrNull","valueNum","betResponse","hash","BULL","BEAR","claimedHash","totalBets","totalBNB","transformRoundResponse","positionResponse","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalAmount","bullBets","bearBets","bearAmount","bullAmount","transformTotalWonResponse","marketResponse","houseRounds","totalBNBTreasury","getRoundResult","CANCELED","LIVE","roundResultPosition","WIN","LOSE","getCanClaim","getUnclaimedWinningBets","getTotalWon","GRAPH_API_PREDICTION","HOUSE","market","ledgerCalls","claimableCalls","claimableResponses","claimableResponse","claimable","staticCalls","paused","PAUSED","rewardBaseCalAmount","rewardAmount","oracleCalled","ledgerResponse","serializePredictionsLedgerResponse","refEth","setprovider","lotteryContract","processViewLotterySuccessResponse","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","viewLottery","lotteryData","lotteryIds","processedResponses","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","totalTicketsToRequest","cursor","ticketResponse","userTotalTickets","filteredForNullResponses","completeTicketData","currentIdAsInt","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","0","fetchUserPendingRewards","pendingRewards","pendingCake","fetchPublicVaultData","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","fetchVaultUser","userContractResponse","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","earningTokenAddress","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","CORE","SNAPSHOT_BASE_URL","SNAPSHOT_HUB_API","RPC_URL","getRpcUrl","JsonRpcProvider","estimateGas","methodName","methodArgs","gasMarginPer10000","rawGasEstimation","gasEstimation","mul","add","callWithEstimateGas","enterStaking","leaveStaking","getActivePools","eligiblePools","startBlockCalls","endBlockCalls","startBlocks","endBlocks","poolCheck","priceHelperLps","fetchFarm","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","tokenAmountMc","quoteTokenAmountMc","masterchefABI","totalAllocPoint","allocPoint","feeaddress","depositeFee","tokenPriceVsQuote","fetchPublicFarmData","farmPublicData","fetchFarms","farmsToFetch","farmConfig","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","fetchFarmsPrices","farmsWithPrices","baseTokenPrice","quoteTokenPrice","fetchFarmUserAllowances","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","loadArchivedFarmsData","farmsWithPriceHelpers","priceHelperLpsConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl"],"mappings":"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eAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,wBACPqlC,MAAO,4BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,uBACPqlC,MAAO,2BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,uBACPqlC,MAAO,2BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,uBACPqlC,MAAO,2BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,2BACPqlC,MAAO,+BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,0BACPqlC,MAAO,8BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,6BACPqlC,MAAO,iCAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,0BACPqlC,MAAO,8BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,yBACPqlC,MAAO,6BAET,CACEliB,GAAI,YACJsR,KAAM,aACNz0B,MAAO,6BACPqlC,MAAO,iCAET,CACEliB,GAAI,YACJsR,KAAM,gBACNz0B,MAAO,eACPq0B,YAAa,qDACbgR,MAAO,oBAET,CACEliB,GAAI,YACJsR,KAAM,gBACNz0B,MAAO,cACPq0B,YAAa,mDACbgR,MAAO,oBAQEC,EAAc,IAAIlP,IAE/BgP,EAAUtY,SAAQ,SAACyY,GACjBD,EAAYrsC,IAAIssC,EAASpiB,GAAIoiB,O,2JCjKzBC,EAAerrC,IAAOC,IAAV,+DACN,SAACI,GAAD,OAAWA,EAAMirC,QAClB,SAACjrC,GAAD,OAAWA,EAAMirC,QAGbC,EA5B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","file":"static/js/main.04b57d71.chunk.js","sourcesContent":["import { Language } from '@pancakeswap/uikit'\r\n\r\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\r\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\r\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\r\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\r\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\r\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\r\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\r\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\r\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\r\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\r\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\r\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\r\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\r\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\r\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\r\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\r\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\r\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\r\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\r\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\r\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\r\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\r\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\r\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\r\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\r\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\r\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\r\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\r\n\r\nexport const languages = {\r\n  'ar-SA': AR,\r\n  'bn-BD': BN,\r\n  'en-US': EN,\r\n  'de-DE': DE,\r\n  'el-GR': EL,\r\n  'es-ES': ESES,\r\n  'fi-FI': FI,\r\n  'fil-PH': FIL,\r\n  'fr-FR': FR,\r\n  'hi-IN': HI,\r\n  'hu-HU': HU,\r\n  'id-ID': ID,\r\n  'it-IT': IT,\r\n  'ja-JP': JA,\r\n  'ko-KR': KO,\r\n  'nl-NL': NL,\r\n  'pl-PL': PL,\r\n  'pt-BR': PTBR,\r\n  'pt-PT': PTPT,\r\n  'ro-RO': RO,\r\n  'ru-RU': RU,\r\n  'sv-SE': SVSE,\r\n  'ta-IN': TA,\r\n  'tr-TR': TR,\r\n  'uk-UA': UK,\r\n  'vi-VN': VI,\r\n  'zh-CN': ZHCN,\r\n  'zh-TW': ZHTW,\r\n}\r\n\r\nexport const languageList = Object.values(languages)\r\n","import { useContext } from 'react'\r\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\r\nimport { ThemeContext } from 'contexts/ThemeContext'\r\n\r\nconst useTheme = () => {\r\n  const { isDark, toggleTheme } = useContext(ThemeContext)\r\n  const theme = useContext(StyledThemeContext)\r\n  return { isDark, toggleTheme, theme }\r\n}\r\n\r\nexport default useTheme\r\n","export const tokenEarnedPerThousandDollarsCompounding = ({\r\n  numberOfDays,\r\n  farmApr,\r\n  tokenPrice,\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n}) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\r\n  const timesCompounded = 365 * compoundFrequency\r\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  let aprAsDecimal = farmApr / 100\r\n\r\n  if (performanceFee) {\r\n    // Reduce the APR by the % performance fee\r\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\r\n    const aprAfterFee = farmApr - feeRelativeToApr\r\n    aprAsDecimal = aprAfterFee / 100\r\n  }\r\n\r\n  const daysAsDecimalOfYear = numberOfDays / 365\r\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\r\n  const principal = 1000 / tokenPrice\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n\r\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\r\n}\r\n\r\nexport const getRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage\r\n}\r\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton, IconButton, useModal, CalculateIcon, Button, useWalletModal } from '@pancakeswap/uikit'\nimport { Farm } from 'state/types'\nimport { getBscScanAddressUrl } from 'utils/bscscan'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport useAuth from 'hooks/useAuth'\n// import DetailsSection from './../Farms/components/FarmCard/DetailsSection'\n// import CardHeading from './../Farms/components/FarmCard/FarmCard'\n// import CardActionsContainer from './../Farms/components/FarmCard/CardActionsContainer'\n// import ApyButton from './../Farms/components/FarmCard/ApyButton'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  lpRewardsApr?: number\n  liquidity?: BigNumber\n  fee?: any\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  displayApr: string\n  removed: boolean\n  cakePrice?: BigNumber\n  account?: string\n}\n\nconst PresaleCard: React.FC<FarmCardProps> = ({ farm, displayApr, removed, cakePrice, account }) => {\n\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n    // // console.log('farm......',farm);\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('FARM')\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const lpAddress = getAddress(farm.lpAddresses)\n  const isPromotedFarm = farm.token.symbol === 'FARM'\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm} className=\"bg-opacity\">\n\n      {isPromotedFarm && <StyledCardAccent />}\n      <div className=\"cardHead\">PREFARM PRESALE CONTRACT</div>\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('PREFARM Remaining: ')}: 0.000000</Text>\n      \n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Matic/PREFARM: ')}: 0.000000</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Your PREFARM balance:  ')}: 0.000000</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Your Matic balance:  ')}: 0.000000</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      {/* <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} /> */}\n      <Divider />\n   \n      { !account ? <Button onClick={()=>{ onPresentConnectModal() }} >Unlock Button</Button> : <Button>Purchase</Button> } \n  \n    </FCard>\n  ) \n}\n\nexport default PresaleCard\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Button } from '@pancakeswap/uikit'\nimport { harvestFarm } from 'utils/calls'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeHarvestBalance from '../Home/components/CakeHarvestBalance'\nimport CakeWalletBalance from '../Home/components/CakeWalletBalance'\n\nconst StyledFarmStakingCard = styled(Card)`\n  // background-image: url('/images/cake-bg.svg');\n  background-repeat: no-repeat;\n  background-position: top right;\n  min-height: 376px;\n`\n\nconst Block = styled.div`\n  margin-bottom: 16px;\n`\n\nconst CardImage = styled.img`\n  margin-bottom: 16px;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n`\n\nconst Actions = styled.div`\n  margin-top: 24px;\n`\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\n\nconst PresaleDetail = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const { toastError } = useToast()\n  const farmsWithBalance = useFarmsWithBalance()\n  const masterChefContract = useMasterchef()\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.gt(0))\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    // eslint-disable-next-line no-restricted-syntax\n    for (const farmWithBalance of balancesWithValue) {\n      try {\n        // eslint-disable-next-line no-await-in-loop\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      }\n    }\n    setPendingTx(false)\n  }, [balancesWithValue, masterChefContract, toastError, t])\n  return (\n    <StyledFarmStakingCard className=\"backgroundCarda\" >\n      <CardBody className=\"presale-lineheight\" style={{ paddingTop: '0px'}}>\n      \n        {/* <h1>Brans Presale</h1> */}\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('Time & Date :')}\n        </Heading>\n        <h2><span className=\"presale-head presale-title\">Presale Start :  </span>  <span className=\"presale-ans fontWeightText\">7/18, 1030 GMT (approx), block 16995000 7/18, 1030 GMT (approx), block 16995000</span></h2>\n        <h2><span className=\"presale-head presale-title\">Presale end : </span> <span className=\"presale-ans fontWeightText\">7/18, 1030 GMT (approx), block 16995000</span></h2>\n        <h2><span className=\"presale-head presale-title\">Liquidity provided : </span><span className=\"presale-ans fontWeightText\"> 7/18, 1030 GMT (approx), block 16995000</span></h2>\n        <h2><span className=\"presale-head presale-title\">Swap to farming token : </span></h2>\n        <h2><span className=\"presale-head presale-title\">Farming start : </span></h2>\n        <h2><span className=\"presale-head presale-title\">Total Raise : </span></h2><br/>\n\n        <Heading scale=\"xl\" mb=\"24px\">\n          {t('How to :')}\n        </Heading>\n        <h2> <span className=\"presale-ans fontWeightText\">A) Purchase PRELITHIUM with unwrapped MATIC using the PRELITHIUM PRESALE CONTRACT.</span></h2>\n        <h2><span className=\"presale-ans fontWeightText\">B) Swap PRELITHIUM for LITHIUM using the LITHIUM REDEEM CONTRACT.</span></h2>\n        \n      </CardBody>\n    </StyledFarmStakingCard>\n  )\n}\n\nexport default PresaleDetail\n\n","import Web3 from 'web3';\n\nexport default {\n    'web3' : web,\n    'connect' : connect\n  };\n\n  // console.log('window:',window);\n  \n  function web(){\n    // console.log('web3 called');\n    if (window.web3) {\n      window.web3 = new Web3(window.ethereum);\n     }\n     return new Web3(window.web3);\n  }\n  \n  function connect() {\n    window.ethereum.enable();\n  }\n    ","import React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React, Web3ReactProvider} from '@web3-react/core';\nimport useWeb3Provider from 'hooks/useWeb3Provider';\nimport { Modal, Text, LinkExternal, Flex, Box, Button, Input } from '@pancakeswap/uikit';\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization';\nimport SearchInput from 'components/SearchInput';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport Web3 from 'web3';\nimport PFarmTokenAbi from 'config/abi/PFarmToken.json';\nimport contracts from 'config/constants/contracts';\nimport xyz from '../../test';\n\nconst web3 = xyz.web3(); // new Web3(new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\nconst myPFarmTokenAbi:any = PFarmTokenAbi;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi,contracts.preFarm[chainId]);\n\ninterface PurchaseModalProps {  \n  onDismiss?: () => void\n  account : any\n  purchaseCallbackData ?: (data) => void\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst PurchaseModal: React.FC<PurchaseModalProps> = ({ onDismiss, purchaseCallbackData }) => {\n\n  const { t } = useTranslation();\n\n  const { account, connector, activate, library } = useWeb3React();\n  const [ purchaseInput, setPurcahseInput ] = useState('');\n  const [maticBal, setMaticBal] = useState('0');\n  const [ isDoingTran, setIsDoingTran ] = useState(false);\n  // const { getBalance } = useWeb3Provider();\n\n  const getMyBalance = useCallback(async() => {\n    const maticBalance = await web3.eth.getBalance(account);\n    const maticEtherValue = Number(Web3.utils.fromWei(maticBalance, 'ether')).toFixed(4);\n    setMaticBal(maticEtherValue);\n    },[account]);\n\n  useEffect(() => {\n    // console.log('library',library);\n    // console.log('preFarmInstance:',preFarmInstance);\n    getMyBalance();\n    // console.log('xyz:',xyz);\n  }, [library, getMyBalance]);\n\n  const confirmNow = async() => {\n    if (purchaseInput) {\n        try {\n            const sendAmount = web3.utils.toWei(purchaseInput,'ether');\n            setIsDoingTran(true);\n            const res = await preFarmInstance.methods.buyPFarm().send({from : account , value : sendAmount });\n            // console.log('confirmNow res:',res);\n            purchaseCallbackData(res.status);\n            onDismiss(); \n            setIsDoingTran(false);   \n        } catch (error) {\n            // onDismiss(); \n            setIsDoingTran(false); \n        }\n    } \n  }\n  \n    return (\n        <Modal title={t('Buy PreFarm with matic')} onDismiss={ isDoingTran ? null : onDismiss }>\n        <Grid>\n          <GridItem>\n            <h4 style={{ color: \"white\", marginBottom:15 }} >Purcahse</h4>\n          <ControlStretch style={{ marginRight:20 }} >\n                <Input value={purchaseInput} onChange={(e)=>{ setPurcahseInput(e.target.value); }} placeholder=\"0\" />\n              </ControlStretch>\n          </GridItem>\n          <GridItem>\n          <h4 style={{ color: \"white\", marginBottom:15,  }} >Balance: {maticBal}</h4>\n          <Button disabled={isDoingTran} onClick={()=>{ setPurcahseInput(maticBal.toString()) }} >Max</Button>\n          </GridItem>\n          <GridItem>\n            <div style={{marginBottom:20}} >&nbsp;</div>\n            <h2 style={{ float:'right' }} className=\"matClass\">MATIC</h2>\n          </GridItem>\n          {/* 7 day row */}\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={onDismiss} >Cancel</Button>\n          </GridItem>\n          <GridItem className=\"button-can\">\n            <div>&nbsp;</div>\n          </GridItem>\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={confirmNow} className=\"cardback\" >\n            {t('Confirm')}\n          </Button>\n          </GridItem>\n         \n        </Grid>\n\n      </Modal>\n    )\n}\n\nexport default PurchaseModal;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from '@pancakeswap/uikit'\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-right: 0px;\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n    margin-right: 16px;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useWeb3React, Web3ReactProvider} from '@web3-react/core';\nimport { Modal, Text, LinkExternal, Flex, Box, Button, Input } from '@pancakeswap/uikit';\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization';\nimport Web3 from 'web3';\nimport FarmRedeemAbi from 'config/abi/FarmRedeem.json';\nimport PFarmTokenAbi from 'config/abi/PFarmToken.json';\nimport contracts from 'config/constants/contracts';\nimport xyz from '../../test'; \n\nconst web3 = xyz.web3(); // new Web3(new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\nconst myPFarmTokenAbi:any = FarmRedeemAbi;\n\nconst myPFarmTokenAbi2:any = PFarmTokenAbi;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst preFarmReedemInstance = new web3.eth.Contract(myPFarmTokenAbi,contracts.preFarmReedem[chainId]);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi2,contracts.preFarm[chainId]);\n\ninterface SwapModalProps { \n  onDismiss?: () => void\n  account : any\n  swapCallbackData ?: (data) => void\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n\n  li {\n    margin: 0;\n    padding: 0;\n  }\n\n  li::before {\n    content: '•';\n    margin-right: 4px;\n  }\n\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst SwapModal: React.FC<SwapModalProps> = ({ onDismiss, swapCallbackData }) => {\n\n  const { t } = useTranslation();\n\n  const { account, connector, activate, library } = useWeb3React();\n  const [preLithBal, setPreLithBal] = useState(0);\n  const [ purchaseInput, setPurcahseInput ] = useState('');\n  const [ isDoingTran, setIsDoingTran ] = useState(false);\n\n  // const { getBalance } = useWeb3Provider();\n\n  const getMyBalance = useCallback(async() => {\n    const preLithiumBalance = await preFarmInstance.methods.balanceOf(account).call();\n    const preLithiumBalanceEthValue = Number(Web3.utils.fromWei(preLithiumBalance, 'ether'));\n    setPreLithBal(preLithiumBalanceEthValue);\n  },[account]);\n\n  useEffect(() => {\n    // console.log('preFarmReedemInstance:',preFarmReedemInstance);\n    getMyBalance();\n  }, [library, getMyBalance]);\n\n  const confirmNow = async() => {\n    if (purchaseInput) {\n        try {\n            const sendAmount = web3.utils.toWei(purchaseInput,'ether');\n            setIsDoingTran(true);\n            const res = await preFarmReedemInstance.methods.swapPFarmForFarm(sendAmount).send({from : account});\n            // console.log('confirmNow res:',res);\n            swapCallbackData(res.status);\n            onDismiss();\n            setIsDoingTran(false);   \n        } catch (error) {\n            setIsDoingTran(false);    \n        }\n    }\n  }\n  \n    return (\n        <Modal title={t('Buy Farm')} onDismiss={ isDoingTran ? null : onDismiss } >\n        <Grid>\n          <GridItem>\n            <h4 style={{ color: \"white\", marginBottom:15 }} >Purcahse</h4>\n          <ControlStretch style={{ marginRight:20 }} >\n                <Input value={purchaseInput} onChange={(e)=>{ setPurcahseInput(e.target.value); }} placeholder=\"0\" />\n              </ControlStretch>\n          </GridItem>\n          <GridItem>\n          <h4 style={{ color: \"white\", marginBottom:15,  }} >Balance: {preLithBal}</h4>\n          <Button disabled={isDoingTran} onClick={()=>{ setPurcahseInput(preLithBal.toString()) }} >Max</Button>\n          </GridItem>\n          <GridItem>\n            <div style={{marginBottom:20}} >&nbsp;</div>\n            <h2 style={{ float:'right' }} className=\"matClass\">PFarm</h2>\n          </GridItem>\n          {/* 7 day row */}\n          <GridItem className=\"button-can\">\n          <Button onClick={isDoingTran ? null : onDismiss} >Cancel</Button>\n          </GridItem>\n          <GridItem className=\"button-can\">\n            <div>&nbsp;</div>\n          </GridItem>\n          <GridItem className=\"button-can\">\n          <Button disabled={isDoingTran} onClick={confirmNow} className=\"cardback\" >\n            {t('Confirm')}\n          </Button>\n          </GridItem>\n        </Grid>\n      </Modal>\n    )\n}\n\nexport default SwapModal;\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation, NavLink } from 'react-router-dom'\nimport { ethers } from 'ethers'\nimport Web3 from 'web3';\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport useAuth from 'hooks/useAuth';\nimport { Image, Heading, RowType, Toggle, Text, Button, useModal, useWalletModal, Flex } from '@pancakeswap/uikit'\nimport { ChainId } from '@pancakeswap/sdk'\nimport styled, { keyframes } from 'styled-components'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport { useFarms, usePollFarmsData, usePriceCakeBusd } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\nimport PageHeader from 'components/PageHeader';\nimport PFarmTokenAbi from 'config/abi/PFarmToken.json';\n// import\nimport contracts from 'config/constants/contracts';\nimport Select, { OptionProps } from 'components/Select/Select'\nimport FarmCard, { FarmWithStakedValue } from '../Farms/components/FarmCard/FarmCard'\nimport PresaleCard from './PresaleCard'\nimport Table from '../Farms/components/FarmTable/FarmTable'\nimport { RowProps } from '../Farms/components/FarmTable/Row'\nimport { DesktopColumnSchema, ViewMode } from '../Farms/components/types'\nimport PresaleDetail from './PresaleDetail';\nimport PurchaseModal from './PurchaseModal';\nimport SwapModal from './SwapModal';\nimport xyz from '../../test';\n\nconst web3 = xyz.web3(); // new Web3(new Web3.providers.HttpProvider('https://data-seed-prebsc-1-s1.binance.org:8545/'));\n\nconst myPFarmTokenAbi:any = PFarmTokenAbi;\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\n\nconst preFarmInstance = new web3.eth.Contract(myPFarmTokenAbi,contracts.preFarm[chainId]);\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 32px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n  \n`\n\nconst StyledImage = styled(Image)`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 58px;\n`\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: ${({ theme, isPromotedFarm }) => (isPromotedFarm ? '31px' : theme.radii.card)};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 24px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst getDisplayApr = (cakeRewardsApr?: number, lpRewardsApr?: number) => {\n  if (cakeRewardsApr && lpRewardsApr) {\n    return (cakeRewardsApr + lpRewardsApr).toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  if (cakeRewardsApr) {\n    return cakeRewardsApr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n  }\n  return null\n}\n\nconst Presale: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsLP, userDataLoaded } = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const [query, setQuery] = useState('');\n  const [maticPreVal, setMaticPreVal] = useState('0');\n  const [preLithBal, setPreLithBal] = useState(0);\n  const [maticBal, setMaticBal] = useState('0');\n  const [preLitRemBal, setPreLitRemBal] = useState(0);\n  const [allowanceVal, setAllowanceVal] =  useState('0');\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsData(isArchived)\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  ) \n\n  const purchaseData = useCallback(async() => {\n    try {\n\n      // console.log('account',account);\n\n      const maticPreLithium = await preFarmInstance.methods.salePriceE35().call();\n      const ethValue = Number(Web3.utils.fromWei(maticPreLithium, 'ether'));\n      const ethValue2 = (Number(Web3.utils.fromWei(ethValue.toString(), 'ether')) * 10).toFixed(4);\n      setMaticPreVal(ethValue2);\n\n      if(account) {\n        const preLithiumBalance = await preFarmInstance.methods.balanceOf(account).call();\n        const preLithiumBalanceEthValue = Number(Web3.utils.fromWei(preLithiumBalance, 'ether'));\n        setPreLithBal(preLithiumBalanceEthValue);\n\n        const maticBalance = await web3.eth.getBalance(account);\n        const maticEtherValue = Number(Web3.utils.fromWei(maticBalance, 'ether')).toFixed(4);\n        setMaticBal(maticEtherValue);\n\n        const preLithiumRemaingBal = preLithiumBalance;\n        const preLithiumRemaingBalethValue = Number(Web3.utils.fromWei(preLithiumRemaingBal, 'ether'));\n        // console.log('preLithiumRemaingBalethValue:',preLithiumRemaingBalethValue);\n\n        setPreLitRemBal(preLithiumRemaingBalethValue);\n      }\n\n    } catch (error) {\n      // console.log(error); \n    }\n  },[account]);\n\n  const getAllownes = useCallback(async() => {\n    if(account) {\n      const allowanceRes =  await preFarmInstance.methods.allowance(account, contracts.preFarmReedem[chainId]).call();\n\n      // console.log('allowanceRes:',allowanceRes);\n      setAllowanceVal(allowanceRes);\n    }\n  },[account]);\n\n  // const getChainId = useCallback(async() => {\n  //   // console.log('chainId:',parseInt(process.env.REACT_APP_CHAIN_ID, 10));\n  // },[]);\n\n  useEffect(() => {\n    purchaseData();\n    getAllownes();\n    // getChainId();\n  }, [purchaseData, getAllownes]);\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.busdPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.busdPrice)\n        const { cakeRewardsApr, lpRewardsApr } = isActive\n          ? getFarmApr(new BigNumber(farm.poolWeight), cakePrice, totalLiquidity, farm.lpAddresses[ChainId.MAINNET])\n          : { cakeRewardsApr: 0, lpRewardsApr: 0 }\n\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [cakePrice, query, isActive],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr + farm.lpRewardsApr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('PANCAKE', '')\n\n    const row: RowProps = {\n      apr: {\n        value: getDisplayApr(farm.apr, farm.lpRewardsApr),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        cakePrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      fee: {\n        fee: farm.fee,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\n    }\n\n    return (\n      <div>\n        <FlexLayout >\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <PresaleCard\n                key={farm.pid}\n                farm={farm}\n                displayApr={getDisplayApr(farm.apr, farm.lpRewardsApr)}\n                cakePrice={cakePrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n  \n  const approveFun = async() => {\n    // console.log('preFarmInstance:',preFarmInstance);\n\n    const res = await preFarmInstance.methods.approve(contracts.preFarmReedem[chainId], ethers.constants.MaxUint256).send({ from : account });\n    // console.log('approveFun res:',res);\n    getAllownes();\n  }\n\n  const purchaseCallbackData = (data) => {\n    // console.log('purchaseCallbackData data:',data);\n    if(data) {\n      purchaseData();\n    }\n  }\n\n  const swapCallbackData = (data) => {\n    // console.log('swapCallbackData data:',data);\n    if(data) {\n      purchaseData();\n    }\n  }\n\n  const [ onPresentSwapModal ] = useModal(\n    <SwapModal swapCallbackData={swapCallbackData} account={account} /> ,\n  )\n\n  const [ onPresentPurchaseModal ] = useModal(\n    <PurchaseModal purchaseCallbackData={purchaseCallbackData} account={account} /> ,\n  )\n\n  const checkAllowance = () => {\n    if(allowanceVal === '0') { return <Button onClick={approveFun} >Approve</Button> }\n    return <Button onClick={onPresentSwapModal} >Swap</Button> \n  }\n\n  return (\n    <>\n<div className=\"backbg\">     \n        <Heading as=\"h1\" scale=\"xxl\" color=\"primanry\" mb=\"24px\">\n          {t('Presale')}\n        </Heading>\n      <Page className=\"backbg\">\n        <PresaleDetail />\n        <div>\n          <FlexLayout >\n\n            <FCard isPromotedFarm >\n              <StyledCardAccent />\n              <div className=\"cardHead\">PRELITHIUM PRESALE CONTRACT</div>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text>{t('PRELITHIUM Remaining: ')} {preLitRemBal}</Text>\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('PRELITHIUM/Matic: ')} {maticPreVal}</Text>\n                {/* <Text bold>Cake</Text> */}\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('Your PRELITHIUM balance:  ')} {preLithBal}</Text>\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('Your Matic balance:  ')} {maticBal}</Text>\n                {/* <Text bold>Cake</Text> */}\n              </Flex>\n              <Divider />\n              {!account ? <Button onClick={() => { onPresentConnectModal() }} >Unlock Wallet</Button> : <Button onClick={() => { onPresentPurchaseModal() }} >Purchase</Button>}\n            </FCard>\n\n            <FCard isPromotedFarm >\n              <StyledCardAccent />\n              <div className=\"cardHead\">PRELITHIUM PRESALE CONTRACT</div>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                <Text>{t('Your PRELITHIUM Balance: ')} {preLithBal}</Text>\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('You can swap for up to: ')} {preLithBal}</Text>\n                {/* <Text bold>Cake</Text> */}\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('Rate:  ')} 1 : 1 Swap</Text>\n              </Flex>\n              <Flex justifyContent=\"space-between\">\n                <Text>{t('Your Matic balance: ')} {maticBal}</Text>\n                <br />\n                {/* <Text bold>Cake</Text> */}\n              </Flex>\n              <Divider />\n               { !account ? <Button onClick={() => { onPresentConnectModal() }} >Unlock Wallet</Button> :  checkAllowance() } \n            </FCard>\n          </FlexLayout>\n        </div>\n        <div ref={loadMoreRef} />\n        <StyledImage src=\"/images/decorations/3dpan.png\" alt=\"Pancake illustration\" width={460} height={103} />\n      </Page>\n</div>\n    </>\n  )\n}\n\nexport default Presale\n\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n* {\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n  body {\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n\r\n    img {\r\n      height: auto;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n  .bn-head{\r\n    font-size: 7rem;\r\n    color: linear-gradient(#53dee9,#7645d9);\r\n  }\r\n.bg-opacity{\r\n  background: rgba(21,21,21,.5);\r\n}\r\n.backgroundCarda{\r\n  background: rgba(21,21,21,.6);\r\n}\r\n.fontWeightText{\r\n  font-weight:200 !important;\r\n}\r\n\r\n  .backbg{\r\n    background-image: url('/images/Bg.jpg');\r\n    background-size: cover;\r\n    background-repeat: norepeat;\r\n  }\r\n  @import url('https://fonts.googleapis.com/css?family=Exo:400,700');\r\n\r\n*{\r\n    margin: 0px;\r\n    padding: 0px;\r\n}\r\n\r\nbody{\r\n    font-family: 'Exo', sans-serif;\r\n}\r\n\r\n\r\n.context {\r\n    width: 100%;\r\n    position: absolute;\r\n    top:50vh;\r\n    \r\n}\r\n\r\n.context h1{\r\n    text-align: center;\r\n    color: #fce119;\r\n    font-size: 50px;\r\n}\r\n\r\n\r\n.area{\r\n    background: #fce119;  \r\n    background: -webkit-linear-gradient(to left, #fce119, #fce119);  \r\n    width: 100%;\r\n    height:100vh;\r\n    \r\n   \r\n}\r\n\r\n.circles{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    \r\n}\r\n\r\n.circles li{\r\n    position: absolute;\r\n    display: block;\r\n    list-style: none;\r\n    width: 10px;\r\n    height: 10px;\r\n    background: rgba(252, 225, 25, 0.6);\r\n    animation: animate 25s linear infinite;\r\n    bottom: 250px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(1){\r\n    left: 25%;\r\n    width: 5px;\r\n    height: 5px;\r\n    animation-delay: 0s;\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n.circles li:nth-child(2){\r\n    left: 10%;\r\n    width: 15px;\r\n    height: 15px;\r\n    animation-delay: 2s;\r\n    animation-duration: 18s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(3){\r\n    left: 70%;\r\n    width: 15px;\r\n    height: 15px;\r\n    animation-delay: 4s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(4){\r\n    left: 40%;\r\n    width: 5px;\r\n    height: 5px;\r\n    animation-delay: 0s;\r\n    animation-duration: 18s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(5){\r\n    left: 65%;\r\n    width: 10px;\r\n    height: 10px;\r\n    animation-delay: 0s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(6){\r\n    left: 75%;\r\n    width: 5px;\r\n    height: 5px;\r\n    animation-delay: 3s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(7){\r\n    left: 35%;\r\n    width: 5px;\r\n    height: 5px;\r\n    animation-delay: 3s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(8){\r\n    left: 50%;\r\n    width: 17px;\r\n    height: 17px;\r\n    animation-delay: 15s;\r\n    animation-duration: 45s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(9){\r\n    left: 20%;\r\n    width: 10px;\r\n    height: 10px;\r\n    animation-delay: 2s;\r\n    animation-duration: 50s;\r\n    border-radius: 50%;\r\n}\r\n\r\n.circles li:nth-child(10){\r\n    left: 85%;\r\n    width: 5px;\r\n    height: 5px;\r\n    animation-delay: 0s;\r\n    animation-duration: 11s;\r\n    border-radius: 50%;\r\n}\r\n\r\n\r\n\r\n@keyframes animate {\r\n\r\n    0%{\r\n        transform: translateY(0) rotate(0deg);\r\n        opacity: 1;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    100%{\r\n        transform: translateY(-1000px) rotate(720deg);\r\n        opacity: 1;\r\n        border-radius: 50%;\r\n    }\r\n\r\n}\r\n\r\n.wrapper {\r\n    height: 100vh;\r\n    display: -webkit-box;\r\n    display: -ms-flexbox;\r\n    display: flex;\r\n    -ms-flex-wrap: wrap;\r\n        flex-wrap: wrap;\r\n    -webkit-box-pack: center;\r\n        -ms-flex-pack: center;\r\n            justify-content: center;\r\n    -webkit-box-align: center;\r\n        -ms-flex-align: center;\r\n            align-items: center;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  .main-div {\r\n    position: relative;\r\n    margin: 10px;\r\n    background-color: transparent;\r\n  }\r\n  \r\n  .main-div1::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 50%;\r\n    height: 50%;\r\n    -webkit-box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n            box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n    z-index: -1;\r\n    -webkit-animation-name: yellow-shadow;\r\n            animation-name: yellow-shadow;\r\n    -webkit-animation-timing-function: ease;\r\n            animation-timing-function: ease;\r\n    -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n    -webkit-animation-iteration-count: infinite;\r\n            animation-iteration-count: infinite;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    -ms-border-radius: 5px;\r\n    -o-border-radius: 5px;\r\n  }\r\n  \r\n  .main-div1::after {\r\n    content: '';\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 50%;\r\n    height: 50%;\r\n    -webkit-box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n            box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n    z-index: -1;\r\n    -webkit-animation-name: cyan-shadow;\r\n            animation-name: cyan-shadow;\r\n    -webkit-animation-timing-function: ease;\r\n            animation-timing-function: ease;\r\n    -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n    -webkit-animation-iteration-count: infinite;\r\n            animation-iteration-count: infinite;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    -ms-border-radius: 5px;\r\n    -o-border-radius: 5px;\r\n  }\r\n  \r\n  .main-div2::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    -webkit-box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n            box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n    z-index: -1;\r\n    -webkit-animation-name: gradient-shadow;\r\n            animation-name: gradient-shadow;\r\n    -webkit-animation-timing-function: ease;\r\n            animation-timing-function: ease;\r\n    -webkit-animation-duration: 2s;\r\n            animation-duration: 2s;\r\n    -webkit-animation-iteration-count: infinite;\r\n            animation-iteration-count: infinite;\r\n    border-radius: 50%;\r\n    -webkit-border-radius: 50%;\r\n    -moz-border-radius: 50%;\r\n    -ms-border-radius: 50%;\r\n    -o-border-radius: 50%;\r\n  }\r\n  \r\n  .main-div3::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    width: 50%;\r\n    height: 100%;\r\n    -webkit-box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n            box-shadow: 0 0 17px 3px #ffff01,0 0 4px 2px #ffff01;\r\n    z-index: -1;\r\n    -webkit-animation-name: half-yellow-shadow;\r\n            animation-name: half-yellow-shadow;\r\n    -webkit-animation-timing-function: ease;\r\n            animation-timing-function: ease;\r\n    -webkit-animation-duration: 5s;\r\n            animation-duration: 5s;\r\n    -webkit-animation-iteration-count: infinite;\r\n            animation-iteration-count: infinite;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    -ms-border-radius: 5px;\r\n    -o-border-radius: 5px;\r\n  }\r\n  \r\n  .main-div3::after {\r\n    content: '';\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 50%;\r\n    height: 100%;\r\n    -webkit-box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n            box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n    z-index: -1;\r\n    -webkit-animation-name: half-cyan-shadow;\r\n            animation-name: half-cyan-shadow;\r\n    -webkit-animation-timing-function: ease;\r\n            animation-timing-function: ease;\r\n    -webkit-animation-duration: 5s;\r\n            animation-duration: 5s;\r\n    -webkit-animation-iteration-count: infinite;\r\n            animation-iteration-count: infinite;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    -ms-border-radius: 5px;\r\n    -o-border-radius: 5px;\r\n  }\r\n  \r\n  h1 {\r\n    font-size: 50px;\r\n    margin: 0;\r\n    position: relative;\r\n    z-index: 3;\r\n    padding: 20px;\r\n    // background-color: #fce119;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n    -webkit-border-radius: 5px;\r\n    -moz-border-radius: 5px;\r\n    -ms-border-radius: 5px;\r\n    -o-border-radius: 5px;\r\n  }\r\n  \r\n  @-webkit-keyframes yellow-shadow {\r\n    0% {\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n    25% {\r\n      top: 50%;\r\n      left: 0;\r\n    }\r\n    50% {\r\n      top: 50%;\r\n      left: 50%;\r\n    }\r\n    75% {\r\n      top: 0;\r\n      left: 50%;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n  \r\n  @keyframes yellow-shadow {\r\n    0% {\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n    25% {\r\n      top: 50%;\r\n      left: 0;\r\n    }\r\n    50% {\r\n      top: 50%;\r\n      left: 50%;\r\n    }\r\n    75% {\r\n      top: 0;\r\n      left: 50%;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      left: 0;\r\n    }\r\n  }\r\n  \r\n  @-webkit-keyframes cyan-shadow {\r\n    0% {\r\n      right: 0;\r\n      bottom: 0;\r\n    }\r\n    25% {\r\n      right: 0;\r\n      bottom: 50%;\r\n    }\r\n    50% {\r\n      right: 50%;\r\n      bottom: 50%;\r\n    }\r\n    75% {\r\n      right: 50%;\r\n      bottom: 0;\r\n    }\r\n    100% {\r\n      right: 0;\r\n      bottom: 0;\r\n    }\r\n  }\r\n  \r\n  @keyframes cyan-shadow {\r\n    0% {\r\n      right: 0;\r\n      bottom: 0;\r\n    }\r\n    25% {\r\n      right: 0;\r\n      bottom: 50%;\r\n    }\r\n    50% {\r\n      right: 50%;\r\n      bottom: 50%;\r\n    }\r\n    75% {\r\n      right: 50%;\r\n      bottom: 0;\r\n    }\r\n    100% {\r\n      right: 0;\r\n      bottom: 0;\r\n    }\r\n  }\r\n  \r\n  @-webkit-keyframes gradient-shadow {\r\n \r\n    0% {\r\n      -webkit-box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n              box-shadow: 0 0 17px 3px #0ff,0 0 4px 2px #0ff;\r\n    }\r\n    50% {\r\n      -webkit-box-shadow: 0 0 17px 3px #686855,0 0 4px 2px #686855;\r\n              box-shadow: 0 0 17px 3px #686855,0 0 4px 2px #686855;\r\n    }\r\n    100% {\r\n      -webkit-box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n              box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n    }\r\n    \r\n  }\r\n  \r\n  @keyframes gradient-shadow {\r\n    0% {\r\n        -webkit-box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n                box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n      }\r\n      50% {\r\n        -webkit-box-shadow: 0 0 17px 3px #686855,0 0 4px 2px #686855;\r\n                box-shadow: 0 0 17px 3px #686855,0 0 4px 2px #686855;\r\n      }\r\n      100% {\r\n        -webkit-box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n                box-shadow: 0 0 17px 3px #fce119,0 0 4px 2px #fce119;\r\n      }\r\n  }\r\n  \r\n  @-webkit-keyframes half-yellow-shadow {\r\n    0% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    16.66% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    32.32% {\r\n      top: 0;\r\n      left: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    49.98% {\r\n      top: 50%;\r\n      left: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    66.64% {\r\n      top: 50%;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    83.3% {\r\n      top: 50%;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n  }\r\n  \r\n  @keyframes half-yellow-shadow {\r\n    0% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    16.66% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    32.32% {\r\n      top: 0;\r\n      left: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    49.98% {\r\n      top: 50%;\r\n      left: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    66.64% {\r\n      top: 50%;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    83.3% {\r\n      top: 50%;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    100% {\r\n      top: 0;\r\n      left: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n  }\r\n  \r\n  @-webkit-keyframes half-cyan-shadow {\r\n    0% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    16.66% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    32.32% {\r\n      bottom: 0;\r\n      right: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    49.98% {\r\n      bottom: 50%;\r\n      right: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    66.64% {\r\n      bottom: 50%;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    83.3% {\r\n      bottom: 50%;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    100% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n  }\r\n  \r\n  @keyframes half-cyan-shadow {\r\n    0% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    16.66% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    32.32% {\r\n      bottom: 0;\r\n      right: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    49.98% {\r\n      bottom: 50%;\r\n      right: 50%;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    66.64% {\r\n      bottom: 50%;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 100%;\r\n    }\r\n    83.3% {\r\n      bottom: 50%;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n    100% {\r\n      bottom: 0;\r\n      right: 0;\r\n      height: 50%;\r\n      width: 50%;\r\n    }\r\n  }\r\n.cardback{\r\n    background: linear-gradient(#7645d9,#53dee9);\r\n}\r\n.backgroundColor{\r\n    background-color: #000;\r\n}\r\n.timeline-TweetList-tweet:first-of-type {\r\n    \r\n    background: #000 !important;\r\n}\r\n.bottom-img{\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-top: 58px;\r\n}\r\n.presale-title{\r\n    font-size:30px;\r\n  }\r\n  .presale-lineheight{\r\n    line-height: 1.8rem;\r\n  }\r\n  .head-light{\r\n      color: #fff;\r\n  }\r\n<<<<<<< HEAD\r\n.presale-head{\r\n  font-size: 30px;\r\n  font-weight: 900;\r\n}\r\n.presale-ans{\r\n  font-size:24px;\r\n  padding-left:10px;\r\n}\r\n.cardHead{\r\n  background: linear-gradient(#7645d9,#53dee9);\r\n    font-size: 40px;\r\n    padding-top: 15px;\r\n    padding-bottom: 15px;\r\n    margin-bottom: 20px;\r\n    border-radius: 20px;\r\n}\r\n.presaleCard{\r\n  background: linear-gradient(#7645d9,#53dee9);\r\n}\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { MenuEntry } from '@pancakeswap/uikit'\r\nimport { ContextApi } from 'contexts/Localization/types'\r\n\r\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\r\n  {\r\n    label: t('Home'),\r\n    icon: 'HomeIcon',\r\n    href: '/',\r\n  },\r\n\r\n {\r\n    label: t('Presale'),\r\n    icon: 'SaleIcon',\r\n    href: '/presale',\r\n    status: {\r\n        text: t('Live').toLocaleUpperCase(),\r\n        color: 'success',\r\n      },\r\n  },\r\n  {\r\n    label: t('Trade'),\r\n    icon: 'TradeIcon',\r\n    items: [\r\n      {\r\n        label: t('Exchange'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Liquidity'),\r\n        href: '#',\r\n      },\r\n    ],\r\n  }, \r\n  {\r\n    label: t('Farms'),\r\n    icon: 'FarmIcon',\r\n    href: '/farms',\r\n  },\r\n  {\r\n    label: t('Pools'),\r\n    icon: 'PoolIcon',\r\n    href: '/pools',\r\n  },\r\n  {\r\n    label: t('Auto farm'),\r\n    icon: 'Autofarm',\r\n    href: '/Autofarm',\r\n  }, \r\n//   {\r\n//     label: t('Prediction (BETA)'),\r\n//     icon: 'PredictionsIcon',\r\n//     href: '/prediction',\r\n//   },\r\n  {\r\n    label: t('Lottery'),\r\n    icon: 'TicketIcon',\r\n    href: '/lottery',\r\n    status: {\r\n      text: t('win').toLocaleUpperCase(),\r\n      color: 'success',\r\n    },\r\n  },\r\n//   {\r\n//     label: t('Collectibles'),\r\n//     icon: 'NftIcon',\r\n//     href: '/collectibles',\r\n//   },\r\n//   {\r\n//     label: t('Team Battle'),\r\n//     icon: 'TeamBattleIcon',\r\n//     href: '/competition',\r\n//   },\r\n//   {\r\n//     label: t('Teams & Profile'),\r\n//     icon: 'GroupsIcon',\r\n//     items: [\r\n//       {\r\n//         label: t('Leaderboard'),\r\n//         href: '/teams',\r\n//       },\r\n//       {\r\n//         label: t('Task Center'),\r\n//         href: '/profile/tasks',\r\n//       },\r\n//       {\r\n//         label: t('Your Profile'),\r\n//         href: '/profile',\r\n//       },\r\n//     ],\r\n//   },\r\n\r\n\r\n {\r\n    label: t('IDO'),\r\n    icon: 'SaleIcon',\r\n    href: '#',\r\n    status: {\r\n        text: t('soon').toLocaleUpperCase(),\r\n        color: 'success',\r\n      },\r\n  },\r\n  {\r\n    label: t('Info'),\r\n    icon: 'InfoIcon',\r\n    href: 'https://pancakeswap.info',\r\n  },\r\n//   {\r\n//     label: t('IFO'),\r\n//     icon: 'IfoIcon',\r\n//     href: '/ifo',\r\n//   },\r\n  {\r\n    label: t('More'),\r\n    icon: 'MoreIcon',\r\n    items: [\r\n      {\r\n        label: t('Github'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Docs'),\r\n        href: '#',\r\n      },\r\n      {\r\n        label: t('Merch'),\r\n        href: 'https://pancakeswap.creator-spring.com/',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default config\r\n","import React from 'react'\r\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { languageList } from 'config/localization/languages'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\r\nimport config from './config'\r\n\r\nconst Menu = (props) => {\r\n  const { account } = useWeb3React()\r\n  const { login, logout } = useAuth()\r\n  const { isDark, toggleTheme } = useTheme()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const { profile } = useProfile()\r\n  const { currentLanguage, setLanguage, t } = useTranslation()\r\n\r\n  return (\r\n    <UikitMenu\r\n      account={account}\r\n      login={login}\r\n      logout={logout}\r\n      isDark={isDark}\r\n      toggleTheme={toggleTheme}\r\n      currentLang={currentLanguage.code}\r\n      langs={languageList}\r\n      setLang={setLanguage}\r\n      cakePriceUsd={cakePriceUsd.toNumber()}\r\n      links={config(t)}\r\n      profile={{\r\n        username: profile?.username,\r\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\r\n        profileLink: '/profile',\r\n        noProfileLink: '/profile',\r\n        showPip: !profile?.username,\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import React, { useState, useCallback } from 'react'\r\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\r\n\r\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\r\n  const [show, setShow] = useState(false)\r\n  const startFalling = useCallback(() => setShow(true), [setShow])\r\n  useKonamiCheatCode(startFalling)\r\n\r\n  if (show) {\r\n    return (\r\n      <div onAnimationEnd={() => setShow(false)}>\r\n        <FallingBunnies {...props} />\r\n      </div>\r\n    )\r\n  }\r\n  return null\r\n}\r\n\r\nexport default React.memo(EasterEgg)\r\n","import React from 'react'\r\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { Pool } from 'state/types'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprRowProps {\r\n  pool: Pool\r\n  performanceFee?: number\r\n}\r\n\r\nconst AprRow: React.FC<AprRowProps> = ({ pool, performanceFee = 0 }) => {\r\n  const { t } = useTranslation()\r\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, isAutoVault } = pool\r\n\r\n  const tooltipContent = isAutoVault\r\n    ? t('APY includes compounding, APR doesn’t. This pool’s FARM is compounded automatically, so we show APY.')\r\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address && `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${getAddress(stakingToken.address)}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\r\n      {isFinished || !apr ? (\r\n        <Skeleton width=\"82px\" height=\"32px\" />\r\n      ) : (\r\n        <Flex alignItems=\"center\">\r\n          <Balance\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n            bold\r\n          />\r\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\r\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\r\n          </IconButton>\r\n        </Flex>\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default AprRow\r\n","import styled, { css, keyframes } from 'styled-components'\r\nimport { Card, Box } from '@pancakeswap/uikit'\r\n\r\nconst PromotedGradient = keyframes`\r\n  0% {\r\n    background-position: 50% 0%;\r\n  }\r\n  50% {\r\n    background-position: 50% 100%;\r\n  }\r\n  100% {\r\n    background-position: 50% 0%;\r\n  }\r\n`\r\n\r\ninterface PromotedStyleCardProps {\r\n  isDesktop: boolean\r\n}\r\n\r\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\r\n  max-width: 352px;\r\n  margin: 0 8px 24px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-self: baseline;\r\n  position: relative;\r\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\r\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\r\n\r\n  ${({ isPromoted, theme }) =>\r\n    isPromoted\r\n      ? css`\r\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\r\n          padding: 1px 1px 3px 1px;\r\n          background-size: 400% 400%;\r\n        `\r\n      : `background: ${(props) => props.theme.card.background};`}\r\n\r\n  ${({ isPromoted }) =>\r\n    isPromoted &&\r\n    isPromoted.isDesktop &&\r\n    css`\r\n      animation: ${PromotedGradient} 3s ease infinite;\r\n    `}\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin: 0 12px 46px;\r\n  }\r\n`\r\n\r\nexport const StyledCardInner = styled(Box)`\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n`\r\n\r\nexport default StyledCard\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport {\r\n  Flex,\r\n  MetamaskIcon,\r\n  Text,\r\n  TooltipText,\r\n  LinkExternal,\r\n  TimerIcon,\r\n  Skeleton,\r\n  useTooltip,\r\n  Button,\r\n  Link,\r\n  HelpIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport Balance from 'components/Balance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\n\r\ninterface ExpandedFooterProps {\r\n  pool: Pool\r\n  account: string\r\n}\r\n\r\nconst ExpandedWrapper = styled(Flex)`\r\n  svg {\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n`\r\n\r\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\r\n  const { t } = useTranslation()\r\n  const { currentBlock } = useBlock()\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const {\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    sousId,\r\n    isAutoVault,\r\n  } = pool\r\n\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <ExpandedWrapper flexDirection=\"column\">\r\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Text small>{t('Total staked')}:</Text>\r\n        <Flex alignItems=\"flex-start\">\r\n          {totalStaked && totalStaked.gte(0) ? (\r\n            <>\r\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n              <span ref={totalStakedTargetRef}>\r\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\r\n              </span>\r\n            </>\r\n          ) : (\r\n            <Skeleton width=\"90px\" height=\"21px\" />\r\n          )}\r\n          {totalStakedTooltipVisible && totalStakedTooltip}\r\n        </Flex>\r\n      </Flex>\r\n      {stakingLimit && stakingLimit.gt(0) && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\r\n          <Text small>{t('Max. stake per user')}:</Text>\r\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n        </Flex>\r\n      )}\r\n      {shouldShowBlockCountdown && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n          {blocksRemaining || blocksUntilStart ? (\r\n            <Flex alignItems=\"center\">\r\n              <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\r\n                <Balance small value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n                <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n                  {t('Blocks')}\r\n                </Text>\r\n                <TimerIcon ml=\"4px\" color=\"primary\" />\r\n              </Link>\r\n            </Flex>\r\n          ) : (\r\n            <Skeleton width=\"54px\" height=\"21px\" />\r\n          )}\r\n        </Flex>\r\n      )}\r\n      {isAutoVault && (\r\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {tooltipVisible && tooltip}\r\n          <TooltipText ref={targetRef} small>\r\n            {t('Performance Fee')}\r\n          </TooltipText>\r\n          <Flex alignItems=\"center\">\r\n            <Text ml=\"4px\" small>\r\n              {performanceFee / 100}%\r\n            </Text>\r\n          </Flex>\r\n        </Flex>\r\n      )}\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false} small>\r\n          {t('See Token Info')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\r\n          {t('View Project Site')}\r\n        </LinkExternal>\r\n      </Flex>\r\n      {poolContractAddress && (\r\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\r\n          <LinkExternal\r\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n            bold={false}\r\n            small\r\n          >\r\n            {t('View Contract')}\r\n          </LinkExternal>\r\n        </Flex>\r\n      )}\r\n      {account && isMetaMaskInScope && tokenAddress && (\r\n        <Flex justifyContent=\"flex-end\">\r\n          <Button\r\n            variant=\"text\"\r\n            p=\"0\"\r\n            height=\"auto\"\r\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n          >\r\n            <Text color=\"primary\" fontSize=\"14px\">\r\n              {t('Add to Metamask')}\r\n            </Text>\r\n            <MetamaskIcon ml=\"4px\" />\r\n          </Button>\r\n        </Flex>\r\n      )}\r\n    </ExpandedWrapper>\r\n  )\r\n}\r\n\r\nexport default React.memo(ExpandedFooter)\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport ExpandedFooter from './ExpandedFooter'\r\n\r\ninterface FooterProps {\r\n  pool: Pool\r\n  account: string\r\n  totalCakeInVault?: BigNumber\r\n}\r\n\r\nconst ExpandableButtonWrapper = styled(Flex)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  button {\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\r\n  const { isAutoVault } = pool\r\n  const { t } = useTranslation()\r\n  const [isExpanded, setIsExpanded] = useState(false)\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  return (\r\n    <CardFooter>\r\n      <ExpandableButtonWrapper>\r\n        <Flex alignItems=\"center\">\r\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n          {tooltipVisible && tooltip}\r\n          <Flex ref={targetRef}>\r\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n          </Flex>\r\n        </Flex>\r\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\r\n          {isExpanded ? t('Hide') : t('Details')}\r\n        </ExpandableLabel>\r\n      </ExpandableButtonWrapper>\r\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\r\n    </CardFooter>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { TokenPairImage, ImageProps } from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\r\n  const primaryTokenSrc = `/images/tokens/${getAddress(tokens.cake.address)}.svg`\r\n\r\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\r\n}\r\n\r\nexport default CakeVaultTokenPairImage\r\n","import React from 'react'\r\nimport { CardHeader, Heading, Text, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Token } from 'config/constants/types'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\r\n\r\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\r\n  background: ${({ isFinished, background, theme }) =>\r\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\r\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\r\n`\r\n\r\nconst StyledCardHeader: React.FC<{\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  isAutoVault?: boolean\r\n  isFinished?: boolean\r\n  isStaking?: boolean\r\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\r\n  const { t } = useTranslation()\r\n  const isCakePool = earningToken.symbol === 'FARM' && stakingToken.symbol === 'FARM'\r\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\r\n\r\n  const getHeadingPrefix = () => {\r\n    if (isAutoVault) {\r\n      // vault\r\n      return t('Auto')\r\n    }\r\n    if (isCakePool) {\r\n      // manual cake\r\n      return t('Manual')\r\n    }\r\n    // all other pools\r\n    return t('Earn')\r\n  }\r\n\r\n  const getSubHeading = () => {\r\n    if (isAutoVault) {\r\n      return t('Automatic restaking')\r\n    }\r\n    if (isCakePool) {\r\n      return t('Earn FARM, stake FARM')\r\n    }\r\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\r\n  }\r\n\r\n  return (\r\n    <Wrapper isFinished={isFinished} background={background}>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Flex flexDirection=\"column\">\r\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\r\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\r\n          </Heading>\r\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <CakeVaultTokenPairImage width={64} height={64} />\r\n        ) : (\r\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\r\n        )}\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default StyledCardHeader\r\n","import { useCallback, useEffect, useState } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { ethers, Contract } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserAllowance } from 'state/actions'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\r\nimport useToast from 'hooks/useToast'\r\nimport useLastUpdated from 'hooks/useLastUpdated'\r\n\r\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      const tx = await lpContract.approve(sousChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n\r\n      dispatch(updateUserAllowance(sousId, account))\r\n      if (receipt.status) {\r\n        toastSuccess(\r\n          t('Contract Enabled'),\r\n          t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n        )\r\n        setRequestedApproval(false)\r\n      } else {\r\n        // user rejected tx or didn't go thru\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setRequestedApproval(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess])\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\n// Approve FARM auto pool\r\nexport const useVaultApprove = (setLastUpdated: () => void) => {\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const cakeContract = useCake()\r\n\r\n  const handleApprove = async () => {\r\n    const tx = await cakeContract.approve(cakeVaultContract.address, ethers.constants.MaxUint256)\r\n    setRequestedApproval(true)\r\n    const receipt = await tx.wait()\r\n    if (receipt.status) {\r\n      toastSuccess(t('Contract Enabled'), t('You can now stake in the %symbol% vault!', { symbol: 'FARM' }))\r\n      setLastUpdated()\r\n      setRequestedApproval(false)\r\n    } else {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setRequestedApproval(false)\r\n    }\r\n  }\r\n\r\n  return { handleApprove, requestedApproval }\r\n}\r\n\r\nexport const useCheckVaultApprovalStatus = () => {\r\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const cakeContract = useCake()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n  useEffect(() => {\r\n    const checkApprovalStatus = async () => {\r\n      try {\r\n        const response = await cakeContract.allowance(account, cakeVaultContract.address)\r\n        const currentAllowance = new BigNumber(response.toString())\r\n        setIsVaultApproved(currentAllowance.gt(0))\r\n      } catch (error) {\r\n        setIsVaultApproved(false)\r\n      }\r\n    }\r\n\r\n    checkApprovalStatus()\r\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\r\n\r\n  return { isVaultApproved, setLastUpdated }\r\n}\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { Pool } from 'state/types'\r\nimport { useApprovePool } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  pool: Pool\r\n  isLoading?: boolean\r\n}\r\n\r\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\r\n  const { sousId, stakingToken, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ApprovalAction\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface NotEnoughTokensModalProps {\r\n  tokenSymbol: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <Modal\r\n      title={t('%symbol% required', { symbol: tokenSymbol })}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Text color=\"failure\" bold>\r\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\r\n      </Text>\r\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\r\n      <Text>\r\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\r\n          symbol: tokenSymbol,\r\n        })}\r\n      </Text>\r\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\r\n        {t('Buy')} {tokenSymbol}\r\n      </Button>\r\n      <StyledLink href=\"https://yieldwatch.net\" external>\r\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\r\n          {t('Locate Assets')}\r\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\r\n        </Button>\r\n      </StyledLink>\r\n      <Button variant=\"text\" onClick={onDismiss}>\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default NotEnoughTokensModal\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from '@pancakeswap/uikit'\r\n\r\ninterface PercentageButtonProps {\r\n  onClick: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\r\n  return (\r\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\r\n      {children}\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nexport default PercentageButton\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport BigNumber from 'bignumber.js'\r\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousStakeBnb = async (sousChefContract, amount) => {\r\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await stakeFarm(masterChefContract, 0, amount)\r\n      } else if (isUsingBnb) {\r\n        await sousStakeBnb(sousChefContract, amount)\r\n      } else {\r\n        await sousStake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n    },\r\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakePool\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nconst sousUnstake = async (sousChefContract, amount, decimals) => {\r\n  const tx = await sousChefContract.withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst sousEmergencyUnstake = async (sousChefContract) => {\r\n  const tx = await sousChefContract.emergencyWithdraw()\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useUnstakePool = (sousId, enableEmergencyWithdraw = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n  const sousChefContract = useSousChef(sousId)\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string, decimals: number) => {\r\n      if (sousId === 0) {\r\n        await unstakeFarm(masterChefContract, 0, amount)\r\n      } else if (enableEmergencyWithdraw) {\r\n        await sousEmergencyUnstake(sousChefContract)\r\n      } else {\r\n        await sousUnstake(sousChefContract, amount, decimals)\r\n      }\r\n      dispatch(updateUserStakedBalance(sousId, account))\r\n      dispatch(updateUserBalance(sousId, account))\r\n      dispatch(updateUserPendingReward(sousId, account))\r\n    },\r\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakePool\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport PercentageButton from './PercentageButton'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\nimport useUnstakePool from '../../../hooks/useUnstakePool'\r\n\r\ninterface StakeModalProps {\r\n  isBnbPool: boolean\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakingTokenPrice: number\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledLink = styled(Link)`\r\n  width: 100%;\r\n`\r\n\r\nconst StakeModal: React.FC<StakeModalProps> = ({\r\n  isBnbPool,\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakingTokenPrice,\r\n  isRemovingStake = false,\r\n  onDismiss,\r\n}) => {\r\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\r\n  const [percent, setPercent] = useState(0)\r\n  const getCalculatedStakingLimit = () => {\r\n    if (isRemovingStake) {\r\n      return userData.stakedBalance\r\n    }\r\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\r\n  }\r\n\r\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\r\n\r\n  useEffect(() => {\r\n    if (stakingLimit.gt(0) && !isRemovingStake) {\r\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\r\n    }\r\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\r\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\r\n      setPercent(Math.min(percentage, 100))\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      try {\r\n        await onUnstake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Unstaked')}!`,\r\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\r\n            symbol: earningToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      try {\r\n        // staking\r\n        await onStake(stakeAmount, stakingToken.decimals)\r\n        toastSuccess(\r\n          `${t('Staked')}!`,\r\n          t('Your %symbol% funds have been staked in the pool!', {\r\n            symbol: stakingToken.symbol,\r\n          }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {stakingLimit.gt(0) && !isRemovingStake && (\r\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\r\n          {t('Max stake for this pool: %amount% %token%', {\r\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\r\n        isWarning={hasReachedStakeLimit}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      {hasReachedStakeLimit && (\r\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\r\n          {t('Maximum total stake: %amount% %token%', {\r\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\r\n            token: stakingToken.symbol,\r\n          })}\r\n        </Text>\r\n      )}\r\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', {\r\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\r\n        })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\r\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\r\n      </Flex>\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <StyledLink external href={BASE_EXCHANGE_URL}>\r\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\r\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n          </Button>\r\n        </StyledLink>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../Modals/StakeModal'\r\n\r\ninterface StakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  stakedBalance: BigNumber\r\n  isBnbPool: boolean\r\n  isStaked: ConstrainBoolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst StakeAction: React.FC<StakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  stakedBalance,\r\n  isBnbPool,\r\n  isStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  const renderStakeAction = () => {\r\n    return isStaked ? (\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n        <Flex flexDirection=\"column\">\r\n          <>\r\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\r\n            {stakingTokenPrice !== 0 && (\r\n              <Text fontSize=\"12px\" color=\"textSubtle\">\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={stakedTokenDollarBalance}\r\n                  prefix=\"~\"\r\n                  unit=\" USD\"\r\n                />\r\n              </Text>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        <Flex>\r\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n            <MinusIcon color=\"primary\" width=\"24px\" />\r\n          </IconButton>\r\n          {reachStakingLimit ? (\r\n            <span ref={targetRef}>\r\n              <IconButton variant=\"secondary\" disabled>\r\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n              </IconButton>\r\n            </span>\r\n          ) : (\r\n            <IconButton\r\n              variant=\"secondary\"\r\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\r\n              disabled={isFinished}\r\n            >\r\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n            </IconButton>\r\n          )}\r\n        </Flex>\r\n        {tooltipVisible && tooltip}\r\n      </Flex>\r\n    ) : (\r\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n        {t('Stake')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default StakeAction\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useAppDispatch } from 'state'\r\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\r\nimport { DEFAULT_GAS_LIMIT } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nconst harvestPool = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit('0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst harvestPoolBnb = async (sousChefContract) => {\r\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO })\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvestFarm(masterChefContract, 0)\r\n    } else if (isUsingBnb) {\r\n      await harvestPoolBnb(sousChefContract)\r\n    } else {\r\n      await harvestPool(sousChefContract)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestPool\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Text,\r\n  Button,\r\n  Heading,\r\n  Flex,\r\n  AutoRenewIcon,\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  HelpIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { Token } from 'config/constants/types'\r\nimport { formatNumber } from 'utils/formatBalance'\r\nimport useHarvestPool from '../../../hooks/useHarvestPool'\r\nimport useStakePool from '../../../hooks/useStakePool'\r\n\r\ninterface CollectModalProps {\r\n  formattedBalance: string\r\n  fullBalance: string\r\n  earningToken: Token\r\n  earningsDollarValue: number\r\n  sousId: number\r\n  isBnbPool: boolean\r\n  isCompoundPool?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst CollectModal: React.FC<CollectModalProps> = ({\r\n  formattedBalance,\r\n  fullBalance,\r\n  earningToken,\r\n  earningsDollarValue,\r\n  sousId,\r\n  isBnbPool,\r\n  isCompoundPool = false,\r\n  onDismiss,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\r\n  const { onStake } = useStakePool(sousId, isBnbPool)\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text mb=\"12px\">{t('Compound: collect and restake FARM into pool.')}</Text>\r\n      <Text>{t('Harvest: collect FARM and send to wallet')}</Text>\r\n    </>,\r\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  const handleHarvestConfirm = async () => {\r\n    setPendingTx(true)\r\n    // compounding\r\n    if (shouldCompound) {\r\n      try {\r\n        await onStake(fullBalance, earningToken.decimals)\r\n        toastSuccess(\r\n          `${t('Compounded')}!`,\r\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // harvesting\r\n      try {\r\n        await onReward()\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\r\n        )\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      } catch (e) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        console.error(e)\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      {isCompoundPool && (\r\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\r\n          <ButtonMenu\r\n            activeIndex={shouldCompound ? 0 : 1}\r\n            scale=\"sm\"\r\n            variant=\"subtle\"\r\n            onItemClick={(index) => setShouldCompound(!index)}\r\n          >\r\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\r\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\r\n          </ButtonMenu>\r\n          <Flex ml=\"10px\" ref={targetRef}>\r\n            <HelpIcon color=\"textSubtle\" />\r\n          </Flex>\r\n          {tooltipVisible && tooltip}\r\n        </Flex>\r\n      )}\r\n\r\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\r\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Heading>\r\n            {formattedBalance} {earningToken.symbol}\r\n          </Heading>\r\n          {earningsDollarValue > 0 && (\r\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\r\n          )}\r\n        </Flex>\r\n      </Flex>\r\n\r\n      <Button\r\n        mt=\"8px\"\r\n        onClick={handleHarvestConfirm}\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\r\n        {t('Close Window')}\r\n      </Button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CollectModal\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Token } from 'config/constants/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport CollectModal from '../Modals/CollectModal'\r\n\r\ninterface HarvestActionsProps {\r\n  earnings: BigNumber\r\n  earningToken: Token\r\n  sousId: number\r\n  earningTokenPrice: number\r\n  isBnbPool: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\r\n  earnings,\r\n  earningToken,\r\n  sousId,\r\n  isBnbPool,\r\n  earningTokenPrice,\r\n  isLoading = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n\r\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const hasEarnings = earnings.toNumber() > 0\r\n  const isCompoundPool = sousId === 0\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\r\n      <Flex flexDirection=\"column\">\r\n        {isLoading ? (\r\n          <Skeleton width=\"80px\" height=\"48px\" />\r\n        ) : (\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        )}\r\n      </Flex>\r\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n        {isCompoundPool ? t('Collect') : t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { Pool } from 'state/types'\r\nimport ApprovalAction from './ApprovalAction'\r\nimport StakeActions from './StakeActions'\r\nimport HarvestActions from './HarvestActions'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\ninterface CardActionsProps {\r\n  pool: Pool\r\n  stakedBalance: BigNumber\r\n}\r\n\r\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\r\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\r\n  // Pools using native BNB behave differently than pools using a token\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const { t } = useTranslation()\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  const needsApproval = !allowance.gt(0) && !isBnbPool\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isLoading = !userData\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        {harvest && (\r\n          <>\r\n            <Box display=\"inline\">\r\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {`${earningToken.symbol} `}\r\n              </InlineText>\r\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n                {t('Earned')}\r\n              </InlineText>\r\n            </Box>\r\n            <HarvestActions\r\n              earnings={earnings}\r\n              earningToken={earningToken}\r\n              sousId={sousId}\r\n              earningTokenPrice={earningTokenPrice}\r\n              isBnbPool={isBnbPool}\r\n              isLoading={isLoading}\r\n            />\r\n          </>\r\n        )}\r\n        <Box display=\"inline\">\r\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\r\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {needsApproval ? (\r\n          <ApprovalAction pool={pool} isLoading={isLoading} />\r\n        ) : (\r\n          <StakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            stakedBalance={stakedBalance}\r\n            isBnbPool={isBnbPool}\r\n            isStaked={isStaked}\r\n          />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from './AprRow'\r\nimport { StyledCard, StyledCardInner } from './StyledCard'\r\nimport CardFooter from './CardFooter'\r\nimport StyledCardHeader from './StyledCardHeader'\r\nimport CardActions from './CardActions'\r\n\r\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\r\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const accountHasStakedBalance = stakedBalance.gt(0)\r\n\r\n  return (\r\n    <StyledCard\r\n      isFinished={isFinished && sousId !== 0}\r\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\r\n    >\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasStakedBalance}\r\n          earningToken={earningToken}\r\n          stakingToken={stakingToken}\r\n          isFinished={isFinished && sousId !== 0}\r\n        />\r\n        <CardBody>\r\n          <AprRow pool={pool} />\r\n          <Flex mt=\"24px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </CardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PoolCard\r\n","import React from 'react'\r\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useVaultApprove } from '../../../hooks/useApprove'\r\n\r\ninterface ApprovalActionProps {\r\n  setLastUpdated: () => void\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Skeleton width=\"100%\" height=\"52px\" />\r\n      ) : (\r\n        <Button\r\n          isLoading={requestedApproval}\r\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          disabled={requestedApproval}\r\n          onClick={handleApprove}\r\n          width=\"100%\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default VaultApprovalAction\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport getTimePeriods from 'utils/getTimePeriods'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\r\n  const { t } = useTranslation()\r\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\r\n\r\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\r\n}\r\n\r\nexport default WithdrawalFeeTimer\r\n","import React from 'react'\r\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\r\n\r\ninterface UnstakingFeeCountdownRowProps {\r\n  isTableVariant?: boolean\r\n}\r\n\r\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    fees: { withdrawalFee, withdrawalFeePeriod },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100 || '-'\r\n//   // console.log('withdrawalFee:',withdrawalFee);\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text> \r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new FARM in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\r\n    parseInt(lastDepositedTime, 10),\r\n    userShares,\r\n    withdrawalFeePeriod,\r\n  )\r\n\r\n  // The user has made a deposit, but has no fee\r\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\r\n\r\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\r\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\r\n\r\n  const getRowText = () => {\r\n    if (noFeeToPay) {\r\n        // // console.log('noFeeToPay:',noFeeToPay);\r\n      return t('Unstaking Fee').toLowerCase();\r\n    }\r\n    if (shouldShowTimer) {\r\n      return t('unstaking fee until')\r\n    }\r\n    return t('unstaking fee if withdrawn within 72h')\r\n  }\r\n\r\n\r\n  return (\r\n    <Flex\r\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\r\n      justifyContent=\"space-between\"\r\n      flexDirection={isTableVariant ? 'column' : 'row'}\r\n    >\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\r\n      </TooltipText>\r\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default UnstakingFeeCountdownRow\r\n","import React from 'react'\r\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\n\r\ninterface FeeSummaryProps {\r\n  stakingTokenSymbol: string\r\n  stakeAmount: string\r\n}\r\n\r\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    fees: { withdrawalFee },\r\n  } = useCakeVault()\r\n  const feeAsDecimal = withdrawalFee / 100\r\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Text bold mb=\"4px\">\r\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\r\n      </Text>\r\n      <Text>\r\n        {t(\r\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new FARM in the pool.',\r\n        )}\r\n      </Text>\r\n    </>,\r\n    { placement: 'top-start' },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\r\n        {tooltipVisible && tooltip}\r\n        <TooltipText ref={targetRef} small>\r\n          {t('Unstaking Fee')}\r\n        </TooltipText>\r\n        <Text fontSize=\"14px\">\r\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\r\n        </Text>\r\n      </Flex>\r\n      <UnstakingFeeCountdownRow />\r\n    </>\r\n  )\r\n} \r\n\r\nexport default FeeSummary\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\nimport { fetchCakeVaultUserData } from 'state/pools'\r\nimport { Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { convertCakeToShares } from '../../helpers'\r\nimport FeeSummary from './FeeSummary'\r\n\r\ninterface VaultStakeModalProps {\r\n  pool: Pool\r\n  stakingMax: BigNumber\r\n  isRemovingStake?: boolean\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst StyledButton = styled(Button)`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst callOptions = {\r\n  gasLimit: 380000,\r\n}\r\n\r\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\r\n  const dispatch = useAppDispatch()\r\n  const { stakingToken } = pool\r\n  const { account } = useWeb3React()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const {\r\n    userData: { lastDepositedTime, userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { t } = useTranslation()\r\n  const { theme } = useTheme()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const [stakeAmount, setStakeAmount] = useState('')\r\n  const [percent, setPercent] = useState(0)\r\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const usdValueStaked =\r\n    cakePriceBusd.gt(0) && stakeAmount ? formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber()) : ''\r\n\r\n  const handleStakeInputChange = (input: string) => {\r\n    if (input) {\r\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\r\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\r\n      setPercent(percentage > 100 ? 100 : percentage)\r\n    } else {\r\n      setPercent(0)\r\n    }\r\n    setStakeAmount(input)\r\n  }\r\n\r\n  const handleChangePercent = (sliderPercent: number) => {\r\n    if (sliderPercent > 0) {\r\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\r\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\r\n      setStakeAmount(amountToStake)\r\n    } else {\r\n      setStakeAmount('')\r\n    }\r\n    setPercent(sliderPercent)\r\n  }\r\n\r\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\r\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 FARM or less\r\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\r\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\r\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\r\n\r\n    if (isWithdrawingAll) {\r\n      try {\r\n        const tx = await cakeVaultContract.withdrawAll(callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    } else {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      try {\r\n        const tx = await cakeVaultContract.withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString(), callOptions)\r\n        const receipt = await tx.wait()\r\n        if (receipt.status) {\r\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n          setPendingTx(false)\r\n          onDismiss()\r\n          dispatch(fetchCakeVaultUserData({ account }))\r\n        }\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n        setPendingTx(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\r\n    setPendingTx(true)\r\n    try {\r\n      // .toString() being called to fix a BigNumber error in prod\r\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\r\n      const tx = await cakeVaultContract.deposit(convertedStakeAmount.toString(), callOptions)\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n        dispatch(fetchCakeVaultUserData({ account }))\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  const handleConfirmClick = async () => {\r\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\r\n    if (isRemovingStake) {\r\n      // unstaking\r\n      handleWithdrawal(convertedStakeAmount)\r\n    } else {\r\n      // staking\r\n      handleDeposit(convertedStakeAmount)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\r\n      onDismiss={onDismiss}\r\n      headerBackground={theme.colors.gradients.cardHeader}\r\n    >\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\r\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\r\n        <Flex alignItems=\"center\" minWidth=\"70px\">\r\n          <Image\r\n            src={`/images/tokens/${getAddress(stakingToken.address)}.png`}\r\n            width={24}\r\n            height={24}\r\n            alt={stakingToken.symbol}\r\n          />\r\n          <Text ml=\"4px\" bold>\r\n            {stakingToken.symbol}\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <BalanceInput\r\n        value={stakeAmount}\r\n        onUserInput={handleStakeInputChange}\r\n        currencyValue={cakePriceBusd.gt(0) && `~${usdValueStaked || 0} USD`}\r\n        decimals={stakingToken.decimals}\r\n      />\r\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\r\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\r\n      </Text>\r\n      <Slider\r\n        min={0}\r\n        max={100}\r\n        value={percent}\r\n        onValueChanged={handleChangePercent}\r\n        name=\"stake\"\r\n        valueLabel={`${percent}%`}\r\n        step={1}\r\n      />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\r\n          25%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\r\n          50%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\r\n          75%\r\n        </StyledButton>\r\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\r\n          {t('Max')}\r\n        </StyledButton>\r\n      </Flex>\r\n      {isRemovingStake && hasUnstakingFee && (\r\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\r\n      )}\r\n      <Button\r\n        isLoading={pendingTx}\r\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n        onClick={handleConfirmClick}\r\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\r\n        mt=\"24px\"\r\n      >\r\n        {pendingTx ? t('Confirming') : t('Confirm')}\r\n      </Button>\r\n      {!isRemovingStake && (\r\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\r\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n        </Button>\r\n      )}\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default VaultStakeModal\r\n","import React from 'react'\r\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport { convertSharesToCake } from '../../../helpers'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\n\r\ninterface HasStakeActionProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n}\r\n\r\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { stakingToken } = pool\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const stakedDollarValue = cakePriceBusd.gt(0)\r\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\r\n    : 0\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Flex flexDirection=\"column\">\r\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\r\n        <Text fontSize=\"12px\" color=\"textSubtle\">\r\n          {cakePriceBusd.gt(0) ? (\r\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\r\n          ) : (\r\n            <Skeleton mt=\"1px\" height={16} width={64} />\r\n          )}\r\n        </Text>\r\n      </Flex>\r\n      <Flex>\r\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"24px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\r\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\r\n        </IconButton>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HasSharesActions\r\n","import React from 'react'\r\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport VaultStakeModal from '../VaultStakeModal'\r\nimport HasSharesActions from './HasSharesActions'\r\n\r\ninterface VaultStakeActionsProps {\r\n  pool: Pool\r\n  stakingTokenBalance: BigNumber\r\n  accountHasSharesStaked: boolean\r\n  isLoading?: boolean\r\n}\r\n\r\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\r\n  pool,\r\n  stakingTokenBalance,\r\n  accountHasSharesStaked,\r\n  isLoading = false,\r\n}) => {\r\n  const { stakingToken } = pool\r\n  const { t } = useTranslation()\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const renderStakeAction = () => {\r\n    return accountHasSharesStaked ? (\r\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\r\n    ) : (\r\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\r\n    )\r\n  }\r\n\r\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\r\n}\r\n\r\nexport default VaultStakeActions\r\n","import BigNumber from 'bignumber.js'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport VaultApprovalAction from './VaultApprovalAction'\r\nimport VaultStakeActions from './VaultStakeActions'\r\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\r\n\r\nconst InlineText = styled(Text)`\r\n  display: inline;\r\n`\r\n\r\nconst CakeVaultCardActions: React.FC<{\r\n  pool: Pool\r\n  accountHasSharesStaked: boolean\r\n  isLoading: boolean\r\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\r\n  const { stakingToken, userData } = pool\r\n  const { t } = useTranslation()\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex flexDirection=\"column\">\r\n        <Box display=\"inline\">\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\r\n          </InlineText>\r\n          <InlineText\r\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\r\n            textTransform=\"uppercase\"\r\n            bold\r\n            fontSize=\"12px\"\r\n          >\r\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\r\n          </InlineText>\r\n        </Box>\r\n        {isVaultApproved ? (\r\n          <VaultStakeActions\r\n            isLoading={isLoading}\r\n            pool={pool}\r\n            stakingTokenBalance={stakingTokenBalance}\r\n            accountHasSharesStaked={accountHasSharesStaked}\r\n          />\r\n        ) : (\r\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\r\n        )}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCardActions\r\n","import React from 'react'\r\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\ninterface RecentCakeProfitBalanceProps {\r\n  cakeToDisplay: number\r\n  dollarValueToDisplay: number\r\n  dateStringToDisplay: string\r\n}\r\n\r\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\r\n  cakeToDisplay,\r\n  dollarValueToDisplay,\r\n  dateStringToDisplay,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" FARM\" />\r\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    {\r\n      placement: 'bottom-end',\r\n    },\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <TooltipText ref={targetRef} small>\r\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\r\n      </TooltipText>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitBalance\r\n","import React from 'react'\r\nimport { Flex, Text } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\r\n\r\nconst RecentCakeProfitCountdownRow = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    pricePerFullShare,\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    cakePriceBusd.toNumber(),\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n      <Text fontSize=\"14px\">{`${t('Recent FARM profit')}:`}</Text>\r\n      {hasAutoEarnings && (\r\n        <RecentCakeProfitBalance\r\n          cakeToDisplay={autoCakeToDisplay}\r\n          dollarValueToDisplay={autoUsdToDisplay}\r\n          dateStringToDisplay={dateStringToDisplay}\r\n        />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default RecentCakeProfitCountdownRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport tokens from 'config/constants/tokens'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport AprRow from '../PoolCard/AprRow'\r\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\r\nimport CardFooter from '../PoolCard/CardFooter'\r\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\r\nimport VaultCardActions from './VaultCardActions'\r\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\r\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\r\n\r\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\r\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\r\n`\r\n\r\ninterface CakeVaultProps {\r\n  pool: Pool\r\n  showStakedOnly: boolean\r\n}\r\n\r\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const { account } = useWeb3React()\r\n  const {\r\n    userData: { userShares, isLoading: isVaultUserDataLoading },\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const accountHasSharesStaked = userShares && userShares.gt(0)\r\n  const isLoading = !pool.userData || isVaultUserDataLoading\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n  if (showStakedOnly && !accountHasSharesStaked) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\r\n      <StyledCardInner>\r\n        <StyledCardHeader\r\n          isStaking={accountHasSharesStaked}\r\n          isAutoVault\r\n          earningToken={tokens.cake}\r\n          stakingToken={tokens.cake}\r\n        />\r\n        <StyledCardBody isLoading={isLoading}>\r\n          <AprRow pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n          <Box mt=\"24px\">\r\n            <RecentCakeProfitRow />\r\n          </Box>\r\n          <Box mt=\"8px\">\r\n            <UnstakingFeeCountdownRow />\r\n          </Box>\r\n          <Flex mt=\"32px\" flexDirection=\"column\">\r\n            {account ? (\r\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\r\n            ) : (\r\n              <>\r\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <UnlockButton />\r\n              </>\r\n            )}\r\n          </Flex>\r\n        </StyledCardBody>\r\n        <CardFooter pool={pool} account={account} />\r\n      </StyledCardInner>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CakeVaultCard\r\n","import React from 'react'\r\nimport { useRouteMatch, Link } from 'react-router-dom'\r\nimport {\r\n  ButtonMenu,\r\n  ButtonMenuItem,\r\n  Toggle,\r\n  Text,\r\n  Flex,\r\n  NotificationDot,\r\n  useMatchBreakpoints,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ToggleView, { ViewMode } from './ToggleView/ToggleView'\r\n\r\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\r\n  const { url, isExact } = useRouteMatch()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { t } = useTranslation()\r\n\r\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n\r\n  const liveOrFinishedSwitch = (\r\n    <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\r\n      <ButtonMenuItem as={Link} to={`${url}`}>\r\n        {t('Live')}\r\n      </ButtonMenuItem>\r\n      <NotificationDot show={hasStakeInFinishedPools}>\r\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n          {t('Finished')}\r\n        </ButtonMenuItem>\r\n      </NotificationDot>\r\n    </ButtonMenu>\r\n  )\r\n\r\n  const stakedOnlySwitch = (\r\n    <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\r\n      <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\r\n      <Text ml={['4px', '4px', '8px']}>{t('Staked only')}</Text>\r\n    </Flex>\r\n  )\r\n\r\n  if (isXs || isSm) {\r\n    return (\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\" mb=\"24px\">\r\n        <Flex width=\"100%\" justifyContent=\"space-between\">\r\n          {viewModeToggle}\r\n          {liveOrFinishedSwitch}\r\n        </Flex>\r\n        {stakedOnlySwitch}\r\n      </Flex>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex\r\n      alignItems=\"center\"\r\n      justifyContent={['space-around', 'space-around', 'flex-start']}\r\n      mb={['24px', '24px', '24px', '0px']}\r\n    >\r\n      {viewModeToggle}\r\n      {liveOrFinishedSwitch}\r\n      {stakedOnlySwitch}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default PoolTabButtons\r\n","import React, { useMemo, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVaultContract } from 'hooks/useContract'\r\nimport useTheme from 'hooks/useTheme'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\n\r\ninterface BountyModalProps {\r\n  onDismiss?: () => void\r\n  TooltipComponent: React.ElementType\r\n}\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\r\n  height: 1px;\r\n  margin: 16px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n  const { toastError, toastSuccess } = useToast()\r\n  const cakeVaultContract = useCakeVaultContract()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const callFeeAsDecimal = callFee / 100\r\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom',\r\n    tooltipPadding: { right: 15 },\r\n  })\r\n\r\n  const handleConfirmClick = async () => {\r\n    setPendingTx(true)\r\n    try {\r\n      const tx = await cakeVaultContract.harvest({ gasLimit: 300000 })\r\n      const receipt = await tx.wait()\r\n      if (receipt.status) {\r\n        toastSuccess(t('Bounty collected!'), t('FARM bounty has been sent to your wallet.'))\r\n        setPendingTx(false)\r\n        onDismiss()\r\n      }\r\n    } catch (error) {\r\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      setPendingTx(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\r\n      {tooltipVisible && tooltip}\r\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\r\n        <Text>{t('You’ll claim')}</Text>\r\n        <Flex flexDirection=\"column\">\r\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" FARM\" />\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              color=\"textSubtle\"\r\n              value={dollarBountyToDisplay}\r\n              decimals={2}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Text>\r\n        </Flex>\r\n      </Flex>\r\n      <Divider />\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Pool total pending yield')}\r\n        </Text>\r\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" FARM\" />\r\n      </Flex>\r\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Bounty')}\r\n        </Text>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {callFeeAsDecimal}%\r\n        </Text>\r\n      </Flex>\r\n      {account ? (\r\n        <Button\r\n          isLoading={pendingTx}\r\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n          onClick={handleConfirmClick}\r\n          mb=\"28px\"\r\n          id=\"autoCakeConfirmBounty\"\r\n        >\r\n          {pendingTx ? t('Confirming') : t('Confirm')}\r\n        </Button>\r\n      ) : (\r\n        <UnlockButton mb=\"28px\" />\r\n      )}\r\n      <Flex justifyContent=\"center\" alignItems=\"center\">\r\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n          {t('What’s this?')}\r\n        </Text>\r\n        <span ref={targetRef}>\r\n          <HelpIcon color=\"textSubtle\" />\r\n        </span>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default BountyModal\r\n","import React, { useMemo } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Text,\r\n  Flex,\r\n  HelpIcon,\r\n  Button,\r\n  Heading,\r\n  Skeleton,\r\n  useModal,\r\n  Box,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport BountyModal from './BountyModal'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  flex: 1;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 240px;\r\n  }\r\n`\r\n\r\nconst BountyCard = () => {\r\n  const { t } = useTranslation()\r\n  const {\r\n    estimatedCakeBountyReward,\r\n    fees: { callFee },\r\n  } = useCakeVault()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  const estimatedDollarBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\r\n  }, [cakePriceBusd, estimatedCakeBountyReward])\r\n\r\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\r\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\r\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\r\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\r\n\r\n//  // console.log('estimatedCakeBountyReward:',estimatedCakeBountyReward); \r\n\r\n  const TooltipComponent = ({ fee }: { fee: number }) => (\r\n    <>\r\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\r\n      <Text mb=\"16px\">\r\n        {t(\r\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto FARM Pool’s compounding function for everyone.',\r\n        )}\r\n      </Text>\r\n      <Text style={{ fontWeight: 'bold' }}>\r\n        {t('Auto-Compound Bounty: %fee%% of all Auto FARM pool users pending yield', { fee: fee / 100 })}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\r\n    placement: 'bottom-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {tooltipVisible && tooltip}\r\n      <StyledCard>\r\n        <CardBody>\r\n          <Flex flexDirection=\"column\">\r\n            <Flex alignItems=\"center\" mb=\"12px\">\r\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\r\n                {t('Auto FARM Bounty')}\r\n              </Text>\r\n              <Box ref={targetRef}>\r\n                <HelpIcon color=\"textSubtle\" />\r\n              </Box>\r\n            </Flex>\r\n          </Flex>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\r\n            <Flex flexDirection=\"column\" mr=\"12px\">\r\n              <Heading>\r\n                {hasFetchedCakeBounty ? (\r\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\r\n                ) : (\r\n                  <Skeleton height={20} width={96} mb=\"2px\" />\r\n                )}\r\n              </Heading>\r\n              {hasFetchedDollarBounty ? (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  value={dollarBountyToDisplay}\r\n                  decimals={2}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              ) : (\r\n                <Skeleton height={16} width={62} />\r\n              )}\r\n            </Flex>\r\n            <Button\r\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\r\n              onClick={onPresentBountyModal}\r\n              scale=\"sm\"\r\n              id=\"clickClaimVaultBounty\"\r\n            >\r\n              {t('Claim')}\r\n            </Button>\r\n          </Flex>\r\n        </CardBody>\r\n      </StyledCard>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BountyCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, HelpIcon, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ButtonText = styled(Text)`\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  margin-right: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst HelpButton = () => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\r\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\r\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\r\n          {t('Help')}\r\n        </ButtonText>\r\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\r\n      </Button>\r\n    </StyledLink>\r\n  )\r\n}\r\n\r\nexport default HelpButton\r\n","import { Flex, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\n\r\nconst BaseCell = styled.div`\r\n  color: black;\r\n\r\n  padding: 24px 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n`\r\n\r\nexport const CellContent = styled(Flex)`\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  max-height: 40px;\r\n  ${Text} {\r\n    line-height: 1;\r\n  }\r\n`\r\n\r\nexport default BaseCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface NameCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 5;\r\n  flex-direction: row;\r\n  padding-left: 12px;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 150px;\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\r\n  const {\r\n    userData: { userShares },\r\n  } = useCakeVault()\r\n  const hasVaultShares = userShares && userShares.gt(0)\r\n\r\n  const stakingTokenSymbol = stakingToken.symbol\r\n  const earningTokenSymbol = earningToken.symbol\r\n\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isStaked = stakedBalance.gt(0)\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\r\n\r\n  let title = `${t('Earn')} ${earningTokenSymbol}`\r\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\r\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isXs && !isSm)\r\n\r\n  if (isAutoVault) {\r\n    title = t('Auto FARM')\r\n    subtitle = t('Automatic restaking')\r\n  } else if (isManualCakePool) {\r\n    title = t('Manual FARM')\r\n    subtitle = `${t('Earn')} FARM ${t('Stake').toLocaleLowerCase()} FARM`\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isAutoVault ? (\r\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\r\n      ) : (\r\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\r\n      )}\r\n      <CellContent>\r\n        {showStakedTag && (\r\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\r\n            {t('Staked')}\r\n          </Text>\r\n        )}\r\n        <Text bold={!isXs && !isSm} small={isXs || isSm}>\r\n          {title}\r\n        </Text>\r\n        {showSubtitle && (\r\n          <Text fontSize=\"12px\" color=\"textSubtle\">\r\n            {subtitle}\r\n          </Text>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default NameCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useModal, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\n\r\ninterface EarningsCellProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 4.5;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex: 1 0 120px;\r\n  }\r\n`\r\n\r\nconst HelpIconWrapper = styled.div`\r\n  align-self: center;\r\n`\r\n\r\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice, isAutoVault } = pool\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto FARM vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = account && earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto FARM vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\r\n  const dateTimeLastAction = new Date(lastActionInMs)\r\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\r\n\r\n  const labelText = isAutoVault ? t('Recent FARM profit') : t('%asset% Earned', { asset: earningToken.symbol })\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    <>\r\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" FARM\" />\r\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\r\n      {t('Earned since your last action')}\r\n      <Text>{dateStringToDisplay}</Text>\r\n    </>,\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isManualCakePool}\r\n    />,\r\n  )\r\n\r\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentCollect()\r\n  }\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {labelText}\r\n        </Text>\r\n        {!userDataLoaded && account ? (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        ) : (\r\n          <>\r\n            {tooltipVisible && tooltip}\r\n            <Flex>\r\n              <Box mr=\"8px\" height=\"32px\" onClick={!isAutoVault && hasEarnings ? handleEarningsClick : undefined}>\r\n                <Balance\r\n                  mt=\"4px\"\r\n                  bold={!isXs && !isSm}\r\n                  fontSize={isXs || isSm ? '14px' : '16px'}\r\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\r\n                  decimals={hasEarnings ? 5 : 1}\r\n                  value={hasEarnings ? earningTokenBalance : 0}\r\n                />\r\n                {hasEarnings ? (\r\n                  <>\r\n                    {earningTokenPrice > 0 && (\r\n                      <Balance\r\n                        display=\"inline\"\r\n                        fontSize=\"12px\"\r\n                        color=\"textSubtle\"\r\n                        decimals={2}\r\n                        prefix=\"~\"\r\n                        value={earningTokenDollarBalance}\r\n                        unit=\" USD\"\r\n                      />\r\n                    )}\r\n                  </>\r\n                ) : (\r\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\r\n                    0 USD\r\n                  </Text>\r\n                )}\r\n              </Box>\r\n              {isAutoVault && hasEarnings && !isXs && !isSm && (\r\n                <HelpIconWrapper ref={targetRef}>\r\n                  <HelpIcon color=\"textSubtle\" />\r\n                </HelpIconWrapper>\r\n              )}\r\n            </Flex>\r\n          </>\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EarningsCell\r\n","import React from 'react'\r\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from '@pancakeswap/uikit'\r\nimport { BASE_EXCHANGE_URL } from 'config'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getAprData } from 'views/Pools/helpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface AprProps extends FlexProps {\r\n  pool: Pool\r\n  showIcon: boolean\r\n  performanceFee?: number\r\n}\r\n\r\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, performanceFee = 0, ...props }) => {\r\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, apr } = pool\r\n  const { t } = useTranslation()\r\n\r\n  const { apr: earningsPercentageToDisplay, roundingDecimals, compoundFrequency } = getAprData(pool, performanceFee)\r\n\r\n  const apyModalLink =\r\n    stakingToken.address && `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${getAddress(stakingToken.address)}`\r\n\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      tokenPrice={earningTokenPrice}\r\n      apr={apr}\r\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\r\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\r\n      earningTokenSymbol={earningToken.symbol}\r\n      roundingDecimals={roundingDecimals}\r\n      compoundFrequency={compoundFrequency}\r\n      performanceFee={performanceFee}\r\n    />,\r\n  )\r\n\r\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <Flex alignItems=\"center\" justifyContent=\"space-between\" {...props}>\r\n      {earningsPercentageToDisplay || isFinished ? (\r\n        <>\r\n          <Balance\r\n            onClick={openRoiModal}\r\n            fontSize=\"16px\"\r\n            isDisabled={isFinished}\r\n            value={isFinished ? 0 : earningsPercentageToDisplay}\r\n            decimals={2}\r\n            unit=\"%\"\r\n          />\r\n          {!isFinished && showIcon && (\r\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\r\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\r\n            </Button>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <Skeleton width=\"80px\" height=\"16px\" />\r\n      )}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\nimport Apr from '../Apr'\r\n\r\ninterface AprCellProps {\r\n  pool: Pool\r\n  performanceFee: number\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 1 0 50px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n  }\r\n`\r\n\r\nconst AprCell: React.FC<AprCellProps> = ({ pool, performanceFee }) => {\r\n  const { t } = useTranslation()\r\n  const { isXs, isSm } = useMatchBreakpoints()\r\n  const { isAutoVault } = pool\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {isAutoVault ? t('APY') : t('APR')}\r\n        </Text>\r\n        <Apr pool={pool} performanceFee={isAutoVault ? performanceFee : 0} showIcon={!isXs && !isSm} />\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default AprCell\r\n","import React, { useMemo } from 'react'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\nimport Balance from 'components/Balance'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface TotalStakedCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\r\n  const { t } = useTranslation()\r\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\r\n  const { totalCakeInVault } = useCakeVault()\r\n\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const totalStakedBalance = useMemo(() => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals])\r\n\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {t('Total staked')}\r\n        </Text>\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <Flex height=\"20px\" alignItems=\"center\">\r\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n          </Flex>\r\n        ) : (\r\n          <Skeleton width=\"80px\" height=\"16px\" />\r\n        )}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Link, Skeleton, Text, TimerIcon } from '@pancakeswap/uikit'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { Pool } from 'state/types'\r\nimport { useBlock } from 'state/hooks'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport BaseCell, { CellContent } from './BaseCell'\r\n\r\ninterface FinishCellProps {\r\n  pool: Pool\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex: 2 0 100px;\r\n`\r\n\r\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\r\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\r\n  const { currentBlock } = useBlock()\r\n  const { t } = useTranslation()\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isCakePool = sousId === 0\r\n\r\n  const renderBlocks = shouldShowBlockCountdown ? (\r\n    <Flex alignItems=\"center\">\r\n      <Flex flex=\"1.3\">\r\n        <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} />\r\n        <Text ml=\"4px\" textTransform=\"lowercase\">\r\n          {t('Blocks')}\r\n        </Text>\r\n      </Flex>\r\n      <Flex flex=\"1\">\r\n        <Link\r\n          external\r\n          href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          <TimerIcon ml=\"4px\" />\r\n        </Link>\r\n      </Flex>\r\n    </Flex>\r\n  ) : (\r\n    <Text>-</Text>\r\n  )\r\n\r\n  // A bit hacky way to determine if public data is loading relying on totalStaked\r\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\r\n  // anywhere else\r\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\r\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      <CellContent>\r\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\r\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\r\n        </Text>\r\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\r\n      </CellContent>\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default EndsInCell\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, ChevronDownIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BaseCell from './BaseCell'\r\n\r\ninterface ExpandActionCellProps {\r\n  expanded: boolean\r\n  isFullLayout: boolean\r\n}\r\n\r\nconst StyledCell = styled(BaseCell)`\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  flex: 1;\r\n  padding-right: 12px;\r\n  padding-left: 0px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex: 0 0 120px;\r\n    padding-right: 32px;\r\n    padding-left: 8px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 24px;\r\n`\r\n\r\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <StyledCell role=\"cell\">\r\n      {isFullLayout && (\r\n        <Text color=\"primary\" bold>\r\n          {expanded ? t('Hide') : t('Details')}\r\n        </Text>\r\n      )}\r\n      <ArrowIcon color=\"primary\" toggled={expanded} />\r\n    </StyledCell>\r\n  )\r\n}\r\n\r\nexport default TotalStakedCell\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 32px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    height: 130px;\r\n    max-height: 130px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n","import React from 'react'\r\nimport { Button, Text, useModal, Flex, TooltipText, useTooltip, Skeleton, Heading } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Pool } from 'state/types'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\r\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\r\n\r\ninterface HarvestActionProps extends Pool {\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\r\n  sousId,\r\n  poolCategory,\r\n  earningToken,\r\n  userData,\r\n  userDataLoaded,\r\n  isAutoVault,\r\n  earningTokenPrice,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\r\n  // These will be reassigned later if its Auto FARM vault\r\n  let earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\r\n  let earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\r\n  let hasEarnings = earnings.gt(0)\r\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\r\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\r\n  const isCompoundPool = sousId === 0\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n\r\n  // Auto FARM vault calculations\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    pricePerFullShare,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\r\n    account,\r\n    cakeAtLastUserAction,\r\n    userShares,\r\n    pricePerFullShare,\r\n    earningTokenPrice,\r\n  )\r\n\r\n  earningTokenBalance = isAutoVault ? autoCakeToDisplay : earningTokenBalance\r\n  hasEarnings = isAutoVault ? hasAutoEarnings : hasEarnings\r\n  earningTokenDollarBalance = isAutoVault ? autoUsdToDisplay : earningTokenDollarBalance\r\n\r\n  const [onPresentCollect] = useModal(\r\n    <CollectModal\r\n      formattedBalance={formattedBalance}\r\n      fullBalance={fullBalance}\r\n      earningToken={earningToken}\r\n      earningsDollarValue={earningTokenDollarBalance}\r\n      sousId={sousId}\r\n      isBnbPool={isBnbPool}\r\n      isCompoundPool={isCompoundPool}\r\n    />,\r\n  )\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Subtracted automatically from each yield harvest and burned.'),\r\n    { placement: 'bottom-start' },\r\n  )\r\n\r\n  const actionTitle = isAutoVault ? (\r\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n      {t('Recent FARM profit')}\r\n    </Text>\r\n  ) : (\r\n    <>\r\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n        {earningToken.symbol}{' '}\r\n      </Text>\r\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n        {t('Earned')}\r\n      </Text>\r\n    </>\r\n  )\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Balance pt=\"8px\" lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={0} />\r\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>{actionTitle}</ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>{actionTitle}</ActionTitles>\r\n      <ActionContent>\r\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n          <>\r\n            {hasEarnings ? (\r\n              <>\r\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\r\n                {earningTokenPrice > 0 && (\r\n                  <Balance\r\n                    display=\"inline\"\r\n                    fontSize=\"12px\"\r\n                    color=\"textSubtle\"\r\n                    decimals={2}\r\n                    prefix=\"~\"\r\n                    value={earningTokenDollarBalance}\r\n                    unit=\" USD\"\r\n                  />\r\n                )}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Heading color=\"textDisabled\">0</Heading>\r\n                <Text fontSize=\"12px\" color=\"textDisabled\">\r\n                  0 USD\r\n                </Text>\r\n              </>\r\n            )}\r\n          </>\r\n        </Flex>\r\n        {isAutoVault ? (\r\n          <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\r\n            <UnstakingFeeCountdownRow isTableVariant />\r\n            <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n              {tooltipVisible && tooltip}\r\n              <TooltipText ref={targetRef} small>\r\n                {t('Performance Fee')}\r\n              </TooltipText>\r\n              <Flex alignItems=\"center\">\r\n                <Text ml=\"4px\" small>\r\n                  {performanceFee / 100}%\r\n                </Text>\r\n              </Flex>\r\n            </Flex>\r\n          </Flex>\r\n        ) : (\r\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\r\n            {isCompoundPool ? t('Collect') : t('Harvest')}\r\n          </Button>\r\n        )}\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from '@pancakeswap/uikit'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport { Pool } from 'state/types'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { PoolCategory } from 'config/constants/types'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\r\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\r\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\r\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\r\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps {\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    stakingLimit,\r\n    isFinished,\r\n    poolCategory,\r\n    userData,\r\n    stakingTokenPrice,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\r\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\r\n    stakingTokenContract,\r\n    sousId,\r\n    earningToken.symbol,\r\n  )\r\n\r\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\r\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\r\n    useVaultApprove(setLastUpdated)\r\n\r\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\r\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\r\n\r\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\r\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\r\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\r\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\r\n\r\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\r\n\r\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\r\n  const stakedTokenDollarBalance = getBalanceNumber(\r\n    stakedBalance.multipliedBy(stakingTokenPrice),\r\n    stakingToken.decimals,\r\n  )\r\n\r\n  const {\r\n    userData: { userShares },\r\n    pricePerFullShare,\r\n  } = useCakeVault()\r\n\r\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const hasSharesStaked = userShares && userShares.gt(0)\r\n  const isVaultWithShares = isAutoVault && hasSharesStaked\r\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\r\n\r\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\r\n\r\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\r\n\r\n  const [onPresentStake] = useModal(\r\n    <StakeModal\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\r\n\r\n  const [onPresentUnstake] = useModal(\r\n    <StakeModal\r\n      stakingTokenBalance={stakingTokenBalance}\r\n      isBnbPool={isBnbPool}\r\n      pool={pool}\r\n      stakingTokenPrice={stakingTokenPrice}\r\n      isRemovingStake\r\n    />,\r\n  )\r\n\r\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\r\n\r\n  const onStake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultStake()\r\n    } else {\r\n      onPresentStake()\r\n    }\r\n  }\r\n\r\n  const onUnstake = () => {\r\n    if (isAutoVault) {\r\n      onPresentVaultUnstake()\r\n    } else {\r\n      onPresentUnstake()\r\n    }\r\n  }\r\n\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\r\n    { placement: 'bottom' },\r\n  )\r\n\r\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataLoaded) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Start staking')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (needsApproval) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {t('Enable pool')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n            {t('Enable')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  // Wallet connected, user data loaded and approved\r\n  if (isNotVaultAndHasStake || isVaultWithShares) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n            {stakingToken.symbol}{' '}\r\n          </Text>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\r\n            <Balance\r\n              lineHeight=\"1\"\r\n              bold\r\n              fontSize=\"20px\"\r\n              decimals={5}\r\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\r\n            />\r\n            <Balance\r\n              fontSize=\"12px\"\r\n              display=\"inline\"\r\n              color=\"textSubtle\"\r\n              decimals={2}\r\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\r\n              unit=\" USD\"\r\n              prefix=\"~\"\r\n            />\r\n          </Flex>\r\n          <IconButtonWrapper>\r\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\r\n              <MinusIcon color=\"primary\" width=\"14px\" />\r\n            </IconButton>\r\n            {reachStakingLimit ? (\r\n              <span ref={targetRef}>\r\n                <IconButton variant=\"secondary\" disabled>\r\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\r\n                </IconButton>\r\n              </span>\r\n            ) : (\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n                disabled={isFinished}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            )}\r\n          </IconButtonWrapper>\r\n          {tooltipVisible && tooltip}\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\r\n          {t('Stake')}{' '}\r\n        </Text>\r\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\r\n          {stakingToken.symbol}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\r\n          variant=\"secondary\"\r\n          disabled={isFinished}\r\n        >\r\n          {t('Stake')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  HelpIcon,\r\n  Link,\r\n  LinkExternal,\r\n  MetamaskIcon,\r\n  Skeleton,\r\n  Text,\r\n  TimerIcon,\r\n  useTooltip,\r\n} from '@pancakeswap/uikit'\r\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\r\nimport { getBscScanBlockCountdownUrl } from 'utils/bscscan'\r\nimport { useBlock, useCakeVault } from 'state/hooks'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\r\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { registerToken } from 'utils/wallet'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\r\nimport Harvest from './Harvest'\r\nimport Stake from './Stake'\r\nimport Apr from '../Apr'\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 700px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 700px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.dropdown};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: center;\r\n  padding: 12px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\ntype MediaBreakpoints = {\r\n  isXs: boolean\r\n  isSm: boolean\r\n  isMd: boolean\r\n  isLg: boolean\r\n  isXl: boolean\r\n}\r\n\r\ninterface ActionPanelProps {\r\n  account: string\r\n  pool: Pool\r\n  userDataLoaded: boolean\r\n  expanded: boolean\r\n  breakpoints: MediaBreakpoints\r\n}\r\n\r\nconst InfoSection = styled(Box)`\r\n  flex-grow: 0;\r\n  flex-shrink: 0;\r\n  flex-basis: auto;\r\n  padding: 8px 8px;\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding: 0;\r\n    flex-basis: 230px;\r\n  }\r\n`\r\n\r\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\r\n  const {\r\n    sousId,\r\n    stakingToken,\r\n    earningToken,\r\n    totalStaked,\r\n    startBlock,\r\n    endBlock,\r\n    stakingLimit,\r\n    contractAddress,\r\n    isAutoVault,\r\n  } = pool\r\n  const { t } = useTranslation()\r\n  const poolContractAddress = getAddress(contractAddress)\r\n  const cakeVaultContractAddress = getCakeVaultAddress()\r\n  const { currentBlock } = useBlock()\r\n  const { isXs, isSm, isMd } = breakpoints\r\n  const showSubtitle = (isXs || isSm) && sousId === 0\r\n\r\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\r\n    getPoolBlockInfo(pool, currentBlock)\r\n\r\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\r\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\r\n  const imageSrc = `${BASE_URL}/images/tokens/${tokenAddress}.png`\r\n\r\n  const {\r\n    totalCakeInVault,\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const isManualCakePool = sousId === 0\r\n\r\n  const getTotalStakedBalance = () => {\r\n    if (isAutoVault) {\r\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\r\n    }\r\n    if (isManualCakePool) {\r\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\r\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\r\n    }\r\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\r\n  }\r\n\r\n  const {\r\n    targetRef: totalStakedTargetRef,\r\n    tooltip: totalStakedTooltip,\r\n    tooltipVisible: totalStakedTooltipVisible,\r\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\r\n    placement: 'bottom',\r\n  })\r\n\r\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\r\n  const autoTooltipText = t(\r\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\r\n  )\r\n\r\n  const {\r\n    targetRef: tagTargetRef,\r\n    tooltip: tagTooltip,\r\n    tooltipVisible: tagTooltipVisible,\r\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\r\n    placement: 'bottom-start',\r\n  })\r\n\r\n  const maxStakeRow = stakingLimit.gt(0) ? (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n      <Text>{t('Max. stake per user')}:</Text>\r\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\r\n    </Flex>\r\n  ) : null\r\n\r\n  const blocksRow =\r\n    blocksRemaining || blocksUntilStart ? (\r\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\r\n        <Flex>\r\n          <Link external href={getBscScanBlockCountdownUrl(hasPoolStarted ? endBlock : startBlock)}>\r\n            <Balance fontSize=\"16px\" value={blocksToDisplay} decimals={0} color=\"primary\" />\r\n            <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\r\n              {t('Blocks')}\r\n            </Text>\r\n            <TimerIcon ml=\"4px\" color=\"primary\" />\r\n          </Link>\r\n        </Flex>\r\n      </Flex>\r\n    ) : (\r\n      <Skeleton width=\"56px\" height=\"16px\" />\r\n    )\r\n\r\n  const aprRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\r\n      <Apr pool={pool} showIcon performanceFee={isAutoVault ? performanceFeeAsDecimal : 0} />\r\n    </Flex>\r\n  )\r\n\r\n  const totalStakedRow = (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\r\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\r\n      <Flex alignItems=\"center\">\r\n        {totalStaked && totalStaked.gte(0) ? (\r\n          <>\r\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\r\n            <span ref={totalStakedTargetRef}>\r\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\r\n            </span>\r\n          </>\r\n        ) : (\r\n          <Skeleton width=\"56px\" height=\"16px\" />\r\n        )}\r\n        {totalStakedTooltipVisible && totalStakedTooltip}\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n\r\n  return (\r\n    <StyledActionPanel expanded={expanded}>\r\n      <InfoSection>\r\n        {maxStakeRow}\r\n        {(isXs || isSm) && aprRow}\r\n        {(isXs || isSm || isMd) && totalStakedRow}\r\n        {shouldShowBlockCountdown && blocksRow}\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={`https://pancakeswap.info/token/${getAddress(earningToken.address)}`} bold={false}>\r\n            {t('See Token Info')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n          <LinkExternal href={earningToken.projectLink} bold={false}>\r\n            {t('View Project Site')}\r\n          </LinkExternal>\r\n        </Flex>\r\n        {poolContractAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <LinkExternal\r\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\r\n              bold={false}\r\n            >\r\n              {t('View Contract')}\r\n            </LinkExternal>\r\n          </Flex>\r\n        )}\r\n        {account && isMetaMaskInScope && tokenAddress && (\r\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\r\n            <Button\r\n              variant=\"text\"\r\n              p=\"0\"\r\n              height=\"auto\"\r\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\r\n            >\r\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\r\n              <MetamaskIcon ml=\"4px\" />\r\n            </Button>\r\n          </Flex>\r\n        )}\r\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\r\n        {tagTooltipVisible && tagTooltip}\r\n        <span ref={tagTargetRef}>\r\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\r\n        </span>\r\n      </InfoSection>\r\n      <ActionContainer>\r\n        {showSubtitle && (\r\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\r\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} FARM ${t('Stake').toLocaleLowerCase()} FARM`}\r\n          </Text>\r\n        )}\r\n        <Harvest {...pool} userDataLoaded={userDataLoaded} />\r\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\r\n      </ActionContainer>\r\n    </StyledActionPanel>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { Pool } from 'state/types'\r\nimport { useCakeVault } from 'state/hooks'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport NameCell from './Cells/NameCell'\r\nimport EarningsCell from './Cells/EarningsCell'\r\nimport AprCell from './Cells/AprCell'\r\nimport TotalStakedCell from './Cells/TotalStakedCell'\r\nimport EndsInCell from './Cells/EndsInCell'\r\nimport ExpandActionCell from './Cells/ExpandActionCell'\r\nimport ActionPanel from './ActionPanel/ActionPanel'\r\n\r\ninterface PoolRowProps {\r\n  pool: Pool\r\n  account: string\r\n  userDataLoaded: boolean\r\n}\r\n\r\nconst StyledRow = styled.div`\r\n  background-color: transparent;\r\n  display: flex;\r\n  cursor: pointer;\r\n`\r\n\r\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\r\n  const { isXs, isSm, isMd, isLg, isXl } = useMatchBreakpoints()\r\n  const [expanded, setExpanded] = useState(false)\r\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\r\n\r\n  const toggleExpanded = () => {\r\n    setExpanded((prev) => !prev)\r\n  }\r\n\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n//   // console.log(\"rockit\",performanceFeeAsDecimal)\r\n\r\n  return (\r\n    <>\r\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\r\n        <NameCell pool={pool} />\r\n        <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\r\n        <AprCell pool={pool} performanceFee={performanceFeeAsDecimal} />\r\n        {(isLg || isXl) && <TotalStakedCell pool={pool} />}\r\n        {isXl && <EndsInCell pool={pool} />}\r\n        <ExpandActionCell expanded={expanded} isFullLayout={isMd || isLg || isXl} />\r\n      </StyledRow>\r\n      {shouldRenderActionPanel && (\r\n        <ActionPanel\r\n          account={account}\r\n          pool={pool}\r\n          userDataLoaded={userDataLoaded}\r\n          expanded={expanded}\r\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PoolRow\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, ChevronUpIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport PoolRow from './PoolRow'\r\n\r\ninterface PoolsTableProps {\r\n  pools: Pool[]\r\n  userDataLoaded: boolean\r\n  account: string\r\n}\r\n\r\nconst StyledTable = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n\r\n  background-color: ${({ theme }) => theme.card.background};\r\n  > div:not(:last-child) {\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\r\n  }\r\n`\r\n\r\nconst StyledTableBorder = styled.div`\r\n  border-radius: ${({ theme }) => theme.radii.card};\r\n  background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  padding: 1px 1px 3px 1px;\r\n  background-size: 400% 400%;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\r\n  const { t } = useTranslation()\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n  return (\r\n    <StyledTableBorder>\r\n      <StyledTable role=\"table\" ref={tableWrapperEl}>\r\n        {pools.map((pool) => (\r\n          <PoolRow\r\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\r\n            pool={pool}\r\n            account={account}\r\n            userDataLoaded={userDataLoaded}\r\n          />\r\n        ))}\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </StyledTable>\r\n    </StyledTableBorder>\r\n  )\r\n}\r\n\r\nexport default PoolsTable\r\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, Flex, Image, Text } from '@pancakeswap/uikit'\r\nimport orderBy from 'lodash/orderBy'\r\nimport partition from 'lodash/partition'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { usePools, useFetchCakeVault, useFetchPublicPoolsData, usePollFarmsData, useCakeVault } from 'state/hooks'\r\nimport { latinise } from 'utils/latinise'\r\nimport FlexLayout from 'components/Layout/Flex'\r\nimport Page from 'components/Layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport SearchInput from 'components/SearchInput'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport { Pool } from 'state/types'\r\nimport PoolCard from './components/PoolCard'\r\nimport CakeVaultCard from './components/CakeVaultCard'\r\nimport PoolTabButtons from './components/PoolTabButtons'\r\nimport BountyCard from './components/BountyCard'\r\nimport HelpButton from './components/HelpButton'\r\nimport PoolsTable from './components/PoolsTable/PoolsTable'\r\nimport { ViewMode } from './components/ToggleView/ToggleView'\r\nimport { getAprData, getCakeVaultEarnings } from './helpers'\r\n\r\nconst CardLayout = styled(FlexLayout)`\r\n  justify-content: center;\r\n`\r\n\r\nconst PoolControls = styled(Flex)`\r\n  flex-direction: column;\r\n  margin-bottom: 24px;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst SearchSortContainer = styled(Flex)`\r\n  gap: 10px;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ControlStretch = styled(Flex)`\r\n  > div {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_POOLS_VISIBLE = 12\r\n\r\nconst Pools: React.FC = () => {\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools(account)\r\n  const [stakedOnly, setStakedOnly] = usePersistState(false, { localStorageKey: 'pancake_pool_staked' })\r\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\r\n  const [searchQuery, setSearchQuery] = useState('')\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const {\r\n    userData: { cakeAtLastUserAction, userShares },\r\n    fees: { performanceFee },\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n  } = useCakeVault()\r\n  const accountHasVaultShares = userShares && userShares.gt(0)\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n\r\n\r\n  const pools = useMemo(() => {\r\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault])\r\n\r\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\r\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\r\n  const stakedOnlyFinishedPools = useMemo(\r\n    () =>\r\n      finishedPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [finishedPools, accountHasVaultShares],\r\n  )\r\n  const stakedOnlyOpenPools = useMemo(\r\n    () =>\r\n      openPools.filter((pool) => {\r\n        if (pool.isAutoVault) {\r\n          return accountHasVaultShares\r\n        }\r\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\r\n      }),\r\n    [openPools, accountHasVaultShares],\r\n  )\r\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\r\n\r\n  usePollFarmsData()\r\n  useFetchCakeVault()\r\n  useFetchPublicPoolsData()\r\n\r\n  useEffect(() => {\r\n    const showMorePools = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  const showFinishedPools = location.pathname.includes('history')\r\n\r\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value)\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  const sortPools = (poolsToSort: Pool[]) => {\r\n    switch (sortOption) {\r\n      case 'apr':\r\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\r\n          'desc',\r\n        )\r\n      case 'earned':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => {\r\n            if (!pool.userData || !pool.earningTokenPrice) {\r\n              return 0\r\n            }\r\n            return pool.isAutoVault\r\n              ? getCakeVaultEarnings(\r\n                  account,\r\n                  cakeAtLastUserAction,\r\n                  userShares,\r\n                  pricePerFullShare,\r\n                  pool.earningTokenPrice,\r\n                ).autoUsdToDisplay\r\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\r\n          },\r\n          'desc',\r\n        )\r\n      case 'totalStaked':\r\n        return orderBy(\r\n          poolsToSort,\r\n          (pool: Pool) => (pool.isAutoVault ? totalCakeInVault.toNumber() : pool.totalStaked.toNumber()),\r\n          'desc',\r\n        )\r\n      default:\r\n        return poolsToSort\r\n    }\r\n  }\r\n\r\n  const poolsToShow = () => {\r\n    let chosenPools = [];\r\n    let myArray = [];\r\n    const finalArray = [];\r\n    if (showFinishedPools) {\r\n      chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\r\n    } else {\r\n      chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\r\n    }\r\n\r\n    if (searchQuery) {\r\n      const lowercaseQuery = latinise(searchQuery.toLowerCase())\r\n      chosenPools = chosenPools.filter((pool) =>\r\n        latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\r\n      )\r\n    }\r\n\r\n    myArray = sortPools(chosenPools).slice(0, numberOfPoolsVisible);\r\n\r\n    // // console.log('myArray..........',myArray);\r\n    myArray.forEach((value,index)=>{\r\n        if (value.isAutoVault) {\r\n            // // console.log('none');\r\n        } else {\r\n            finalArray[index] = value;\r\n        }\r\n    });\r\n\r\n\r\n    return finalArray;\r\n  }\r\n\r\n  const cardLayout = (\r\n    <CardLayout>\r\n      {poolsToShow().map((pool) =>\r\n        pool.isAutoVault ? (\r\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\r\n        ) : (\r\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\r\n        ),\r\n      )}\r\n    </CardLayout>\r\n  )\r\n\r\n  const tableLayout = <PoolsTable pools={poolsToShow()} account={account} userDataLoaded={userDataLoaded} />\r\n\r\n  return (\r\n    <>\r\n    \r\n        <div className=\"backbg\">\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\r\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" scale=\"xxl\" style={{ color: '#fff'}} className=\"headtopa\" mb=\"24px\">\r\n              {t('Syrup Pools')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\" className=\"headtopa\">\r\n              {t('Just stake some tokens to earn.')}\r\n            </Heading>\r\n            <Heading scale=\"md\" color=\"text\" className=\"headtopa\">\r\n              {t('High APR, low risk.')}\r\n            </Heading>\r\n          </Flex>\r\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\r\n            <HelpButton />\r\n            <BountyCard />\r\n          </Flex>\r\n        </Flex>\r\n      <Page className=\"backbg\">\r\n        <PoolControls justifyContent=\"space-between\">\r\n          <PoolTabButtons\r\n            stakedOnly={stakedOnly}\r\n            setStakedOnly={setStakedOnly}\r\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\r\n            viewMode={viewMode}\r\n            setViewMode={setViewMode}\r\n          />\r\n          <SearchSortContainer>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Sort by')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <Select\r\n                  options={[\r\n                    {\r\n                      label: t('Hot'),\r\n                      value: 'hot',\r\n                    },\r\n                    {\r\n                      label: t('APR'),\r\n                      value: 'apr',\r\n                    },\r\n                    {\r\n                      label: t('Earned'),\r\n                      value: 'earned',\r\n                    },\r\n                    {\r\n                      label: t('Total staked'),\r\n                      value: 'totalStaked',\r\n                    },\r\n                  ]}\r\n                  onChange={handleSortOptionChange}\r\n                />\r\n              </ControlStretch>\r\n            </Flex>\r\n            <Flex flexDirection=\"column\" width=\"50%\">\r\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\r\n                {t('Search')}\r\n              </Text>\r\n              <ControlStretch>\r\n                <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\r\n              </ControlStretch>\r\n            </Flex>\r\n          </SearchSortContainer>\r\n        </PoolControls>\r\n        {showFinishedPools && (\r\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\r\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\r\n          </Text>\r\n        )}\r\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\r\n        <div ref={loadMoreRef} />\r\n        <Image\r\n          mx=\"auto\"\r\n          mt=\"12px\"\r\n          src=\"/images/decorations/3d-syrup-bunnies.png\"\r\n          alt=\"Pancake illustration\"\r\n          width={460}\r\n          height={100}\r\n        />\r\n      </Page>\r\n</div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pools\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport { ResetCSS } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport useEagerConnect from 'hooks/useEagerConnect'\r\nimport { usePollCoreFarmData, useFetchProfile, usePollBlockNumber } from 'state/hooks'\r\nimport { DatePickerPortal } from 'components/DatePicker'\r\nimport Presale from 'views/Presale/Presale'\r\nimport GlobalStyle from './style/Global'\r\nimport Menu from './components/Menu'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport { ToastListener } from './contexts/ToastsContext'\r\nimport PageLoader from './components/PageLoader'\r\nimport EasterEgg from './components/EasterEgg'\r\nimport Pools from './views/Pools'\r\n// import Vaults from './views/Vaults'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\n// Only pool is included in the main bundle because of it's the most visited page\r\nconst Home = lazy(() => import('./views/Home'))\r\nconst Farms = lazy(() => import('./views/Farms'))\r\nconst Autofarm = lazy(() => import('./views/Autofarm'))\r\nconst FarmAuction = lazy(() => import('./views/FarmAuction'))\r\nconst Lottery = lazy(() => import('./views/Lottery'))\r\nconst Ifos = lazy(() => import('./views/Ifos'))\r\nconst NotFound = lazy(() => import('./views/NotFound'))\r\nconst Collectibles = lazy(() => import('./views/Collectibles'))\r\nconst Teams = lazy(() => import('./views/Teams'))\r\nconst Team = lazy(() => import('./views/Teams/Team'))\r\nconst Profile = lazy(() => import('./views/Profile'))\r\nconst TradingCompetition = lazy(() => import('./views/TradingCompetition'))\r\nconst Predictions = lazy(() => import('./views/Predictions'))\r\nconst Voting = lazy(() => import('./views/Voting'))\r\nconst Proposal = lazy(() => import('./views/Voting/Proposal'))\r\nconst CreateProposal = lazy(() => import('./views/Voting/CreateProposal'))\r\n\r\n// This config is required for number formatting\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nconst App: React.FC = () => {\r\n  usePollBlockNumber()\r\n  useEagerConnect()\r\n  useFetchProfile()\r\n  usePollCoreFarmData()\r\n\r\n  return (\r\n    <Router history={history}>\r\n      <ResetCSS />\r\n      <GlobalStyle />\r\n      <Menu>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            {/* <Route exact path=\"/farms/auction\">\r\n              <FarmAuction />\r\n            </Route> */}\r\n            <Route path=\"/farms\">\r\n              <Farms />\r\n            </Route>\r\n            <Route path=\"/pools\">\r\n              <Pools />\r\n            </Route>\r\n            <Route path=\"/lottery\">\r\n              <Lottery />\r\n            </Route>\r\n            {/* <Route path=\"/ifo\">\r\n              <Ifos />\r\n            </Route>\r\n            <Route path=\"/collectibles\">\r\n              <Collectibles />\r\n            </Route>\r\n            <Route exact path=\"/teams\">\r\n              <Teams />\r\n            </Route>\r\n            <Route path=\"/teams/:id\">\r\n              <Team />\r\n            </Route>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/competition\">\r\n              <TradingCompetition />\r\n            </Route>\r\n            <Route path=\"/prediction\">\r\n              <Predictions />\r\n            </Route>\r\n            <Route exact path=\"/voting\">\r\n              <Voting />\r\n            </Route>\r\n            <Route exact path=\"/voting/proposal/create\">\r\n              <CreateProposal />\r\n            </Route>\r\n            <Route path=\"/voting/proposal/:id\">\r\n              <Proposal />\r\n            </Route> */}\r\n            {/* Redirect */}\r\n            <Route path=\"/staking\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/syrup\">\r\n              <Redirect to=\"/pools\" />\r\n            </Route>\r\n            <Route path=\"/presale\">\r\n              <Presale />\r\n            </Route>\r\n            <Route path=\"/Autofarm\">\r\n              <Autofarm />\r\n            </Route>\r\n            {/* <Route path=\"/nft\">\r\n              <Redirect to=\"/collectibles\" />\r\n            </Route> */}\r\n\r\n            {/* 404 */}\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </SuspenseWithChunkError>\r\n      </Menu>\r\n      <EasterEgg iterations={2} />\r\n      <ToastListener />\r\n      <DatePickerPortal />\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React from 'react'\r\nimport { ModalProvider } from '@pancakeswap/uikit'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport { HelmetProvider } from 'react-helmet-async'\r\nimport { Provider } from 'react-redux'\r\nimport { getLibrary } from 'utils/web3React'\r\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\r\nimport { LanguageProvider } from 'contexts/Localization'\r\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\r\nimport { ToastsProvider } from 'contexts/ToastsContext'\r\nimport store from 'state'\r\n\r\nconst Providers: React.FC = ({ children }) => {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <Provider store={store}>\r\n        <ToastsProvider>\r\n          <HelmetProvider>\r\n            <ThemeContextProvider>\r\n              <LanguageProvider>\r\n                <RefreshContextProvider>\r\n                  <ModalProvider>{children}</ModalProvider>\r\n                </RefreshContextProvider>\r\n              </LanguageProvider>\r\n            </ThemeContextProvider>\r\n          </HelmetProvider>\r\n        </ToastsProvider>\r\n      </Provider>\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n\r\nexport default Providers\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport Providers from './Providers'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Providers>\r\n      <App />\r\n    </Providers>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n","import React from 'react'\r\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst UnlockButton = (props) => {\r\n  const { t } = useTranslation()\r\n  const { login, logout } = useAuth()\r\n  const { onPresentConnectModal } = useWalletModal(login, logout)\r\n\r\n  return (\r\n    <Button onClick={onPresentConnectModal} {...props}>\r\n      {t('Unlock Wallet')}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default UnlockButton\r\n","import { Profile } from 'state/types'\r\n\r\nexport type ProfileResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: string\r\n  5: boolean\r\n}\r\n\r\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\r\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\r\n\r\n  return {\r\n    userId: Number(userId),\r\n    points: Number(numberPoints),\r\n    teamId: Number(teamId),\r\n    tokenId: Number(tokenId),\r\n    nftAddress,\r\n    isActive,\r\n  }\r\n}\r\n","import Cookies from 'js-cookie'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Nft } from 'config/constants/types'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { Profile } from 'state/types'\r\nimport { getTeam } from 'state/teams/helpers'\r\nimport { transformProfileResponse } from './helpers'\r\n\r\nconst profileContract = getProfileContract()\r\nconst profileApi = process.env.REACT_APP_API_PROFILE\r\n\r\nexport interface GetProfileResponse {\r\n  hasRegistered: boolean\r\n  profile?: Profile\r\n}\r\n\r\nconst getUsername = async (address: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(`${profileApi}/api/users/${address}`)\r\n\r\n    if (!response.ok) {\r\n      return ''\r\n    }\r\n\r\n    const { username = '' } = await response.json()\r\n\r\n    return username\r\n  } catch (error) {\r\n    return ''\r\n  }\r\n}\r\n\r\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\r\n  try {\r\n    const hasRegistered = (await profileContract.hasRegistered(address)) as boolean\r\n\r\n    if (!hasRegistered) {\r\n      return { hasRegistered, profile: null }\r\n    }\r\n\r\n    const profileResponse = await profileContract.getUserProfile(address)\r\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\r\n    const team = await getTeam(teamId)\r\n    const username = await getUsername(address)\r\n\r\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\r\n    // so only fetch the nft data if active\r\n    let nft: Nft\r\n    if (isActive) {\r\n      nft = await getNftByTokenId(nftAddress, tokenId)\r\n\r\n      // Save the preview image in a cookie so it can be used on the exchange\r\n      Cookies.set(\r\n        `profile_${address}`,\r\n        {\r\n          username,\r\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\r\n        },\r\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\r\n      )\r\n    }\r\n\r\n    const profile = {\r\n      userId,\r\n      points,\r\n      teamId,\r\n      tokenId,\r\n      username,\r\n      nftAddress,\r\n      isActive,\r\n      nft,\r\n      team,\r\n    } as Profile\r\n\r\n    return { hasRegistered, profile }\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default getProfile\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { ProfileState } from 'state/types'\r\nimport type { AppDispatch } from 'state'\r\nimport getProfile, { GetProfileResponse } from './getProfile'\r\n\r\nconst initialState: ProfileState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  hasRegistered: false,\r\n  data: null,\r\n}\r\n\r\nexport const profileSlice = createSlice({\r\n  name: 'profile',\r\n  initialState,\r\n  reducers: {\r\n    profileFetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\r\n      const { profile, hasRegistered } = action.payload\r\n\r\n      return {\r\n        isInitialized: true,\r\n        isLoading: false,\r\n        hasRegistered,\r\n        data: profile,\r\n      }\r\n    },\r\n    profileFetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    profileClear: () => ({\r\n      ...initialState,\r\n      isLoading: false,\r\n    }),\r\n    addPoints: (state, action: PayloadAction<number>) => {\r\n      state.data.points += action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\r\n  profileSlice.actions\r\n\r\n// Thunks\r\n// TODO: this should be an AsyncThunk\r\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\r\n  try {\r\n    dispatch(profileFetchStart())\r\n    const response = await getProfile(address)\r\n    dispatch(profileFetchSucceeded(response))\r\n  } catch (error) {\r\n    dispatch(profileFetchFailed())\r\n  }\r\n}\r\n\r\nexport default profileSlice.reducer\r\n","import React from 'react'\r\nimport {\r\n  Tag,\r\n  VerifiedIcon,\r\n  CommunityIcon,\r\n  RefreshIcon,\r\n  AutoRenewIcon,\r\n  TagProps,\r\n  TimerIcon,\r\n  BlockIcon,\r\n  VoteIcon,\r\n} from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst CoreTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Core')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CommunityTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\r\n      {t('Community')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst DualTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textSubtle\" outline {...props}>\r\n      {t('Dual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\r\n      {t('Manual')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Auto')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst VoteNowTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Vote Now')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst SoonTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\r\n      {t('Soon')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nconst ClosedTag: React.FC<TagProps> = (props) => {\r\n  const { t } = useTranslation()\r\n  return (\r\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\r\n      {t('Closed')}\r\n    </Tag>\r\n  )\r\n}\r\n\r\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport teamsList from 'config/constants/teams'\r\nimport { Team } from 'config/constants/types'\r\nimport { TeamsById, TeamsState } from '../types'\r\nimport { getTeam, getTeams } from './helpers'\r\n\r\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\r\n  return {\r\n    ...accum,\r\n    [team.id]: team,\r\n  }\r\n}, {})\r\n\r\nconst initialState: TeamsState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: teamsById,\r\n}\r\n\r\nexport const teamsSlice = createSlice({\r\n  name: 'teams',\r\n  initialState,\r\n  reducers: {\r\n    fetchStart: (state) => {\r\n      state.isLoading = true\r\n    },\r\n    fetchFailed: (state) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n    },\r\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data[action.payload.id] = action.payload\r\n    },\r\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\r\n      state.isInitialized = true\r\n      state.isLoading = false\r\n      state.data = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\r\n\r\n// Thunks\r\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const team = await getTeam(teamId)\r\n    dispatch(teamFetchSucceeded(team))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport const fetchTeams = () => async (dispatch) => {\r\n  try {\r\n    dispatch(fetchStart())\r\n    const teams = await getTeams()\r\n    dispatch(teamsFetchSucceeded(teams))\r\n  } catch (error) {\r\n    dispatch(fetchFailed())\r\n  }\r\n}\r\n\r\nexport default teamsSlice.reducer\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector'\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector'\r\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\r\nimport { connectorsByName } from 'utils/web3React'\r\nimport { setupNetwork } from 'utils/wallet'\r\nimport useToast from 'hooks/useToast'\r\nimport { profileClear } from 'state/profile'\r\nimport { useAppDispatch } from 'state'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst useAuth = () => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { activate, deactivate } = useWeb3React()\r\n  const { toastError } = useToast()\r\n\r\n  const login = useCallback(\r\n    (connectorID: ConnectorNames) => {\r\n      const connector = connectorsByName[connectorID]\r\n      if (connector) {\r\n        activate(connector, async (error: Error) => {\r\n          if (error instanceof UnsupportedChainIdError) {\r\n            const hasSetup = await setupNetwork()\r\n            if (hasSetup) {\r\n              activate(connector)\r\n            }\r\n          } else {\r\n            window.localStorage.removeItem(connectorLocalStorageKey)\r\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n              toastError(t('Provider Error'), t('No provider was found'))\r\n            } else if (\r\n              error instanceof UserRejectedRequestErrorInjected ||\r\n              error instanceof UserRejectedRequestErrorWalletConnect\r\n            ) {\r\n              if (connector instanceof WalletConnectConnector) {\r\n                const walletConnector = connector as WalletConnectConnector\r\n                walletConnector.walletConnectProvider = null\r\n              }\r\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\r\n            } else {\r\n              toastError(error.name, error.message)\r\n            }\r\n          }\r\n        })\r\n      } else {\r\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\r\n      }\r\n    },\r\n    [t, activate, toastError],\r\n  )\r\n\r\n  const logout = useCallback(() => {\r\n    dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close()\r\n      connectorsByName.walletconnect.walletConnectProvider = null\r\n    }\r\n  }, [deactivate, dispatch])\r\n\r\n  return { login, logout }\r\n}\r\n\r\nexport default useAuth\r\n","import { Nft, NftSource, NftType } from './types'\r\n\r\nexport const IPFS_GATEWAY = 'https://cloudflare-ipfs.com'\r\n\r\nexport const nftSources: NftSource = {\r\n  [NftType.PANCAKE]: {\r\n    address: {\r\n      137: '0xDf7952B35f24aCF7fC0487D01c8d13790a60DBa07',\r\n      80001: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n  [NftType.MIXIE]: {\r\n    address: {\r\n      137: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf851376',\r\n      80001: '',\r\n    },\r\n    identifierKey: 'image',\r\n  },\r\n}\r\n\r\n/**\r\n * NOTE: https://cloudflare-ipfs.com does not support video streaming so for the video URLS we need to use\r\n * https://gateway.pinata.cloud\r\n */\r\n\r\nconst Nfts: Nft[] = [\r\n  {\r\n    name: 'Claire',\r\n    description: 'Can Claire the clairvoyant see what’s in the cards for you?',\r\n    images: {\r\n      lg: 'claire-lg.png',\r\n      md: 'claire-md.png',\r\n      sm: 'claire-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmRa2WbGnqdgUzrYXxZWv549BDxq3heYridJeoWGcebcU8/claire.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'claire',\r\n    type: NftType.PANCAKE,\r\n    variationId: 17,\r\n  },\r\n  {\r\n    name: 'Syrup Soak',\r\n    description: 'Ahh... what could be sweeter than a syrupy soak?',\r\n    images: {\r\n      lg: 'soak-lg.png',\r\n      md: 'soak-md.png',\r\n      sm: 'soak-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmW3zLfdQpw9vWpgcDyR2WM9A34tTWvvYyjKc3JjhtL68z/syrup-soak.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'syrup-soak',\r\n    type: NftType.PANCAKE,\r\n    variationId: 16,\r\n  },\r\n  {\r\n    name: 'Mixie v1',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-1-lg.png',\r\n      md: 'mixie-1-md.png',\r\n      sm: 'mixie-1-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '001-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Mixie v2',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-2-lg.png',\r\n      md: 'mixie-2-md.png',\r\n      sm: 'mixie-2-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '002-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Mixie v3',\r\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\r\n    images: {\r\n      lg: 'mixie-3-lg.png',\r\n      md: 'mixie-3-md.png',\r\n      sm: 'mixie-3-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: '003-Chef-Mixie',\r\n    type: NftType.MIXIE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Easter ‘21 Champions',\r\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\r\n    images: {\r\n      lg: 'easter-champion-storm-lg.png',\r\n      md: 'easter-champion-storm-md.png',\r\n      sm: 'easter-champion-storm-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\r\n    },\r\n    video: {\r\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\r\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-champion-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Cakeston Easter '21\",\r\n    description: 'Melting Easter eggs and melting hearts!',\r\n    images: {\r\n      lg: 'cakeston-easter-21-lg.png',\r\n      md: 'cakeston-easter-21-md.png',\r\n      sm: 'cakeston-easter-21-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-caker',\r\n    type: NftType.PANCAKE,\r\n    variationId: 15,\r\n  },\r\n  {\r\n    name: \"Flipsie Easter '21\",\r\n    description: 'Watch out for Flipsie’s spatula smash!',\r\n    images: {\r\n      lg: 'flipsie-easter-21-lg.png',\r\n      md: 'flipsie-easter-21-md.png',\r\n      sm: 'flipsie-easter-21-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-flipper',\r\n    type: NftType.PANCAKE,\r\n    variationId: 14,\r\n  },\r\n  {\r\n    name: \"Stormy Easter '21\",\r\n    description: 'Do you like chocolate with your syrup? Go long!',\r\n    images: {\r\n      lg: 'stormy-easter-21-lg.png',\r\n      md: 'stormy-easter-21-md.png',\r\n      sm: 'stormy-easter-21-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'easter-storm',\r\n    type: NftType.PANCAKE,\r\n    variationId: 12,\r\n  },\r\n  {\r\n    name: 'Bullish',\r\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\r\n    images: {\r\n      lg: 'bullish-lg.png',\r\n      md: 'bullish-md.png',\r\n      sm: 'bullish-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\r\n    },\r\n    video: {\r\n      webm: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\r\n      mp4: 'https://cloudflare-ipfs.com/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'bullish',\r\n    type: NftType.PANCAKE,\r\n    variationId: 11,\r\n  },\r\n  {\r\n    name: 'Hiccup',\r\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\r\n    images: {\r\n      lg: 'hiccup-lg.png',\r\n      md: 'hiccup-md.png',\r\n      sm: 'hiccup-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'hiccup',\r\n    type: NftType.PANCAKE,\r\n    variationId: 10,\r\n  },\r\n  {\r\n    name: 'Sleepy',\r\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\r\n    images: {\r\n      lg: 'sleepy-lg.png',\r\n      md: 'sleepy-md.png',\r\n      sm: 'sleepy-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\r\n      blur: 'sleepy-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sleepy',\r\n    type: NftType.PANCAKE,\r\n    variationId: 5,\r\n  },\r\n  {\r\n    name: 'Sunny',\r\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\r\n    images: {\r\n      lg: 'sunny-lg.png',\r\n      md: 'sunny-md.png',\r\n      sm: 'sunny-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\r\n      blur: 'sunny-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sunny',\r\n    type: NftType.PANCAKE,\r\n    variationId: 9,\r\n  },\r\n  {\r\n    name: 'Churro',\r\n    description: \"Don't let that dopey smile deceive you... Churro's a master FARM chef!\",\r\n    images: {\r\n      lg: 'churro-lg.png',\r\n      md: 'churro-md.png',\r\n      sm: 'churro-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\r\n      blur: 'churro-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'churro',\r\n    type: NftType.PANCAKE,\r\n    variationId: 8,\r\n  },\r\n  {\r\n    name: 'Dollop',\r\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of FARM.\",\r\n    images: {\r\n      lg: 'dollop-lg.png',\r\n      md: 'dollop-md.png',\r\n      sm: 'dollop-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\r\n      blur: 'dollop-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'dollop',\r\n    type: NftType.PANCAKE,\r\n    variationId: 6,\r\n  },\r\n  {\r\n    name: 'Twinkle',\r\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's FARM)\",\r\n    images: {\r\n      lg: 'twinkle-lg.png',\r\n      md: 'twinkle-md.png',\r\n      sm: 'twinkle-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\r\n      blur: 'twinkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'twinkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 7,\r\n  },\r\n  {\r\n    name: 'Swapsies',\r\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\r\n    images: {\r\n      lg: 'swapsies-lg.png',\r\n      md: 'swapsies-md.png',\r\n      sm: 'swapsies-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\r\n      blur: 'swapsies-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'swapsies',\r\n    type: NftType.PANCAKE,\r\n    variationId: 0,\r\n  },\r\n  {\r\n    name: 'Drizzle',\r\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\r\n    images: {\r\n      lg: 'drizzle-lg.png',\r\n      md: 'drizzle-md.png',\r\n      sm: 'drizzle-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\r\n      blur: 'drizzle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'drizzle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 1,\r\n  },\r\n  {\r\n    name: 'Blueberries',\r\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\r\n    images: {\r\n      lg: 'blueberries-lg.png',\r\n      md: 'blueberries-md.png',\r\n      sm: 'blueberries-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\r\n      blur: 'blueberries-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'blueberries',\r\n    type: NftType.PANCAKE,\r\n    variationId: 2,\r\n  },\r\n  {\r\n    name: 'Circular',\r\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\r\n    images: {\r\n      lg: 'circular-lg.png',\r\n      md: 'circular-md.png',\r\n      sm: 'circular-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\r\n      blur: 'circular-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'circular',\r\n    type: NftType.PANCAKE,\r\n    variationId: 3,\r\n  },\r\n  {\r\n    name: 'Sparkle',\r\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\r\n    images: {\r\n      lg: 'sparkle-lg.png',\r\n      md: 'sparkle-md.png',\r\n      sm: 'sparkle-sm.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\r\n      blur: 'sparkle-blur.png',\r\n    },\r\n    sortOrder: 999,\r\n    identifier: 'sparkle',\r\n    type: NftType.PANCAKE,\r\n    variationId: 4,\r\n  },\r\n]\r\n\r\nexport default Nfts\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { BASE_BSC_SCAN_URL } from 'config'\r\n\r\nexport const getBscScanAddressUrl = (address: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/address/${address}`\r\n}\r\n\r\nexport const getBscScanTransactionUrl = (transactionHash: string) => {\r\n  return `${BASE_BSC_SCAN_URL}/tx/${transactionHash}`\r\n}\r\n\r\nexport const getBscScanBlockNumberUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/${block}`\r\n}\r\n\r\nexport const getBscScanBlockCountdownUrl = (block: string | number) => {\r\n  return `${BASE_BSC_SCAN_URL}/block/countdown/${block}`\r\n}\r\n","export { default as farmsConfig } from './farms'\r\nexport { default as poolsConfig } from './pools'\r\nexport { default as ifosConfig } from './ifo'\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWbnbAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wBNBAddressString = getWbnbAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import { EN } from 'config/localization/languages'\r\n\r\nconst publicUrl = process.env.PUBLIC_URL\r\n\r\nexport const LS_KEY = 'pancakeswap_language'\r\n\r\nexport const fetchLocale = async (locale) => {\r\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nexport const getLanguageCodeFromLS = () => {\r\n  try {\r\n    const codeFromStorage = localStorage.getItem(LS_KEY)\r\n\r\n    return codeFromStorage || EN.locale\r\n  } catch {\r\n    return EN.locale\r\n  }\r\n}\r\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\r\nimport { Language } from '@pancakeswap/uikit'\r\nimport { EN, languages } from 'config/localization/languages'\r\nimport translations from 'config/localization/translations.json'\r\nimport { ContextApi, ContextData, ProviderState } from './types'\r\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\r\n\r\nconst initialState: ProviderState = {\r\n  isFetching: true,\r\n  currentLanguage: EN,\r\n}\r\n\r\n// Export the translations directly\r\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\r\nlanguageMap.set(EN.locale, translations)\r\n\r\nexport const LanguageContext = createContext<ContextApi>(undefined)\r\n\r\nexport const LanguageProvider: React.FC = ({ children }) => {\r\n  const [state, setState] = useState<ProviderState>(() => {\r\n    const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n    return {\r\n      ...initialState,\r\n      currentLanguage: languages[codeFromStorage],\r\n    }\r\n  })\r\n  const { currentLanguage } = state\r\n\r\n  useEffect(() => {\r\n    const fetchInitialLocales = async () => {\r\n      const codeFromStorage = getLanguageCodeFromLS()\r\n\r\n      if (codeFromStorage !== EN.locale) {\r\n        const enLocale = languageMap.get(EN.locale)\r\n        const currentLocale = await fetchLocale(codeFromStorage)\r\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\r\n      }\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n      }))\r\n    }\r\n\r\n    fetchInitialLocales()\r\n  }, [setState])\r\n\r\n  const setLanguage = async (language: Language) => {\r\n    if (!languageMap.has(language.locale)) {\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: true,\r\n      }))\r\n\r\n      const locale = await fetchLocale(language.locale)\r\n      const enLocale = languageMap.get(EN.locale)\r\n\r\n      // Merge the EN locale to ensure that any locale fetched has all the keys\r\n      languageMap.set(language.locale, { ...enLocale, ...locale })\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    } else {\r\n      localStorage.setItem(LS_KEY, language.locale)\r\n      setState((prevState) => ({\r\n        ...prevState,\r\n        isFetching: false,\r\n        currentLanguage: language,\r\n      }))\r\n    }\r\n  }\r\n\r\n  const translate = useCallback(\r\n    (key: string, data?: ContextData) => {\r\n      const translationSet = languageMap.has(currentLanguage.locale)\r\n        ? languageMap.get(currentLanguage.locale)\r\n        : languageMap.get(EN.locale)\r\n      const translatedText = translationSet[key] || key\r\n\r\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\r\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\r\n\r\n      if (includesVariable && data) {\r\n        let interpolatedText = translatedText\r\n        Object.keys(data).forEach((dataKey) => {\r\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\r\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\r\n        })\r\n\r\n        return interpolatedText\r\n      }\r\n\r\n      return translatedText\r\n    },\r\n    [currentLanguage],\r\n  )\r\n\r\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\r\n}\r\n","import { useContext } from 'react'\r\nimport { LanguageContext } from './Provider'\r\n\r\nconst useTranslation = () => {\r\n  const languageContext = useContext(LanguageContext)\r\n\r\n  if (languageContext === undefined) {\r\n    throw new Error('Language context is undefined')\r\n  }\r\n\r\n  return languageContext\r\n}\r\n\r\nexport default useTranslation\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\r\n\r\nconst applyNodeDataToLotteriesGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphResponse: LotteryRoundGraphEntity[],\r\n): LotteryRoundGraphEntity[] => {\r\n  //   If no graph response - return node data\r\n  if (graphResponse.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        finalNumber: nodeRound.finalNumber.toString(),\r\n        startTime: nodeRound.startTime,\r\n        status: nodeRound.status,\r\n        id: nodeRound.lotteryId.toString(),\r\n        ticketPrice: nodeRound.priceTicketInCake,\r\n        totalTickets: '',\r\n        totalUsers: '',\r\n        winningTickets: '',\r\n      }\r\n    })\r\n  }\r\n\r\n  // console.log(\"graphResponse.length\",graphResponse.length)\r\n\r\n  //   Else if there is a graph response - merge with node data where node data is more reliable\r\n  const mergedResponse = graphResponse.map((graphRound, index) => {\r\n    const nodeRound = nodeData[index]\r\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\r\n    if (nodeRound) {\r\n      // if isLoading === true, there has been a node error - return graphRound\r\n      if (!nodeRound.isLoading) {\r\n        return {\r\n          endTime: nodeRound.endTime,\r\n          finalNumber: nodeRound.finalNumber.toString(),\r\n          startTime: nodeRound.startTime,\r\n          status: nodeRound.status,\r\n          id: graphRound.id,\r\n          ticketPrice: graphRound.ticketPrice,\r\n          totalTickets: graphRound.totalTickets,\r\n          totalUsers: graphRound.totalTickets,\r\n          winningTickets: graphRound.totalTickets,\r\n        }\r\n      }\r\n      return graphRound\r\n    }\r\n    return graphRound\r\n  })\r\n  return mergedResponse\r\n}\r\n\r\nconst getGraphLotteries = async (): Promise<LotteryRoundGraphEntity[]> => {\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getLotteries {\r\n          lotteries(first: 100, orderDirection: desc, orderBy: block) {\r\n            id\r\n            totalUsers\r\n            totalTickets\r\n            winningTickets\r\n            status\r\n            finalNumber\r\n            startTime\r\n            endTime\r\n            ticketPrice\r\n          }\r\n        }\r\n      `,\r\n    )\r\n    return response.lotteries\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\r\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\r\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\r\n  const graphResponse = await getGraphLotteries()\r\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\r\n  return mergedData\r\n}\r\n\r\nexport default getLotteriesData\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\r\nimport { LotteryTicket } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\r\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed, processRawTicketsResponse } from './helpers'\r\nimport { fetchUserTicketsForMultipleRounds } from './fetchUnclaimedUserRewards'\r\n\r\nconst applyNodeDataToUserGraphResponse = (\r\n  nodeData: LotteryResponse[],\r\n  graphData: UserRound[],\r\n  ticketData: { roundId: string; userTickets: LotteryTicket[] }[],\r\n): UserRound[] => {\r\n  //   If no graph rounds response - return node data\r\n  if (graphData.length === 0) {\r\n    return nodeData.map((nodeRound) => {\r\n      const ticketDataForRound = ticketData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      return {\r\n        endTime: nodeRound.endTime,\r\n        status: nodeRound.status,\r\n        lotteryId: nodeRound.lotteryId.toString(),\r\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n        totalTickets: `${ticketDataForRound.userTickets.length}`,\r\n      }\r\n    })\r\n  }\r\n\r\n  //   Else if there is a graph response - merge with node data where node data is more accurate\r\n  const mergedResponse = graphData.map((graphRound, index) => {\r\n    const nodeRound = nodeData[index]\r\n    // if there is node data for this index, overwrite graph data. Otherwise - return graph data.\r\n    if (nodeRound) {\r\n      const ticketDataForRound = ticketData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\r\n      // if isLoading === true, there has been a node error - return graphRound\r\n      if (!nodeRound.isLoading) {\r\n        return {\r\n          endTime: nodeRound.endTime,\r\n          status: nodeRound.status,\r\n          lotteryId: nodeRound.lotteryId.toString(),\r\n          claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\r\n          totalTickets: graphRound.totalTickets,\r\n        }\r\n      }\r\n      return graphRound\r\n    }\r\n    return graphRound\r\n  })\r\n  return mergedResponse\r\n}\r\n\r\nconst getGraphLotteryUser = async (account: string): Promise<LotteryUserGraphEntity> => {\r\n  let user\r\n  const blankUser = {\r\n    account,\r\n    totalCake: '',\r\n    totalTickets: '',\r\n    rounds: [],\r\n  }\r\n\r\n  try {\r\n    const response = await request(\r\n      GRAPH_API_LOTTERY,\r\n      gql`\r\n        query getUserLotteries($account: ID!) {\r\n          user(id: $account) {\r\n            id\r\n            totalTickets\r\n            totalCake\r\n            rounds(first: 100, orderDirection: desc, orderBy: block) {\r\n              id\r\n              lottery {\r\n                id\r\n                endTime\r\n                status\r\n              }\r\n              claimed\r\n              totalTickets\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      { account: account.toLowerCase() },\r\n    )\r\n    const userRes = response.user\r\n    // console.log(\"userRes\",userRes)\r\n\r\n    // If no user returned - return blank user\r\n    if (!userRes) {\r\n      user = blankUser\r\n    } else {\r\n      user = {\r\n        account: userRes.id,\r\n        totalCake: userRes.totalCake,\r\n        totalTickets: userRes.totalTickets,\r\n        rounds: userRes.rounds.map((round) => {\r\n          return {\r\n            lotteryId: round?.lottery?.id,\r\n            endTime: round?.lottery?.endTime,\r\n            claimed: round?.claimed,\r\n            totalTickets: round?.totalTickets,\r\n            status: round?.lottery?.status,\r\n          }\r\n        }),\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error)\r\n    user = blankUser\r\n  }\r\n\r\n  return user\r\n}\r\n\r\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\r\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\r\n  const ticketsToRequestPerRound = '5000'\r\n  const blindRoundData = idsForTicketsNodeCall.map((roundId) => {\r\n    return {\r\n      totalTickets: ticketsToRequestPerRound,\r\n      lotteryId: roundId.toString(),\r\n    }\r\n  })\r\n\r\n  const rawUserTicketNodeData = await fetchUserTicketsForMultipleRounds(blindRoundData, account)\r\n  const roundDataAndUserTickets = rawUserTicketNodeData.map((rawRoundTicketData, index) => {\r\n    return {\r\n      roundId: idsForTicketsNodeCall[index],\r\n      userTickets: processRawTicketsResponse(rawRoundTicketData),\r\n    }\r\n  })\r\n  const roundsWithUserParticipation = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\r\n  const idsForLotteriesNodeCall = roundsWithUserParticipation.map((round) => round.roundId)\r\n\r\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\r\n  const graphResponse = await getGraphLotteryUser(account)\r\n  const mergedRoundData = applyNodeDataToUserGraphResponse(\r\n    lotteriesNodeData,\r\n    graphResponse.rounds,\r\n    roundsWithUserParticipation,\r\n  )\r\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\r\n  return graphResponseWithNodeRounds\r\n}\r\n\r\nexport default getUserLotteryData\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\r\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\r\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy, fetchTickets } from './helpers'\r\nimport getLotteriesData from './getLotteriesData'\r\nimport getUserLotteryData from './getUserLotteryData'\r\n\r\ninterface PublicLotteryData {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n}\r\n\r\nconst initialState: LotteryState = {\r\n  currentLotteryId: null,\r\n  isTransitioning: false,\r\n  maxNumberTicketsPerBuyOrClaim: null,\r\n  currentRound: {\r\n    isLoading: true,\r\n    lotteryId: null,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n    userTickets: {\r\n      isLoading: true,\r\n      tickets: [],\r\n    },\r\n  },\r\n  lotteriesData: null,\r\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\r\n}\r\n\r\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\r\n  'lottery/fetchCurrentLottery',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteryInfo = await fetchLottery(currentLotteryId)\r\n    return lotteryInfo\r\n  },\r\n)\r\n\r\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\r\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\r\n  return currentIdAndMaxBuy\r\n})\r\n\r\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\r\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\r\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\r\n  const totalTickets = userParticipationInCurrentRound?.totalTickets || '0'\r\n  // Get user tickets for current round\r\n  // TODO: This can come from the getUserLotteryData function instead\r\n  const userTickets = await fetchTickets(account, currentLotteryId, totalTickets)\r\n \r\n\r\n  // user has not bought tickets for the current lottery\r\n  if (userTickets.length === 0) {\r\n    return { userTickets: null, userLotteries: userLotteriesRes }\r\n  }\r\n\r\n  return { userTickets, userLotteries: userLotteriesRes }\r\n})\r\n\r\n\r\n\r\n\r\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\r\n  'lottery/fetchPublicLotteries',\r\n  async ({ currentLotteryId }) => {\r\n    const lotteries = await getLotteriesData(currentLotteryId)\r\n    return lotteries\r\n  },\r\n)\r\n\r\nexport const fetchUserLotteries = createAsyncThunk<\r\n  LotteryUserGraphEntity,\r\n  { account: string; currentLotteryId: string }\r\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\r\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\r\n  return userLotteries\r\n})\r\n\r\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\r\n  `lottery/setIsTransitioning`,\r\n  async ({ isTransitioning }) => {\r\n    return { isTransitioning }\r\n  },\r\n)\r\n\r\nexport const LotterySlice = createSlice({\r\n  name: 'Lottery',\r\n  initialState,\r\n  reducers: {\r\n    setLotteryPublicData: (state, action) => {\r\n      state = action.payload\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\r\n      state.currentRound = { ...state.currentRound, ...action.payload }\r\n    })\r\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\r\n      state.currentLotteryId = action.payload.currentLotteryId\r\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\r\n    })\r\n    builder.addCase(\r\n      fetchUserTicketsAndLotteries.fulfilled,\r\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\r\n        state.currentRound.userTickets.isLoading = false\r\n        state.currentRound.userTickets.tickets = action.payload.userTickets\r\n        state.userLotteryData = action.payload.userLotteries\r\n      },\r\n    )\r\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\r\n      state.lotteriesData = action.payload\r\n    })\r\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\r\n      state.userLotteryData = action.payload\r\n    })\r\n    builder.addCase(\r\n      setLotteryIsTransitioning.fulfilled,\r\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\r\n        state.isTransitioning = action.payload.isTransitioning\r\n      },\r\n    )\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLotteryPublicData } = LotterySlice.actions\r\n\r\nexport default LotterySlice.reducer\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'fee',\r\n    sortable: true,\r\n    label: 'Fee',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'fee',\r\n    sortable: true,\r\n    label: 'Fee',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst farms: FarmConfig[] = [\r\n  /**\r\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\r\n   */\r\n  {\r\n    pid: 0,\r\n    lpSymbol: 'FARM',\r\n    lpAddresses: {\r\n      137: '0x0596C1B53c995ed98Fb066A0C107416E537E94Fc',\r\n      80001: '0x09A5aEc2D8637EDA36110AcF722363f2d6036e0c',\r\n    },\r\n    token: tokens.syrup,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 1,\r\n    lpSymbol: 'FARM-BNB LP',\r\n    lpAddresses: {\r\n      137: '0x2CAE6640C70A953AB159c55243508a1bF758f660',\r\n      80001: '0x9132276Bb448Ab37b21966C8c99A0E4CDbb45B26',\r\n    },\r\n    token: tokens.cake,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n  {\r\n    pid: 2,\r\n    lpSymbol: 'BUSD-BNB LP',\r\n    lpAddresses: {\r\n      137: '0x575Cb459b6E6B8187d3Ef9a25105D64011874820',\r\n      80001: '0xa04EEfee3538db7e0A02E43D3981A58a458B6246',\r\n    },\r\n    token: tokens.busd,\r\n    quoteToken: tokens.wbnb,\r\n  },\r\n//   /**\r\n//    * V3 by order of release (some may be out of PID order due to multiplier boost)\r\n//    */\r\n//   {\r\n//     pid: 429,\r\n//     lpSymbol: 'CHESS-USDC LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1472976e0b97f5b2fc93f1fff14e2b5c4447b64f',\r\n//     },\r\n//     token: tokens.chess,\r\n//     quoteToken: tokens.usdc,\r\n//   },\r\n//   {\r\n//     pid: 428,\r\n//     lpSymbol: 'TITAN-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9392a1f471d9aa14c0b8eb28bd7a3f4a814727be',\r\n//     },\r\n//     token: tokens.titan,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 427,\r\n//     lpSymbol: 'ONE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9d2296e2fe3cdbf2eb3e3e2ca8811bafa42eedff',\r\n//     },\r\n//     token: tokens.harmony,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 426,\r\n//     lpSymbol: 'MASK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x46c6bA71af7648cD7f67D0AD4d16f75bE251ed12',\r\n//     },\r\n//     token: tokens.mask,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 425,\r\n//     lpSymbol: 'DVI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x89ebf9cd99864f6e51bd7a578965922029cab977',\r\n//     },\r\n//     token: tokens.dvi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 339,\r\n//     lpSymbol: 'GUM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x28Ea5894D4DBbE90bB58eE3BAB2869387d711c87',\r\n//     },\r\n//     token: tokens.gum,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 424,\r\n//     lpSymbol: 'ADX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0648ff5de80adf54aac07ece2490f50a418dde23',\r\n//     },\r\n//     token: tokens.adx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 423,\r\n//     lpSymbol: 'USDC-USDT LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xec6557348085aa57c72514d67070dc863c0a5a8c',\r\n//     },\r\n//     token: tokens.usdc,\r\n//     quoteToken: tokens.usdt,\r\n//   },\r\n//   {\r\n//     pid: 422,\r\n//     lpSymbol: 'FARM-USDT LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA39Af17CE4a8eb807E076805Da1e2B8EA7D0755b',\r\n//     },\r\n//     token: tokens.cake,\r\n//     quoteToken: tokens.usdt,\r\n//   },\r\n//   {\r\n//     pid: 357,\r\n//     lpSymbol: 'SUTER-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2d5DB889392Bc3c8B023A8631ca230A033eEA1B8',\r\n//     },\r\n//     token: tokens.suter,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 421,\r\n//     lpSymbol: 'BSCPAD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xba01662e978de7d67f8ffc937726215eb8995d17',\r\n//     },\r\n//     token: tokens.bscpad,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 420,\r\n//     lpSymbol: 'RABBIT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x04b56A5B3f45CFeaFbfDCFc999c14be5434f2146',\r\n//     },\r\n//     token: tokens.rabbit,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 419,\r\n//     lpSymbol: 'WAULTx-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3e4370204f598205998143F07ebCC486E441b456',\r\n//     },\r\n//     token: tokens.waultx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 418,\r\n//     lpSymbol: 'WEX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x547A355E70cd1F8CAF531B950905aF751dBEF5E6',\r\n//     },\r\n//     token: tokens.wex,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 417,\r\n//     lpSymbol: 'FORM-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3E19C18Fe3458A6065D8F0844cB7Eae52C9DAE07',\r\n//     },\r\n//     token: tokens.form,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 416,\r\n//     lpSymbol: 'ORBS-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB87b857670A44356f2b70337E0F218713D2378e8',\r\n//     },\r\n//     token: tokens.orbs,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 415,\r\n//     lpSymbol: 'DG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8b2824d57eebf07f5aff5c91fa67ed7c501a9f43',\r\n//     },\r\n//     token: tokens.$dg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 414,\r\n//     lpSymbol: 'WOO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x89eE0491CE55d2f7472A97602a95426216167189',\r\n//     },\r\n//     token: tokens.woo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 413,\r\n//     lpSymbol: 'HTB-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2a995d355d5df641e878c0f366685741fd18d004',\r\n//     },\r\n//     token: tokens.htb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 351,\r\n//     lpSymbol: 'JGN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7275278C94b5e20708380561C4Af98F38dDC6374',\r\n//     },\r\n//     token: tokens.jgn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 337,\r\n//     lpSymbol: 'DFT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x24d3B0eD4C444A4f6882d527cBF67aDc8c026582',\r\n//     },\r\n//     token: tokens.dft,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 412,\r\n//     lpSymbol: 'HAI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x289841bFb694767bCb56fBc7B741aB4B4D97D490',\r\n//     },\r\n//     token: tokens.hai,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 411,\r\n//     lpSymbol: 'O3-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7759283571Da8c0928786A96AE601944E10461Ff',\r\n//     },\r\n//     token: tokens.o3,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 410,\r\n//     lpSymbol: 'AMPL-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6e98beb694ff1cdb1ee130edd2b21b0298683d58',\r\n//     },\r\n//     token: tokens.ampl,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 343,\r\n//     lpSymbol: 'ODDZ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3c2c77353E2F6AC1578807b6b2336Bf3a3CbB014',\r\n//     },\r\n//     token: tokens.oddz,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 409,\r\n//     lpSymbol: 'ETH-USDC LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xEa26B78255Df2bBC31C1eBf60010D78670185bD0',\r\n//     },\r\n//     token: tokens.eth,\r\n//     quoteToken: tokens.usdc,\r\n//   },\r\n//   {\r\n//     pid: 408,\r\n//     lpSymbol: 'BTCB-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD171B26E4484402de70e3Ea256bE5A2630d7e88D',\r\n//     },\r\n//     token: tokens.btcb,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 347,\r\n//     lpSymbol: 'BONDLY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb8b4383B49d451BBeA63BC4421466E1086da6f18',\r\n//     },\r\n//     token: tokens.bondly,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 407,\r\n//     lpSymbol: 'MARSH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x222f93187f15f354d41ff6a7703ef7e18cdd5103',\r\n//     },\r\n//     token: tokens.marsh,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 406,\r\n//     lpSymbol: 'BORING-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xDfA808Da5CFB9ABA5Fb3748FF85888F79174F378',\r\n//     },\r\n//     token: tokens.boring,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 405,\r\n//     lpSymbol: 'MBOX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8FA59693458289914dB0097F5F366d771B7a7C3F',\r\n//     },\r\n//     token: tokens.mbox,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 404,\r\n//     lpSymbol: 'ATA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xef7767677867552cfa699148b96a03358a9be779',\r\n//     },\r\n//     token: tokens.ata,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 403,\r\n//     lpSymbol: 'MX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x41f049d990d38305504631c9835f6f856bf1ba67',\r\n//     },\r\n//     token: tokens.mx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 402,\r\n//     lpSymbol: 'bCFX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA0387eBeA6be90849c2261b911fBBD52B4C9eAC4',\r\n//     },\r\n//     token: tokens.bcfx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 401,\r\n//     lpSymbol: 'QKC-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8853e3309a31583ea438f7704681f46f0d4d909b',\r\n//     },\r\n//     token: tokens.qkc,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 400,\r\n//     lpSymbol: 'KTN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x48028de4a9b0d3d91180333d796021ec7757ba1b',\r\n//     },\r\n//     token: tokens.ktn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 399,\r\n//     lpSymbol: 'MTRG-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4dcA4D427511bC327639b222DA18FA5e334F686F',\r\n//     },\r\n//     token: tokens.mtrg,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 398,\r\n//     lpSymbol: 'SWG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x226af4e918fcf3e62e5eeec867a3e78aaa7bb01d',\r\n//     },\r\n//     token: tokens.swg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 397,\r\n//     lpSymbol: 'TUSD-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2e28b9b74d6d99d4697e913b82b41ef1cac51c6c',\r\n//     },\r\n//     token: tokens.tusd,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 396,\r\n//     lpSymbol: 'VRT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xef5212ada83ec2cc105c409df10b8806d20e3b35',\r\n//     },\r\n//     token: tokens.vrt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 395,\r\n//     lpSymbol: 'EZ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x51bf99bbae59b67e5ce2fa9c17b683384773f8b3',\r\n//     },\r\n//     token: tokens.ez,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 394,\r\n//     lpSymbol: 'KALM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc74f7243766269dec5b85b0ef4af186e909c1b06',\r\n//     },\r\n//     token: tokens.kalm,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 393,\r\n//     lpSymbol: 'pOPEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1090c996fd1490d15dd7906322ee676a5cc3cf82',\r\n//     },\r\n//     token: tokens.popen,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 335,\r\n//     lpSymbol: 'LIEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xa4963B38b271c0D714593063497Fc786Fa4029Ce',\r\n//     },\r\n//     token: tokens.lien,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 392,\r\n//     lpSymbol: 'WELL-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1d94cb25895abd6ccfef863c53372bb462aa6b86',\r\n//     },\r\n//     token: tokens.well,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 391,\r\n//     lpSymbol: 'DERI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdc7188ac11e124b1fa650b73ba88bf615ef15256',\r\n//     },\r\n//     token: tokens.deri,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 390,\r\n//     lpSymbol: 'CHR-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6045931e511ef7e53a4a817f971e0ca28c758809',\r\n//     },\r\n//     token: tokens.chr,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 389,\r\n//     lpSymbol: 'FARM-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x804678fa97d91B974ec2af3c843270886528a9E6',\r\n//     },\r\n//     token: tokens.cake,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 388,\r\n//     lpSymbol: 'CYC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xecf30fbecfa642012f54212a3be92eef1e48edac',\r\n//     },\r\n//     token: tokens.cyc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 387,\r\n//     lpSymbol: 'XEND-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcecfc2789af72ed151589a96a59f3a1abc65c3b5',\r\n//     },\r\n//     token: tokens.xend,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 296,\r\n//     lpSymbol: 'HGET-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF74ee1e10e097dc326a2ad004F9Cc95CB71088d3',\r\n//     },\r\n//     token: tokens.hget,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 386,\r\n//     lpSymbol: 'HOTCROSS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf23bad605e94de0e3b60c9718a43a94a5af43915',\r\n//     },\r\n//     token: tokens.hotcross,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 385,\r\n//     lpSymbol: 'RFOX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8e04b3972b5c25766c681dfd30a8a1cbf6dcc8c1',\r\n//     },\r\n//     token: tokens.rfox,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 384,\r\n//     lpSymbol: 'WMASS-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xec95ff6281c3ad8e27372fa6675eb337640b8e5e',\r\n//     },\r\n//     token: tokens.wmass,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 383,\r\n//     lpSymbol: 'UBXT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8d3ff27d2ad6a9556b7c4f82f4d602d20114bc90',\r\n//     },\r\n//     token: tokens.ubxt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 381,\r\n//     lpSymbol: 'BTR-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbc7ac609fa730239190a70952e64ee1dfc2530ac',\r\n//     },\r\n//     token: tokens.btr,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 380,\r\n//     lpSymbol: 'τDOGE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2030845Ce7d4224523fd2F03Ca20Afe4aAD1D890',\r\n//     },\r\n//     token: tokens.τdoge,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 379,\r\n//     lpSymbol: 'PMON-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcdb0016d97fd0e7ec2c3b78aa4786cbd8e19c14c',\r\n//     },\r\n//     token: tokens.pmon,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 378,\r\n//     lpSymbol: 'ONE-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4d057f769d930eafd597b49d6fb2e1009a73a702',\r\n//     },\r\n//     token: tokens.one,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 377,\r\n//     lpSymbol: 'FINE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc309a6d2f1537922e06f15aa2eb21caa1b2eedb6',\r\n//     },\r\n//     token: tokens.fine,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 376,\r\n//     lpSymbol: 'DOGE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xac109c8025f272414fd9e2faa805a583708a017f',\r\n//     },\r\n//     token: tokens.doge,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 310,\r\n//     lpSymbol: 'bMXX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc20A92a1424b29b78DFaF92FD35D4cf8A06419B4',\r\n//     },\r\n//     token: tokens.bmxx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 375,\r\n//     lpSymbol: 'OIN-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6a00e41561ac36a78dba1d09091b0f00c4e53724',\r\n//     },\r\n//     token: tokens.oin,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 374,\r\n//     lpSymbol: 'HYFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0716725d78081a9e0e1ff81516f5415b399e274d',\r\n//     },\r\n//     token: tokens.hyfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 373,\r\n//     lpSymbol: 'KUN-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xea61020e5a128d2bec67d48f7cfbe3408db7e391',\r\n//     },\r\n//     token: tokens.kun,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 372,\r\n//     lpSymbol: 'KUN-QSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4eafbf68a2d50291ffd163d4e00ad0f040aae707',\r\n//     },\r\n//     token: tokens.kun,\r\n//     quoteToken: tokens.qsd,\r\n//   },\r\n//   {\r\n//     pid: 371,\r\n//     lpSymbol: 'MATH-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb7cada0f120ca46745a024e6b9fe907b2fe10cf3',\r\n//     },\r\n//     token: tokens.math,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 370,\r\n//     lpSymbol: 'mCOIN-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbcf01a42f6bc42f3cfe81b05519565044d65d22a',\r\n//     },\r\n//     token: tokens.mcoin,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 369,\r\n//     lpSymbol: 'WIN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x894bd57afd8efc93d9171cb585d11d0977557425',\r\n//     },\r\n//     token: tokens.win,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 368,\r\n//     lpSymbol: 'TRX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3cd338c3bb249b6b3c55799f85a589febbbff9dd',\r\n//     },\r\n//     token: tokens.trx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 367,\r\n//     lpSymbol: 'BTT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x946696344e7d4346b223e1cf77035a76690d6a73',\r\n//     },\r\n//     token: tokens.btt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 366,\r\n//     lpSymbol: 'PNT-pBTC LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdaa89d335926628367b47852989bb22ee62ca5de',\r\n//     },\r\n//     token: tokens.pnt,\r\n//     quoteToken: tokens.pbtc,\r\n//   },\r\n//   {\r\n//     pid: 311,\r\n//     lpSymbol: 'xMARK-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xAa40f1AC20AAFcFEE8595Da606D78C503C7e70A3',\r\n//     },\r\n//     token: tokens.xmark,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 365,\r\n//     lpSymbol: 'BTCB-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf45cd219aef8618a92baa7ad848364a158a24f33',\r\n//     },\r\n//     token: tokens.btcb,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 364,\r\n//     lpSymbol: 'LMT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8271d7eafeeb8f24d7c9fe1acce2ae20611972e5',\r\n//     },\r\n//     token: tokens.lmt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 363,\r\n//     lpSymbol: 'DFD-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x029d66f9c0469450b7b4834b8ddc6a1118cec3e1',\r\n//     },\r\n//     token: tokens.dfd,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 362,\r\n//     lpSymbol: 'ALPACA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7752e1fa9f3a2e860856458517008558deb989e3',\r\n//     },\r\n//     token: tokens.alpaca,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 361,\r\n//     lpSymbol: 'τBTC-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8046fa66753928F35f7Db23ae0188ee6743C2FBA',\r\n//     },\r\n//     token: tokens.τbtc,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 304,\r\n//     lpSymbol: 'SWINGBY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4Fd6D315bEf387fAD2322fbc64368fC443F0886D',\r\n//     },\r\n//     token: tokens.swingby,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 360,\r\n//     lpSymbol: 'XED-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xa7A0b605343dF36B748FF4B5f7578b3F2D0651CE',\r\n//     },\r\n//     token: tokens.xed,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 359,\r\n//     lpSymbol: 'HAKKA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2C624C9Ecf16Cb81aB85cC2C0B0c5e12A09AFDa6',\r\n//     },\r\n//     token: tokens.hakka,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 358,\r\n//     lpSymbol: 'CGG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0604471c532F9fEBAD3E37190B667f44BD0894b3',\r\n//     },\r\n//     token: tokens.cgg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 356,\r\n//     lpSymbol: 'bROOBEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x950FD020F8E4B8C57285EC7020b7a204348dadFa',\r\n//     },\r\n//     token: tokens.broobee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 355,\r\n//     lpSymbol: 'HZN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xDc9a574b9B341D4a98cE29005b614e1E27430E74',\r\n//     },\r\n//     token: tokens.hzn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 354,\r\n//     lpSymbol: 'ALPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4cC442220BE1cE560C1f2573f8CA8f460B3E4172',\r\n//     },\r\n//     token: tokens.alpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 353,\r\n//     lpSymbol: 'PERL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x61010e6CbA3b56ba47E9dFd56Da682daCFe76131',\r\n//     },\r\n//     token: tokens.perl,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 352,\r\n//     lpSymbol: 'TLM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE6b421a4408c82381b226Ab5B6F8C4b639044359',\r\n//     },\r\n//     token: tokens.tlm,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 350,\r\n//     lpSymbol: 'EPS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xddE420cbB3794ebD8FFC3Ac69F9c78e5d1411870',\r\n//     },\r\n//     token: tokens.eps,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 349,\r\n//     lpSymbol: 'ARPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9730c791743300E9f984C9264395ce705A55Da7c',\r\n//     },\r\n//     token: tokens.arpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 348,\r\n//     lpSymbol: 'ITAM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd02DA76c813b9cd4516eD50442923E625f90228f',\r\n//     },\r\n//     token: tokens.itam,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 346,\r\n//     lpSymbol: 'TKO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xFFd4B200d3C77A0B691B5562D804b3bd54294e6e',\r\n//     },\r\n//     token: tokens.tko,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 345,\r\n//     lpSymbol: 'APYS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x510b29a93ebf098f3fC24A16541aAA0114D07056',\r\n//     },\r\n//     token: tokens.apys,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 344,\r\n//     lpSymbol: 'HOO-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3e42C1f7239231E3752B507764445dd8e6A570d5',\r\n//     },\r\n//     token: tokens.hoo,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 342,\r\n//     lpSymbol: 'EASY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x20c6De8983Fb2D641c55004646aEF40b4EA66E18',\r\n//     },\r\n//     token: tokens.easy,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 341,\r\n//     lpSymbol: 'NRV-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE482249Cd295C0d1e9D2baAEE71e66de21024C68',\r\n//     },\r\n//     token: tokens.nrv,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 340,\r\n//     lpSymbol: 'DEGO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF1Ec67fA1881796BFf63Db3E1A301cE9cb787Fad',\r\n//     },\r\n//     token: tokens.dego,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 338,\r\n//     lpSymbol: 'pBTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0362ba706DFE8ED12Ec1470aB171d8Dcb1C72B8D',\r\n//     },\r\n//     token: tokens.pbtc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 336,\r\n//     lpSymbol: 'SWTH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x123D475E13aA54A43a7421d94CAa4459dA021c77',\r\n//     },\r\n//     token: tokens.swth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 334,\r\n//     lpSymbol: 'ZIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6A97867a4b7Eb7646ffB1F359ad582e9903aa1C2',\r\n//     },\r\n//     token: tokens.zil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 333,\r\n//     lpSymbol: 'pCWS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6615CE60D71513aA4849269dD63821D324A23F8C',\r\n//     },\r\n//     token: tokens.pcws,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 332,\r\n//     lpSymbol: 'bBADGER-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5A58609dA96469E9dEf3fE344bC39B00d18eb9A5',\r\n//     },\r\n//     token: tokens.bbadger,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 331,\r\n//     lpSymbol: 'bDIGG-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x81d776C90c89B8d51E9497D58338933127e2fA80',\r\n//     },\r\n//     token: tokens.bdigg,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 330,\r\n//     lpSymbol: 'LTO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xa5Bb44c6F5fD9B836E5a654c8AbbCCc96A15deE5',\r\n//     },\r\n//     token: tokens.lto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 329,\r\n//     lpSymbol: 'MIR-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x89666d026696660e93Bf6edf57B71A68615768B7',\r\n//     },\r\n//     token: tokens.mir,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 328,\r\n//     lpSymbol: 'TRADE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8F6baf368E7A4f6e2C9c995f22702d5e654A0237',\r\n//     },\r\n//     token: tokens.trade,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 327,\r\n//     lpSymbol: 'DUSK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x678EDb8B268e73dB57b7694c163e1dc296b6e219',\r\n//     },\r\n//     token: tokens.dusk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 326,\r\n//     lpSymbol: 'BIFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3f1A9f3D9aaD8bD339eD4853F345d2eF89fbfE0c',\r\n//     },\r\n//     token: tokens.bifi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 325,\r\n//     lpSymbol: 'TXL-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1434BB50196A0C7eA825940b1DFd8aAd25d79817',\r\n//     },\r\n//     token: tokens.txl,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 324,\r\n//     lpSymbol: 'COS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe98585bBb2dc81854fF100A3d9D7B0F53E0dafEd',\r\n//     },\r\n//     token: tokens.cos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 323,\r\n//     lpSymbol: 'BUNNY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5aFEf8567414F29f0f927A0F2787b188624c10E2',\r\n//     },\r\n//     token: tokens.bunny,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 322,\r\n//     lpSymbol: 'ALICE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcAD7019D6d84a3294b0494aEF02e73BD0f2572Eb',\r\n//     },\r\n//     token: tokens.alice,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 321,\r\n//     lpSymbol: 'FOR-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE60B4e87645093A42fa9dcC5d0C8Df6E67f1f9d2',\r\n//     },\r\n//     token: tokens.for,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 320,\r\n//     lpSymbol: 'BUX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x222C3CbB89647bF77822435Bd4c234A04272A77A',\r\n//     },\r\n//     token: tokens.bux,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 319,\r\n//     lpSymbol: 'NULS-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x853784B7BDe87d858555715c0123374242db7943',\r\n//     },\r\n//     token: tokens.nuls,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 318,\r\n//     lpSymbol: 'BELT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF3Bc6FC080ffCC30d93dF48BFA2aA14b869554bb',\r\n//     },\r\n//     token: tokens.belt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 317,\r\n//     lpSymbol: 'RAMP-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE834bf723f5bDff34a5D1129F3c31Ea4787Bc76a',\r\n//     },\r\n//     token: tokens.ramp,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 316,\r\n//     lpSymbol: 'BFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x153Ad7d25B0b810497483d0cEE8AF42Fc533FeC8',\r\n//     },\r\n//     token: tokens.bfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 315,\r\n//     lpSymbol: 'DEXE-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3578B1f9BCE98D2F4D293b422d8850fdf48B1f21',\r\n//     },\r\n//     token: tokens.dexe,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 314,\r\n//     lpSymbol: 'BEL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x69DEE989c30b5fFe40867f5FC14F00E4bCE7B681',\r\n//     },\r\n//     token: tokens.bel,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 313,\r\n//     lpSymbol: 'TPT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6D0c831254221ba121fB53fb44Df289A6558867d',\r\n//     },\r\n//     token: tokens.tpt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 312,\r\n//     lpSymbol: 'WATCH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x13321AcfF4A27f3d2bcA64b8bEaC6e5FdAAAf12C',\r\n//     },\r\n//     token: tokens.watch,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 309,\r\n//     lpSymbol: 'IOTX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc13aA76AAc067c86aE38028019F414D731b3D86A',\r\n//     },\r\n//     token: tokens.iotx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 308,\r\n//     lpSymbol: 'BOR-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe094c686aD6cDda57b9564457F541FBF099B948A',\r\n//     },\r\n//     token: tokens.bor,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 307,\r\n//     lpSymbol: 'bOPEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc7A9c2af263ebB86139Cca9349e49b17129Ba033',\r\n//     },\r\n//     token: tokens.bopen,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 306,\r\n//     lpSymbol: 'SUSHI-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x16aFc4F2Ad82986bbE2a4525601F8199AB9c832D',\r\n//     },\r\n//     token: tokens.sushi,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 305,\r\n//     lpSymbol: 'DODO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA9986Fcbdb23c2E8B11AB40102990a08f8E58f06',\r\n//     },\r\n//     token: tokens.dodo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 303,\r\n//     lpSymbol: 'BRY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x21dD71aB78EDE3033c976948f769D506E4F489eE',\r\n//     },\r\n//     token: tokens.bry,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 302,\r\n//     lpSymbol: 'ZEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8e799cB0737525CeB8A6C6Ad07f748535fF6377B',\r\n//     },\r\n//     token: tokens.zee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 301,\r\n//     lpSymbol: 'SWGb-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x856f9AD94cA8680B899214Bb1EB3d235a3C33Afe',\r\n//     },\r\n//     token: tokens.swgb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 300,\r\n//     lpSymbol: 'COMP-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x37908620dEf1491Dd591b5a2d16022A33cDDA415',\r\n//     },\r\n//     token: tokens.comp,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 299,\r\n//     lpSymbol: 'SFP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x942b294e59a8c47a0F7F20DF105B082710F7C305',\r\n//     },\r\n//     token: tokens.sfp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 298,\r\n//     lpSymbol: 'LINA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC5768c5371568Cf1114cddD52CAeD163A42626Ed',\r\n//     },\r\n//     token: tokens.lina,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 297,\r\n//     lpSymbol: 'LIT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1F37d4226d23d09044B8005c127C0517BD7e94fD',\r\n//     },\r\n//     token: tokens.lit,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 295,\r\n//     lpSymbol: 'BDO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4288706624e3dD839b069216eB03B8B9819C10d2',\r\n//     },\r\n//     token: tokens.bdo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 294,\r\n//     lpSymbol: 'EGLD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcD68856b6E72E99b5eEaAE7d41Bb4A3b484c700D',\r\n//     },\r\n//     token: tokens.egld,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 293,\r\n//     lpSymbol: 'UST-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x05faf555522Fa3F93959F86B41A3808666093210',\r\n//     },\r\n//     token: tokens.ust,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 292,\r\n//     lpSymbol: 'mAMZN-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC05654C66756eBB82c518598c5f1ea1a0199a563',\r\n//     },\r\n//     token: tokens.mamzn,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 291,\r\n//     lpSymbol: 'mGOOGL-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA3BfBbAd526C6B856B1Fdf73F99BCD894761fbf3',\r\n//     },\r\n//     token: tokens.mgoogl,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 290,\r\n//     lpSymbol: 'mNFLX-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x91417426C3FEaA3Ca795921eB9FdD9715ad92537',\r\n//     },\r\n//     token: tokens.mnflx,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 289,\r\n//     lpSymbol: 'mTSLA-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xEc6b56a736859AE8ea4bEdA16279Ecd8c60dA7EA',\r\n//     },\r\n//     token: tokens.mtsla,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 288,\r\n//     lpSymbol: 'wSOTE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7653D2c31440f04d2c6520D482dC5DbD7650f70a',\r\n//     },\r\n//     token: tokens.wsote,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 287,\r\n//     lpSymbol: 'FRONT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC6b668548aA4A56792e8002A920d3159728121D5',\r\n//     },\r\n//     token: tokens.front,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 286,\r\n//     lpSymbol: 'Helmet-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC869A9943b702B03770B6A92d2b2d25cf3a3f571',\r\n//     },\r\n//     token: tokens.helmet,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 285,\r\n//     lpSymbol: 'BTCST-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB2678C414ebC63c9CC6d1a0fC45f43E249B50fdE',\r\n//     },\r\n//     token: tokens.btcst,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 284,\r\n//     lpSymbol: 'LTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x71b01eBdDD797c8E9E0b003ea2f4FD207fBF46cC',\r\n//     },\r\n//     token: tokens.ltc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 283,\r\n//     lpSymbol: 'USDC-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2354ef4DF11afacb85a5C7f98B624072ECcddbB1',\r\n//     },\r\n//     token: tokens.usdc,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 282,\r\n//     lpSymbol: 'DAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x66FDB2eCCfB58cF098eaa419e5EfDe841368e489',\r\n//     },\r\n//     token: tokens.dai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 281,\r\n//     lpSymbol: 'BSCX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x47C42b0A056A9C6e9C65b9Ef79020Af518e767A5',\r\n//     },\r\n//     token: tokens.bscx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 280,\r\n//     lpSymbol: 'TEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1B415C3ec8095AfBF9d78882b3a6263c4ad141B5',\r\n//     },\r\n//     token: tokens.ten,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 279,\r\n//     lpSymbol: 'bALBT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x24EB18bA412701f278B172ef96697c4622b19da6',\r\n//     },\r\n//     token: tokens.balbt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 278,\r\n//     lpSymbol: 'REEF-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd63b5CecB1f40d626307B92706Df357709D05827',\r\n//     },\r\n//     token: tokens.reef,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 277,\r\n//     lpSymbol: 'Ditto-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8645148dE4E339964bA480AE3478653b5bc6E211',\r\n//     },\r\n//     token: tokens.ditto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 276,\r\n//     lpSymbol: 'VAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x133ee93FE93320e1182923E1a640912eDE17C90C',\r\n//     },\r\n//     token: tokens.vai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 275,\r\n//     lpSymbol: 'BLK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x356Dd24BfF8e23BdE0430f00ad0C290E33438bD7',\r\n//     },\r\n//     token: tokens.blink,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 274,\r\n//     lpSymbol: 'UNFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x44EA47F2765fd5D26b7eF0222736AD6FD6f61950',\r\n//     },\r\n//     token: tokens.unfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 273,\r\n//     lpSymbol: 'HARD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x73566ca86248bD12F0979793e4671e99a40299A7',\r\n//     },\r\n//     token: tokens.hard,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 272,\r\n//     lpSymbol: 'CTK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x460b4193Ec4C1a17372Aa5FDcd44c520ba658646',\r\n//     },\r\n//     token: tokens.ctk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 271,\r\n//     lpSymbol: 'SXP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD8E2F8b6Db204c405543953Ef6359912FE3A88d6',\r\n//     },\r\n//     token: tokens.sxp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 270,\r\n//     lpSymbol: 'INJ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1BdCebcA3b93af70b58C41272AEa2231754B23ca',\r\n//     },\r\n//     token: tokens.inj,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 269,\r\n//     lpSymbol: 'FIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD9bCcbbbDFd9d67BEb5d2273102CE0762421D1e3',\r\n//     },\r\n//     token: tokens.fil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 268,\r\n//     lpSymbol: 'UNI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x014608E87AF97a054C9a49f81E1473076D51d9a3',\r\n//     },\r\n//     token: tokens.uni,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 267,\r\n//     lpSymbol: 'YFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xCE383277847f8217392eeA98C5a8B4a7D27811b0',\r\n//     },\r\n//     token: tokens.yfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 266,\r\n//     lpSymbol: 'ATOM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x468b2DC8DC75990eE3E9dc0648965Ad6294E7914',\r\n//     },\r\n//     token: tokens.atom,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 265,\r\n//     lpSymbol: 'XRP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x03F18135c44C64ebFdCBad8297fe5bDafdBbdd86',\r\n//     },\r\n//     token: tokens.xrp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 264,\r\n//     lpSymbol: 'USDT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x16b9a82891338f9bA80E2D6970FddA79D1eb0daE',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 263,\r\n//     lpSymbol: 'ALPHA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xACF47CBEaab5c8A6Ee99263cfE43995f89fB3206',\r\n//     },\r\n//     token: tokens.alpha,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 262,\r\n//     lpSymbol: 'BTCB-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082',\r\n//     },\r\n//     token: tokens.btcb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 261,\r\n//     lpSymbol: 'ETH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x74E4716E431f45807DCF19f284c7aA99F18a4fbc',\r\n//     },\r\n//     token: tokens.eth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 260,\r\n//     lpSymbol: 'XVS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7EB5D86FD78f3852a3e0e064f2842d45a3dB6EA2',\r\n//     },\r\n//     token: tokens.xvs,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 259,\r\n//     lpSymbol: 'TWT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3DcB1787a95D2ea0Eb7d00887704EeBF0D79bb13',\r\n//     },\r\n//     token: tokens.twt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 258,\r\n//     lpSymbol: 'USDT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7EFaEf62fDdCCa950418312c6C91Aef321375A00',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 257,\r\n//     lpSymbol: 'LINK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x824eb9faDFb377394430d2744fa7C42916DE3eCe',\r\n//     },\r\n//     token: tokens.link,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 256,\r\n//     lpSymbol: 'EOS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB6e34b5C65Eda51bb1BD4ea5F79d385Fb94b9504',\r\n//     },\r\n//     token: tokens.eos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 255,\r\n//     lpSymbol: 'DOT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF',\r\n//     },\r\n//     token: tokens.dot,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 254,\r\n//     lpSymbol: 'BAND-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x168B273278F3A8d302De5E879aA30690B7E6c28f',\r\n//     },\r\n//     token: tokens.band,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 253,\r\n//     lpSymbol: 'ADA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x28415ff2C35b65B9E5c7de82126b4015ab9d031F',\r\n//     },\r\n//     token: tokens.ada,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   /**\r\n//    * V2 farms, set to be removed once unstaked\r\n//    */\r\n//   {\r\n//     pid: 139,\r\n//     lpSymbol: 'FARM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xFB7E9FE9D13561AdA7131Fa746942a14F7dd4Cf6',\r\n//     },\r\n//     token: tokens.cake,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 250,\r\n//     lpSymbol: 'τBTC-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xFD09CDbd6A7dCAd8AC47df4F139443a729264763',\r\n//     },\r\n//     token: tokens.τbtc,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 193,\r\n//     lpSymbol: 'SWINGBY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA0e3F72BAFcc5d52F0052a39165FD40D3d4d34Fc',\r\n//     },\r\n//     token: tokens.swingby,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 249,\r\n//     lpSymbol: 'XED-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xBbE20dA99db94Fa1077F1C9A5d256761dAf89C60',\r\n//     },\r\n//     token: tokens.xed,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 248,\r\n//     lpSymbol: 'HAKKA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9ed1ca73AA8F1ccdc3c3a174E77014f8900411CE',\r\n//     },\r\n//     token: tokens.hakka,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 247,\r\n//     lpSymbol: 'CGG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB9aA8B0d67DE546aaa82091065a64B7F1C4B1a1F',\r\n//     },\r\n//     token: tokens.cgg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 246,\r\n//     lpSymbol: 'SUTER-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6f41c9226fa89a552009c3AC087BA74b83772C52',\r\n//     },\r\n//     token: tokens.suter,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 245,\r\n//     lpSymbol: 'bROOBEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5Ac5184eA06dE24ce8ED2133f58b4Aa2CEd2dC3b',\r\n//     },\r\n//     token: tokens.broobee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 244,\r\n//     lpSymbol: 'HZN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF7fcD7e7B3853bf59bCA9183476F218ED07eD3B0',\r\n//     },\r\n//     token: tokens.hzn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 243,\r\n//     lpSymbol: 'ALPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xBB41898A3051A6b6D4A36a1c43e906b05799B744',\r\n//     },\r\n//     token: tokens.alpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 242,\r\n//     lpSymbol: 'PERL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB1C2e08A992a619DA570425E78828A8508654f4F',\r\n//     },\r\n//     token: tokens.perl,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 241,\r\n//     lpSymbol: 'TLM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x25f15Cb3D3B3753702E1d5c4E5f6F0720b197843',\r\n//     },\r\n//     token: tokens.tlm,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 240,\r\n//     lpSymbol: 'JGN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8fD5ca41B2B44e4713590584f97c85f9FF59F00D',\r\n//     },\r\n//     token: tokens.jgn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 239,\r\n//     lpSymbol: 'EPS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x43bc6C256240e657Ad84aFb86825E21B48FEDe78',\r\n//     },\r\n//     token: tokens.eps,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 238,\r\n//     lpSymbol: 'ARPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD55e5A7b886aE9657b95641c6A7dc5A662EcAbF3',\r\n//     },\r\n//     token: tokens.arpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 237,\r\n//     lpSymbol: 'ITAM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3e78b0eD211a49e263fF9b3F0B410932a021E368',\r\n//     },\r\n//     token: tokens.itam,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 236,\r\n//     lpSymbol: 'BONDLY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2205a6424ec4D74a7588450fB71ffd0C4A3Ead65',\r\n//     },\r\n//     token: tokens.bondly,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 235,\r\n//     lpSymbol: 'TKO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc43EdF4a7e89160135C2553E9868446fef9C18DD',\r\n//     },\r\n//     token: tokens.tko,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 234,\r\n//     lpSymbol: 'APYS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7A5523f50a80790cAD011167E20bD21056A2f04A',\r\n//     },\r\n//     token: tokens.apys,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 233,\r\n//     lpSymbol: 'HOO-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc12dAD966505443b5aad7b0C55716c13d285B520',\r\n//     },\r\n//     token: tokens.hoo,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 232,\r\n//     lpSymbol: 'ODDZ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3B0a7d1030bcDFf45ABB7B03C04110FcCc8095BC',\r\n//     },\r\n//     token: tokens.oddz,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 231,\r\n//     lpSymbol: 'EASY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4b0ec41404a7FF59BaE33C8Dc420804c58B7bF24',\r\n//     },\r\n//     token: tokens.easy,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 230,\r\n//     lpSymbol: 'NRV-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x25dea33a42c7775F6945fae22A8fFBfAC9fB22CD',\r\n//     },\r\n//     token: tokens.nrv,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 229,\r\n//     lpSymbol: 'DEGO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6108aBd546AF17D8f7aFAe59EBfb4A01132A11Bb',\r\n//     },\r\n//     token: tokens.dego,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 228,\r\n//     lpSymbol: 'GUM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xA99d1926a3c15DC4Fb83aB3Fafd63B6C3E87CF22',\r\n//     },\r\n//     token: tokens.gum,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 227,\r\n//     lpSymbol: 'pBTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xaccd6673FFc24cD56B080D71384327f78fD92496',\r\n//     },\r\n//     token: tokens.pbtc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 226,\r\n//     lpSymbol: 'DFT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe86d075051f20eb8c741007Cb8e262f4519944ee',\r\n//     },\r\n//     token: tokens.dft,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 225,\r\n//     lpSymbol: 'SWTH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4f6dfFc9795d35dc1D92c2a7B23Cb7d6EF190B33',\r\n//     },\r\n//     token: tokens.swth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 224,\r\n//     lpSymbol: 'LIEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbe7BDE4aD1c136038Dc9f57ef94d1d16e6F9CbF7',\r\n//     },\r\n//     token: tokens.lien,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 223,\r\n//     lpSymbol: 'ZIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcBDf499db66Df19A66aB48F16C790FF9eE872add',\r\n//     },\r\n//     token: tokens.zil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 222,\r\n//     lpSymbol: 'pCWS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe3D941e74141311436F82523817EBaa26462967d',\r\n//     },\r\n//     token: tokens.pcws,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 221,\r\n//     lpSymbol: 'bBADGER-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x87Ae7b5c43D4e160cDB9427a78BA87B9503ee37b',\r\n//     },\r\n//     token: tokens.bbadger,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 220,\r\n//     lpSymbol: 'bDIGG-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xfbfa92e037e37F946c0105902640914E3aCe6752',\r\n//     },\r\n//     token: tokens.bdigg,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 219,\r\n//     lpSymbol: 'LTO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF62e92292772F24EAa6B6B8a105c9FC7B8F31EC5',\r\n//     },\r\n//     token: tokens.lto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 218,\r\n//     lpSymbol: 'MIR-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x905186a70ba3Eb50090d1d0f6914F5460B4DdB40',\r\n//     },\r\n//     token: tokens.mir,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 217,\r\n//     lpSymbol: 'TRADE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x52fCfB6d91Bcf1F1f6d375D0f6c303688b0E8550',\r\n//     },\r\n//     token: tokens.trade,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 216,\r\n//     lpSymbol: 'DUSK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x69773f622cE228Ca7dEd42D8C34Eba8582e85dcA',\r\n//     },\r\n//     token: tokens.dusk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 215,\r\n//     lpSymbol: 'BIFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x01956F08A55e4FF9775bc01aF6ACb09144564837',\r\n//     },\r\n//     token: tokens.bifi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 214,\r\n//     lpSymbol: 'TXL-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8Ba7eB4056338fd7271E1b7431C8ca3827eF907c',\r\n//     },\r\n//     token: tokens.txl,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 213,\r\n//     lpSymbol: 'COS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xAfB2e729A24629aBdE8E55CEB0e1f899bEe0f70f',\r\n//     },\r\n//     token: tokens.cos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 212,\r\n//     lpSymbol: 'BUNNY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x283FA8d459Da6e3165B2faF7FA0DD0137503DECf',\r\n//     },\r\n//     token: tokens.bunny,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 211,\r\n//     lpSymbol: 'ALICE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9e1BB5033d47BF8F16FC017CEC0959De7FF00833',\r\n//     },\r\n//     token: tokens.alice,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 210,\r\n//     lpSymbol: 'FOR-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xaBB817B07663521Cf64B006EC9D0FF185b65cfE5',\r\n//     },\r\n//     token: tokens.for,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 209,\r\n//     lpSymbol: 'BUX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7aA4eb5c3bF33e3AD41A47e26b3Bd9b902984610',\r\n//     },\r\n//     token: tokens.bux,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 208,\r\n//     lpSymbol: 'NULS-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xaB46737CAAFbB99999f8b91E4D3C6D4D28E10e05',\r\n//     },\r\n//     token: tokens.nuls,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 207,\r\n//     lpSymbol: 'BELT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x446ff2C0F5350bF2dadD0e0F1AaAA573b362CA6B',\r\n//     },\r\n//     token: tokens.belt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 206,\r\n//     lpSymbol: 'RAMP-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6ED589e69D1927AC45054cBb6E57877879384d6F',\r\n//     },\r\n//     token: tokens.ramp,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 205,\r\n//     lpSymbol: 'BFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xFFA2357f1E6f48d74b1c18c363c3Fe58A032405a',\r\n//     },\r\n//     token: tokens.bfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 204,\r\n//     lpSymbol: 'DEXE-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x534b0b0700c0cfF9785852707f07f60E7C0bc07E',\r\n//     },\r\n//     token: tokens.dexe,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 203,\r\n//     lpSymbol: 'BEL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2013265224E3cB6A53C67130F9Fe53Ae36CFcfdd',\r\n//     },\r\n//     token: tokens.bel,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 202,\r\n//     lpSymbol: 'TPT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC14c2dd21d6aEA3C2068A1F8e58d41D3c28F9288',\r\n//     },\r\n//     token: tokens.tpt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 201,\r\n//     lpSymbol: 'WATCH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD5fBfFf5faB9d29f614d9bd50AF9b1356C53049C',\r\n//     },\r\n//     token: tokens.watch,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 200,\r\n//     lpSymbol: 'xMARK-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x601aE41C5a65b2089a6af2CcfaF984896a1f52AD',\r\n//     },\r\n//     token: tokens.xmark,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 199,\r\n//     lpSymbol: 'bMXX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x037d38c7DfF5732DAA5f8C05478Eb75cdf24f42B',\r\n//     },\r\n//     token: tokens.bmxx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 198,\r\n//     lpSymbol: 'IOTX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8503462D0d4D3ce73e857bCC7D0Ef1125B0d66fF',\r\n//     },\r\n//     token: tokens.iotx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 197,\r\n//     lpSymbol: 'BOR-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE0243Ce3b50bd551168cE6964F178507d0a1acD5',\r\n//     },\r\n//     token: tokens.bor,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 196,\r\n//     lpSymbol: 'bOPEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD2FcF98EaeD2c08e9BcA854802C07b93D27913aC',\r\n//     },\r\n//     token: tokens.bopen,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 195,\r\n//     lpSymbol: 'SUSHI-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3BECbb09F622187B544C0892EeDeB58C004117e1',\r\n//     },\r\n//     token: tokens.sushi,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 194,\r\n//     lpSymbol: 'DODO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x220e34306a93002fB7947C9Fc633d6f538bd5032',\r\n//     },\r\n//     token: tokens.dodo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 192,\r\n//     lpSymbol: 'BRY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC3E303647cbD43EC22989275e7ecFA8952A6BA02',\r\n//     },\r\n//     token: tokens.bry,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 191,\r\n//     lpSymbol: 'ZEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6d1299B158bd13F4B50e951aaBf2Aa501FD87E52',\r\n//     },\r\n//     token: tokens.zee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 190,\r\n//     lpSymbol: 'SWGb-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd2A5008d555371e97F30B6dD71597b4F1eDB0f20',\r\n//     },\r\n//     token: tokens.swgb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 189,\r\n//     lpSymbol: 'COMP-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6A55a9176f11c1118f01CBaf6c4033a5c1B22a81',\r\n//     },\r\n//     token: tokens.comp,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 188,\r\n//     lpSymbol: 'SFP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x01744B868fe98dB669EBf4e9CA557462BAA6097c',\r\n//     },\r\n//     token: tokens.sfp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 187,\r\n//     lpSymbol: 'LINA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb923A2Beeb0834528D20b8973A2c69088571aA9E',\r\n//     },\r\n//     token: tokens.lina,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 186,\r\n//     lpSymbol: 'LIT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x41D69Beda3AFF2FFE48E715e2f4248Cb272cFf30',\r\n//     },\r\n//     token: tokens.lit,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 185,\r\n//     lpSymbol: 'HGET-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x239aD1874114B2235485e34b14c48dB73CCA3ffb',\r\n//     },\r\n//     token: tokens.hget,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 184,\r\n//     lpSymbol: 'BDO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF7045D7dE334a3F6c1254f98167b2af130eEA8E6',\r\n//     },\r\n//     token: tokens.bdo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 183,\r\n//     lpSymbol: 'EGLD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB4670bBEce2D02c4D30786D173985A984686042C',\r\n//     },\r\n//     token: tokens.egld,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 182,\r\n//     lpSymbol: 'UST-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1719606031F1E0B3CCaCa11A2CF550Ef8feBEB0F',\r\n//     },\r\n//     token: tokens.ust,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 181,\r\n//     lpSymbol: 'mAMZN-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2c065E42B464ef38480778B0624A207A09042481',\r\n//     },\r\n//     token: tokens.mamzn,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 180,\r\n//     lpSymbol: 'mGOOGL-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x74d8Dbac5053d31E904a821A3B4C411Bd4dd2307',\r\n//     },\r\n//     token: tokens.mgoogl,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 179,\r\n//     lpSymbol: 'mNFLX-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe1d76359FE4Eb7f0dAd1D719256c22890864718E',\r\n//     },\r\n//     token: tokens.mnflx,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 178,\r\n//     lpSymbol: 'mTSLA-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x36285DDD149949f366b5aFb3f41Cea71d35B8c9e',\r\n//     },\r\n//     token: tokens.mtsla,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 177,\r\n//     lpSymbol: 'wSOTE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe5909de3822d589c220Fb4FA1660A0Fd251Fa87d',\r\n//     },\r\n//     token: tokens.wsote,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 176,\r\n//     lpSymbol: 'FRONT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x84Df48B3e900C79539F6c523D6F528802BeAa713',\r\n//     },\r\n//     token: tokens.front,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 175,\r\n//     lpSymbol: 'Helmet-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD09648792d7e77523ae311Fa5A8F38E4684A5f15',\r\n//     },\r\n//     token: tokens.helmet,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 174,\r\n//     lpSymbol: 'BTCST-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf967845A6D30C44b555C49C50530076dF5D7fd75',\r\n//     },\r\n//     token: tokens.btcst,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 173,\r\n//     lpSymbol: 'LTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x286E8d71722c585c9A82876B1B2FB4dEe9fc536E',\r\n//     },\r\n//     token: tokens.ltc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 172,\r\n//     lpSymbol: 'USDC-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x05FC2ac8a4FA697501087C916c87b8a5dc4f7b46',\r\n//     },\r\n//     token: tokens.usdc,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 171,\r\n//     lpSymbol: 'DAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdaFE10aA3AB6758596aDAC70f6873C49F5a9bf86',\r\n//     },\r\n//     token: tokens.dai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 170,\r\n//     lpSymbol: 'BSCX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5fE5394BBc394345737b8e6e48be2804E89eC0eB',\r\n//     },\r\n//     token: tokens.bscx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 169,\r\n//     lpSymbol: 'TEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x003C4d60de42eAD30739dD204BD153fE69E20Fb2',\r\n//     },\r\n//     token: tokens.ten,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 168,\r\n//     lpSymbol: 'bALBT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x1B8ab50d894CfE793B44057F681A950E87Bd0331',\r\n//     },\r\n//     token: tokens.balbt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 167,\r\n//     lpSymbol: 'REEF-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x074ed2De503580887073A0F788E035C0fbe13F48',\r\n//     },\r\n//     token: tokens.reef,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 166,\r\n//     lpSymbol: 'Ditto-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb33D432eACe45DF62F0145228B550b214DCaA6D4',\r\n//     },\r\n//     token: tokens.ditto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 165,\r\n//     lpSymbol: 'VAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9d95063661fa34B67E0Be0cc71Cf92fc6126aF37',\r\n//     },\r\n//     token: tokens.vai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 164,\r\n//     lpSymbol: 'BLK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdA5a79fFe24739876a52AEF0d419aBB3b2517922',\r\n//     },\r\n//     token: tokens.blink,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 163,\r\n//     lpSymbol: 'UNFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x029f944CD3afa7c229122b19c706d8B7c01e062a',\r\n//     },\r\n//     token: tokens.unfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 162,\r\n//     lpSymbol: 'HARD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x158e337e7Dcfcd8FC512840208BB522d122bB19d',\r\n//     },\r\n//     token: tokens.hard,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 161,\r\n//     lpSymbol: 'CTK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcbb3fCE7134aF9ef2f3DCe0EAE96db68961b1337',\r\n//     },\r\n//     token: tokens.ctk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 160,\r\n//     lpSymbol: 'SXP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6294D8518b7321dc22E32AA907A89B1DAfc1aDbB',\r\n//     },\r\n//     token: tokens.sxp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 159,\r\n//     lpSymbol: 'INJ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0444712EE8DFF8913B2b44CB1D2a0273b4CDaBe9',\r\n//     },\r\n//     token: tokens.inj,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 158,\r\n//     lpSymbol: 'FIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD027c0B352578b1Cf57f472107591CaE5fa27Eb1',\r\n//     },\r\n//     token: tokens.fil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 157,\r\n//     lpSymbol: 'UNI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2937202a53C82E36bC8beCFBe79795bedF284804',\r\n//     },\r\n//     token: tokens.uni,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 156,\r\n//     lpSymbol: 'YFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xfffad7374c894E65b498BDBD489a9a5324A59F60',\r\n//     },\r\n//     token: tokens.yfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 155,\r\n//     lpSymbol: 'YFII-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x237E7016Ff50D3B704A7e07571aE08628909A116',\r\n//     },\r\n//     token: tokens.yfii,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 154,\r\n//     lpSymbol: 'ATOM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7DD05eF533b1eBCE7815c90678D4B7344E32b8c9',\r\n//     },\r\n//     token: tokens.atom,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 153,\r\n//     lpSymbol: 'XRP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0F640E3ec77415Fd810D18B3ac000cD8a172E22f',\r\n//     },\r\n//     token: tokens.xrp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 152,\r\n//     lpSymbol: 'USDT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4160910ca32eAD83B6d4b32107974397D2579c2d',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 151,\r\n//     lpSymbol: 'ALPHA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0edAA38Bd263E83fAECbC8476822800F30eE6028',\r\n//     },\r\n//     token: tokens.alpha,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 150,\r\n//     lpSymbol: 'BTCB-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x356b7d0d3c54F22C82B7a670C6Ba9E2381b0624c',\r\n//     },\r\n//     token: tokens.btcb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 149,\r\n//     lpSymbol: 'ETH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4D7078a6B348766E7a16cD6e6fCb3064721bc6a6',\r\n//     },\r\n//     token: tokens.eth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 148,\r\n//     lpSymbol: 'XVS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x77B5dB64fD4Cf5B699855420fF2608B2EA6708B3',\r\n//     },\r\n//     token: tokens.xvs,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 147,\r\n//     lpSymbol: 'TWT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x34910518Faf5bfd3a4D15ccFE104B63f06ee3d85',\r\n//     },\r\n//     token: tokens.twt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 146,\r\n//     lpSymbol: 'USDT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x28b81C6b155fd9152AE4A09c4eeB7E7F1C114FaC',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 145,\r\n//     lpSymbol: 'LINK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x380941fFd7b7cbf4AEbBfa8A26aa80c2f6570909',\r\n//     },\r\n//     token: tokens.link,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 144,\r\n//     lpSymbol: 'EOS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x082A80b3a55BD3B320a16678784186a979882b21',\r\n//     },\r\n//     token: tokens.eos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 143,\r\n//     lpSymbol: 'DOT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3aFfc4dd05286ed6B7206Fc85219d222130e35a9',\r\n//     },\r\n//     token: tokens.dot,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 142,\r\n//     lpSymbol: 'BAND-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x473390697036E7611a670575eA9141583471fF47',\r\n//     },\r\n//     token: tokens.band,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 141,\r\n//     lpSymbol: 'ADA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xec0C5719cC100DfB6c6F371bb48d3D079ab6A6D2',\r\n//     },\r\n//     token: tokens.ada,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 140,\r\n//     lpSymbol: 'BUSD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9bdEdb0c876fC0Da79D945DF28942b898Af89Fc7',\r\n//     },\r\n//     token: tokens.busd,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   /**\r\n//    * All farms below here are from v1 and are to be set to 0x\r\n//    */\r\n//   {\r\n//     pid: 1,\r\n//     lpSymbol: 'FARM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0x3ed8936cAFDF85cfDBa29Fbe5940A5b0524824F4',\r\n//       56: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\r\n//     },\r\n//     token: tokens.cake,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 136,\r\n//     lpSymbol: 'τBTC-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2d4e52c48fd18ee06d3959e82ab0f773c41b9277',\r\n//     },\r\n//     token: tokens.τbtc,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 76,\r\n//     lpSymbol: 'SWINGBY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4576C456AF93a37a096235e5d83f812AC9aeD027',\r\n//     },\r\n//     token: tokens.swingby,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 135,\r\n//     lpSymbol: 'XED-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x718d3baa161e1a38758bb0f1fe751e401f431ac4',\r\n//     },\r\n//     token: tokens.xed,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 134,\r\n//     lpSymbol: 'HAKKA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x56bc8de6e90a8454cb2614b33e750d960aecdf12',\r\n//     },\r\n//     token: tokens.hakka,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 133,\r\n//     lpSymbol: 'CGG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x484c60f6202c8043DCA0236bB3101ada7ec50AD4',\r\n//     },\r\n//     token: tokens.cgg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 132,\r\n//     lpSymbol: 'SUTER-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6Ff75C20656A0E4745E7c114972D361F483AFa5f',\r\n//     },\r\n//     token: tokens.suter,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 131,\r\n//     lpSymbol: 'bROOBEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9e6f9f3382f9edc683203b528222c554c92382c2',\r\n//     },\r\n//     token: tokens.broobee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 130,\r\n//     lpSymbol: 'HZN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xee4ca18e91012bf87fefde3dd6723a8834347a4d',\r\n//     },\r\n//     token: tokens.hzn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 129,\r\n//     lpSymbol: 'ALPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x837cd42282801e340f1f17aadf3166fee99fb07c',\r\n//     },\r\n//     token: tokens.alpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 128,\r\n//     lpSymbol: 'PERL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x044e9985c14a547d478b1e3d4a4e562e69c8f936',\r\n//     },\r\n//     token: tokens.perl,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 127,\r\n//     lpSymbol: 'TLM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x34e821e785A93261B697eBD2797988B3AA78ca33',\r\n//     },\r\n//     token: tokens.tlm,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 125,\r\n//     lpSymbol: 'JGN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x890479844484D67e34B99e1BBc1468231b254c08',\r\n//     },\r\n//     token: tokens.jgn,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 124,\r\n//     lpSymbol: 'EPS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf9045866e7b372def1eff3712ce55fac1a98daf0',\r\n//     },\r\n//     token: tokens.eps,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 123,\r\n//     lpSymbol: 'ARPA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xfb29fca952b478ddcb8a43f57176161e498225b1',\r\n//     },\r\n//     token: tokens.arpa,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 122,\r\n//     lpSymbol: 'ITAM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xCdC53345192D0e31eEAD03D7E9e008Ee659FAEbE',\r\n//     },\r\n//     token: tokens.itam,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 121,\r\n//     lpSymbol: 'BONDLY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x67581bfb4fc13bb73c71489b504e9b5354769063',\r\n//     },\r\n//     token: tokens.bondly,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 120,\r\n//     lpSymbol: 'TKO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x496a8b716A3A3410B16e71E3c906968CE4488e52',\r\n//     },\r\n//     token: tokens.tko,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 119,\r\n//     lpSymbol: 'APYS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE5783Cc9dFb3E7e474B81B07369a008e80F1cEdb',\r\n//     },\r\n//     token: tokens.apys,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 118,\r\n//     lpSymbol: 'HOO-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3c9e55edbd937ae0ad8c084a1a8302110612a371',\r\n//     },\r\n//     token: tokens.hoo,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 117,\r\n//     lpSymbol: 'ODDZ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x61376b56ff33c618b115131712a4138f98810a6a',\r\n//     },\r\n//     token: tokens.oddz,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 116,\r\n//     lpSymbol: 'EASY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbd1ec00b0d1cca9d5b28fbe0bb7d664238af2ffa',\r\n//     },\r\n//     token: tokens.easy,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 115,\r\n//     lpSymbol: 'NRV-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5a805994a2e30ac710e7376ccc0211285bd4dd92',\r\n//     },\r\n//     token: tokens.nrv,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 114,\r\n//     lpSymbol: 'DEGO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x17F0b998B81cE75074a7CDAdAe6D63Da3cb23572',\r\n//     },\r\n//     token: tokens.dego,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 113,\r\n//     lpSymbol: 'GUM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x155645cDF8e4B28d5B7790b65d9f79efc222740C',\r\n//     },\r\n//     token: tokens.gum,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 112,\r\n//     lpSymbol: 'pBTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb5f6f7dad23132d40d778085d795bd0fd4b859cd',\r\n//     },\r\n//     token: tokens.pbtc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 111,\r\n//     lpSymbol: 'DFT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8FbCbD7e30b1733965a8980bf7Ae2ca1c0C456cc',\r\n//     },\r\n//     token: tokens.dft,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 110,\r\n//     lpSymbol: 'SWTH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x8c5cFfad6cddb96Ee33DA685D0d50a37e030E115',\r\n//     },\r\n//     token: tokens.swth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 109,\r\n//     lpSymbol: 'LIEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcd14855150335AAE984aa6D281E090c27035C692',\r\n//     },\r\n//     token: tokens.lien,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 108,\r\n//     lpSymbol: 'ZIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc746337b5f800a0e19ed4eb3bda03ff1401b8167',\r\n//     },\r\n//     token: tokens.zil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 107,\r\n//     lpSymbol: 'pCWS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x889e81d25bffba437b2a5d3e0e4fc58a0e2749c5',\r\n//     },\r\n//     token: tokens.pcws,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 106,\r\n//     lpSymbol: 'bBADGER-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x10F461CEAC7A17F59e249954Db0784d42EfF5DB5',\r\n//     },\r\n//     token: tokens.bbadger,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 104,\r\n//     lpSymbol: 'bDIGG-BTCB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xE1E33459505bB3763843a426F7Fd9933418184ae',\r\n//     },\r\n//     token: tokens.bdigg,\r\n//     quoteToken: tokens.btcb,\r\n//   },\r\n//   {\r\n//     pid: 103,\r\n//     lpSymbol: 'LTO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x85644fcd00c401e1a0a0a10d2ae6bbe04a73e4ab',\r\n//     },\r\n//     token: tokens.lto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 102,\r\n//     lpSymbol: 'MIR-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xf64a269F0A06dA07D23F43c1Deb217101ee6Bee7',\r\n//     },\r\n//     token: tokens.mir,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 101,\r\n//     lpSymbol: 'TRADE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x2562f94E90dE6D9eb4fB6B3b8Eab56b15Aa4FC72',\r\n//     },\r\n//     token: tokens.trade,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 100,\r\n//     lpSymbol: 'DUSK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xB7918560273FD56e50E9c215CC0DFE8D764C36C5',\r\n//     },\r\n//     token: tokens.dusk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 99,\r\n//     lpSymbol: 'BIFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd132D2C24F29EE8ABb64a66559d1b7aa627Bd7fD',\r\n//     },\r\n//     token: tokens.bifi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 98,\r\n//     lpSymbol: 'TXL-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD20E0BcCa8B29409bf5726CB24DD779Fe337020e',\r\n//     },\r\n//     token: tokens.txl,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 97,\r\n//     lpSymbol: 'COS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7b1e440240B220244761C9D9A3B07fbA1995BD84',\r\n//     },\r\n//     token: tokens.cos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 96,\r\n//     lpSymbol: 'BUNNY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7Bb89460599Dbf32ee3Aa50798BBcEae2A5F7f6a',\r\n//     },\r\n//     token: tokens.bunny,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 95,\r\n//     lpSymbol: 'ALICE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xe022baa3E5E87658f789c9132B10d7425Fd3a389',\r\n//     },\r\n//     token: tokens.alice,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 94,\r\n//     lpSymbol: 'FOR-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xfEc200A5E3adDD4a7915a556DDe3F5850e644020',\r\n//     },\r\n//     token: tokens.for,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 93,\r\n//     lpSymbol: 'BUX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0F556f4E47513d1a19Be456a9aF778d7e1A226B9',\r\n//     },\r\n//     token: tokens.bux,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 92,\r\n//     lpSymbol: 'NULS-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xCA01F5D89d5b1d24ca5D6Ecc856D21e8a61DAFCc',\r\n//     },\r\n//     token: tokens.nuls,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 91,\r\n//     lpSymbol: 'NULS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xad7e515409e5a7d516411a85acc88c5e993f570a',\r\n//     },\r\n//     token: tokens.nuls,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 90,\r\n//     lpSymbol: 'BELT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x83B92D283cd279fF2e057BD86a95BdEfffED6faa',\r\n//     },\r\n//     token: tokens.belt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 89,\r\n//     lpSymbol: 'RAMP-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbF36959939982D0D34B37Fb3f3425da9676C13a3',\r\n//     },\r\n//     token: tokens.ramp,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 88,\r\n//     lpSymbol: 'BFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x45a9e8d48bc560416008d122c9437927fed50e7d',\r\n//     },\r\n//     token: tokens.bfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 87,\r\n//     lpSymbol: 'DEXE-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x69ab367bc1bea1d2c0fb4dbaec6b7197951da56c',\r\n//     },\r\n//     token: tokens.dexe,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 86,\r\n//     lpSymbol: 'BEL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xAB97952a2806D5c92b7046c7aB13a72A87e0097b',\r\n//     },\r\n//     token: tokens.bel,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 85,\r\n//     lpSymbol: 'TPT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4db28767d1527ba545ca5bbda1c96a94ed6ff242',\r\n//     },\r\n//     token: tokens.tpt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 84,\r\n//     lpSymbol: 'WATCH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xdc6c130299e53acd2cc2d291fa10552ca2198a6b',\r\n//     },\r\n//     token: tokens.watch,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 83,\r\n//     lpSymbol: 'xMARK-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x292ca56ed5b3330a19037f835af4a9c0098ea6fa',\r\n//     },\r\n//     token: tokens.xmark,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 82,\r\n//     lpSymbol: 'bMXX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x4D5aA94Ce6BbB1BC4eb73207a5a5d4D052cFcD67',\r\n//     },\r\n//     token: tokens.bmxx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 81,\r\n//     lpSymbol: 'IOTX-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x36b8b28d37f93372188f2aa2507b68a5cd8b2664',\r\n//     },\r\n//     token: tokens.iotx,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 80,\r\n//     lpSymbol: 'BOR-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x86e650350c40a5178a5d014ba37fe8556232b898',\r\n//     },\r\n//     token: tokens.bor,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 79,\r\n//     lpSymbol: 'bOPEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9d8b7e4a9d53654d82f12c83448d8f92732bc761',\r\n//     },\r\n//     token: tokens.bopen,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 78,\r\n//     lpSymbol: 'SUSHI-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x17580340f3daedae871a8c21d15911742ec79e0f',\r\n//     },\r\n//     token: tokens.sushi,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 77,\r\n//     lpSymbol: 'DODO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9e642d174b14faea31d842dc83037c42b53236e6',\r\n//     },\r\n//     token: tokens.dodo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 75,\r\n//     lpSymbol: 'BRY-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x5E3CD27F36932Bc0314aC4e2510585798C34a2fC',\r\n//     },\r\n//     token: tokens.bry,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 74,\r\n//     lpSymbol: 'ZEE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xb5ab3996808c7e489dcdc0f1af2ab212ae0059af',\r\n//     },\r\n//     token: tokens.zee,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 73,\r\n//     lpSymbol: 'SWGb-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc1800c29cf91954357cd0bf3f0accaada3d0109c',\r\n//     },\r\n//     token: tokens.swgb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 72,\r\n//     lpSymbol: 'COMP-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x0392957571f28037607c14832d16f8b653edd472',\r\n//     },\r\n//     token: tokens.comp,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 71,\r\n//     lpSymbol: 'SFP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xcbe2cf3bd012e9c1ade2ee4d41db3dac763e78f3',\r\n//     },\r\n//     token: tokens.sfp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 70,\r\n//     lpSymbol: 'BETH-ETH LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x99d865ed50d2c32c1493896810fa386c1ce81d91',\r\n//     },\r\n//     token: tokens.beth,\r\n//     quoteToken: tokens.eth,\r\n//   },\r\n//   {\r\n//     pid: 69,\r\n//     lpSymbol: 'LINA-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xeb325a8ea1c5abf40c7ceaf645596c1f943d0948',\r\n//     },\r\n//     token: tokens.lina,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 68,\r\n//     lpSymbol: 'LIT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x60bB03D1010b99CEAdD0dd209b64bC8bd83da161',\r\n//     },\r\n//     token: tokens.lit,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 67,\r\n//     lpSymbol: 'HGET-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x66b9e1eac8a81f3752f7f3a5e95de460688a17ee',\r\n//     },\r\n//     token: tokens.hget,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 66,\r\n//     lpSymbol: 'BDO-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x74690f829fec83ea424ee1f1654041b2491a7be9',\r\n//     },\r\n//     token: tokens.bdo,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 65,\r\n//     lpSymbol: 'EGLD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3ef4952c7a9afbe374ea02d1bf5ed5a0015b7716',\r\n//     },\r\n//     token: tokens.egld,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 63,\r\n//     lpSymbol: 'UST-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD1F12370b2ba1C79838337648F820a87eDF5e1e6',\r\n//     },\r\n//     token: tokens.ust,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 62,\r\n//     lpSymbol: 'mAMZN-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xc92Dc34665c8a21f98E1E38474580b61b4f3e1b9',\r\n//     },\r\n//     token: tokens.mamzn,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 61,\r\n//     lpSymbol: 'mGOOGL-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x852A68181f789AE6d1Da3dF101740a59A071004f',\r\n//     },\r\n//     token: tokens.mgoogl,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 60,\r\n//     lpSymbol: 'mNFLX-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xF609ade3846981825776068a8eD7746470029D1f',\r\n//     },\r\n//     token: tokens.mnflx,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 59,\r\n//     lpSymbol: 'mTSLA-UST LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xD5664D2d15cdffD597515f1c0D945c6c1D3Bf85B',\r\n//     },\r\n//     token: tokens.mtsla,\r\n//     quoteToken: tokens.ust,\r\n//   },\r\n//   {\r\n//     pid: 58,\r\n//     lpSymbol: 'wSOTE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xffb9e2d5ce4378f1a89b29bf53f80804cc078102',\r\n//     },\r\n//     token: tokens.wsote,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 57,\r\n//     lpSymbol: 'FRONT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x36b7d2e5c7877392fb17f9219efad56f3d794700',\r\n//     },\r\n//     token: tokens.front,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 56,\r\n//     lpSymbol: 'Helmet-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x6411310c07d8c48730172146fd6f31fa84034a8b',\r\n//     },\r\n//     token: tokens.helmet,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 55,\r\n//     lpSymbol: 'BTCST-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x91589786D36fEe5B27A5539CfE638a5fc9834665',\r\n//     },\r\n//     token: tokens.btcst,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 54,\r\n//     lpSymbol: 'LTC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbc765fd113c5bdb2ebc25f711191b56bb8690aec',\r\n//     },\r\n//     token: tokens.ltc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 53,\r\n//     lpSymbol: 'USDC-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x680dd100e4b394bda26a59dd5c119a391e747d18',\r\n//     },\r\n//     token: tokens.usdc,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 52,\r\n//     lpSymbol: 'DAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x3aB77e40340AB084c3e23Be8e5A6f7afed9D41DC',\r\n//     },\r\n//     token: tokens.dai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 51,\r\n//     lpSymbol: 'BSCX-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x20781bc3701c5309ac75291f5d09bdc23d7b7fa8',\r\n//     },\r\n//     token: tokens.bscx,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 50,\r\n//     lpSymbol: 'TEN-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x01ecc44ddd2d104f44d2aa1a2bd9dfbc91ae8275',\r\n//     },\r\n//     token: tokens.ten,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 49,\r\n//     lpSymbol: 'bALBT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbe14f3a89a4f7f279af9d99554cf12e8c29db921',\r\n//     },\r\n//     token: tokens.balbt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 46,\r\n//     lpSymbol: 'OG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x64373608f2e93ea97ad4d8ca2cce6b2575db2f55',\r\n//     },\r\n//     token: tokens.og,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 47,\r\n//     lpSymbol: 'ASR-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd6b900d5308356317299dafe303e661271aa12f1',\r\n//     },\r\n//     token: tokens.asr,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 48,\r\n//     lpSymbol: 'ATM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xd5b3ebf1a85d32c73a82b40f75e1cd929caf4029',\r\n//     },\r\n//     token: tokens.atm,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 45,\r\n//     lpSymbol: 'REEF-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x58B58cab6C5cF158f63A2390b817710826d116D0',\r\n//     },\r\n//     token: tokens.reef,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 44,\r\n//     lpSymbol: 'Ditto-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x470bc451810b312bbb1256f96b0895d95ea659b1',\r\n//     },\r\n//     token: tokens.ditto,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 43,\r\n//     lpSymbol: 'JUV-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x51a2ffa5b7de506f9a22549e48b33f6cf0d9030e',\r\n//     },\r\n//     token: tokens.juv,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 42,\r\n//     lpSymbol: 'PSG-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x9c4f6a5050cf863e67a402e8b377973b4e3372c1',\r\n//     },\r\n//     token: tokens.psg,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 39,\r\n//     lpSymbol: 'UNFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xbEA35584b9a88107102ABEf0BDeE2c4FaE5D8c31',\r\n//     },\r\n//     token: tokens.unfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 41,\r\n//     lpSymbol: 'VAI-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xff17ff314925dff772b71abdff2782bc913b3575',\r\n//     },\r\n//     token: tokens.vai,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 40,\r\n//     lpSymbol: 'BLK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0xC743Dc05F03D25E1aF8eC5F8228f4BD25513c8d0',\r\n//     },\r\n//     token: tokens.blink,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 37,\r\n//     lpSymbol: 'HARD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x9f40e8a2fcaa267a0c374b6c661e0b372264cc3d',\r\n//     },\r\n//     token: tokens.hard,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 2,\r\n//     lpSymbol: 'BUSD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0x2f7682b64b88149ba3250aee32db712964de5fa9',\r\n//       56: '0x1b96b92314c44b159149f7e0303511fb2fc4774f',\r\n//     },\r\n//     token: tokens.busd,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 3,\r\n//     lpSymbol: 'ADA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n//       56: '0xba51d1ab95756ca4eab8737ecd450cd8f05384cf',\r\n//     },\r\n//     token: tokens.ada,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 4,\r\n//     lpSymbol: 'BAND-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xcbe3282a562e23b8c61ed04bb72ffdbb9233b1ce',\r\n//       56: '0xc639187ef82271d8f517de6feae4faf5b517533c',\r\n//     },\r\n//     token: tokens.band,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 5,\r\n//     lpSymbol: 'DOT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xbcd62661a6b1ded703585d3af7d7649ef4dcdb5c',\r\n//     },\r\n//     token: tokens.dot,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 6,\r\n//     lpSymbol: 'EOS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x981d2ba1b298888408d342c39c2ab92e8991691e',\r\n//     },\r\n//     token: tokens.eos,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 7,\r\n//     lpSymbol: 'LINK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xaebe45e3a03b734c68e5557ae04bfc76917b4686',\r\n//     },\r\n//     token: tokens.link,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 11,\r\n//     lpSymbol: 'USDT-BUSD LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xc15fa3E22c912A276550F3E5FE3b0Deb87B55aCd',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.busd,\r\n//   },\r\n//   {\r\n//     pid: 12,\r\n//     lpSymbol: 'TWT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x610e7a287c27dfFcaC0F0a94f547Cc1B770cF483',\r\n//     },\r\n//     token: tokens.twt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 13,\r\n//     lpSymbol: 'XVS-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x41182c32F854dd97bA0e0B1816022e0aCB2fc0bb',\r\n//     },\r\n//     token: tokens.xvs,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 14,\r\n//     lpSymbol: 'ETH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x70D8929d04b60Af4fb9B58713eBcf18765aDE422',\r\n//     },\r\n//     token: tokens.eth,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 15,\r\n//     lpSymbol: 'BTCB-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x7561EEe90e24F3b348E1087A005F78B4c8453524',\r\n//     },\r\n//     token: tokens.btcb,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 16,\r\n//     lpSymbol: 'ALPHA-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x4e0f3385d932F7179DeE045369286FFa6B03d887',\r\n//     },\r\n//     token: tokens.alpha,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 17,\r\n//     lpSymbol: 'USDT-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x20bcc3b8a0091ddac2d0bc30f68e6cbb97de59cd',\r\n//     },\r\n//     token: tokens.usdt,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 18,\r\n//     lpSymbol: 'XRP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xc7b4b32a3be2cb6572a1c9959401f832ce47a6d2',\r\n//     },\r\n//     token: tokens.xrp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 19,\r\n//     lpSymbol: 'ATOM-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x2333c77fc0b2875c11409cdcd3c75d42d402e834',\r\n//     },\r\n//     token: tokens.atom,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 20,\r\n//     lpSymbol: 'YFII-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x574a978c2d0d36d707a05e459466c7a1054f1210',\r\n//     },\r\n//     token: tokens.yfii,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 21,\r\n//     lpSymbol: 'DAI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x56c77d59e82f33c712f919d09fceddf49660a829',\r\n//     },\r\n//     token: tokens.dai,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 22,\r\n//     lpSymbol: 'XTZ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x5acac332f0f49c8badc7afd0134ad19d3db972e6',\r\n//     },\r\n//     token: tokens.xtz,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 23,\r\n//     lpSymbol: 'BCH-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x54edd846db17f43b6e43296134ecd96284671e81',\r\n//     },\r\n//     token: tokens.bch,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 24,\r\n//     lpSymbol: 'YFI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x68Ff2ca47D27db5Ac0b5c46587645835dD51D3C1',\r\n//     },\r\n//     token: tokens.yfi,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 25,\r\n//     lpSymbol: 'UNI-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x4269e7F43A63CEA1aD7707Be565a94a9189967E9',\r\n//     },\r\n//     token: tokens.uni,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 26,\r\n//     lpSymbol: 'FIL-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x35fe9787f0ebf2a200bac413d3030cf62d312774',\r\n//     },\r\n//     token: tokens.fil,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 27,\r\n//     lpSymbol: 'INJ-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x7a34bd64d18e44CfdE3ef4B81b87BAf3EB3315B6',\r\n//     },\r\n//     token: tokens.inj,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 29,\r\n//     lpSymbol: 'USDC-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x30479874f9320a62bce3bc0e315c920e1d73e278',\r\n//     },\r\n//     token: tokens.usdc,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 30,\r\n//     lpSymbol: 'SXP-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x752E713fB70E3FA1Ac08bCF34485F14A986956c4',\r\n//     },\r\n//     token: tokens.sxp,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 32,\r\n//     lpSymbol: 'CTK-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x7793870484647a7278907498ec504879d6971EAb',\r\n//     },\r\n//     token: tokens.ctk,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 34,\r\n//     lpSymbol: 'STAX-FARM LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x7cd05f8b960ba071fdf69c750c0e5a57c8366500',\r\n//     },\r\n//     token: tokens.stax,\r\n//     quoteToken: tokens.cake,\r\n//     isCommunity: true,\r\n//   },\r\n//   {\r\n//     pid: 35,\r\n//     lpSymbol: 'NAR-FARM LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x745c4fd226e169d6da959283275a8e0ecdd7f312',\r\n//     },\r\n//     token: tokens.nar,\r\n//     quoteToken: tokens.cake,\r\n//     isCommunity: true,\r\n//   },\r\n//   {\r\n//     pid: 36,\r\n//     lpSymbol: 'NYA-FARM LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x2730bf486d658838464a4ef077880998d944252d',\r\n//     },\r\n//     token: tokens.nya,\r\n//     quoteToken: tokens.cake,\r\n//     isCommunity: true,\r\n//   },\r\n//   {\r\n//     pid: 38,\r\n//     lpSymbol: 'bROOBEE-FARM LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x970858016C963b780E06f7DCfdEf8e809919BcE8',\r\n//     },\r\n//     token: tokens.broobee,\r\n//     quoteToken: tokens.cake,\r\n//     isCommunity: true,\r\n//   },\r\n//   {\r\n//     pid: 8,\r\n//     lpSymbol: 'BAKE-BNB Bakery LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xc2eed0f5a0dc28cfa895084bc0a9b8b8279ae492',\r\n//     },\r\n//     token: tokens.bake,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 9,\r\n//     lpSymbol: 'BURGER-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0xd937FB9E6e47F3805981453BFB277a49FFfE04D7',\r\n//     },\r\n//     token: tokens.burger,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n//   {\r\n//     pid: 10,\r\n//     lpSymbol: 'BAKE-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '0xE66790075ad839978fEBa15D4d8bB2b415556a1D',\r\n//       56: '0x3Da30727ed0626b78C212e81B37B97A8eF8A25bB',\r\n//     },\r\n//     token: tokens.bake,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n]\r\n\r\nexport default farms\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport { PageMeta } from './types'\r\n\r\nexport const DEFAULT_META: PageMeta = {\r\n  title: 'Bn',\r\n  description:\r\n    'The most popular AMM on BSC by user count! Earn FARM through yield farming or win it in the Lottery, then stake it in Syrup Pools to earn more tokens! Initial Farm Offerings and more, on a platform you can trust.',\r\n  image: 'http://45.32.148.194/images/LogoName.png',\r\n}\r\n\r\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\r\n  switch (path) {\r\n    case '/':\r\n      return {\r\n        title: `${t('Home')} | ${t('Bn')}`,\r\n      }\r\n    case '/competition':\r\n      return {\r\n        title: `${t('Trading Battle')} | ${t('Bn')}`,\r\n      }\r\n    case '/prediction':\r\n      return {\r\n        title: `${t('Prediction')} | ${t('Bn')}`,\r\n      }\r\n    case '/farms':\r\n      return {\r\n        title: `${t('Farms')} | ${t('Bn')}`,\r\n      }\r\n    case '/pools':\r\n      return {\r\n        title: `${t('Pools')} | ${t('Bn')}`,\r\n      }\r\n    case '/lottery':\r\n      return {\r\n        title: `${t('Lottery')} | ${t('Bn')}`,\r\n      }\r\n    case '/collectibles':\r\n      return {\r\n        title: `${t('Collectibles')} | ${t('Bn')}`,\r\n      }\r\n    case '/ifo':\r\n      return {\r\n        title: `${t('Initial Farm Offering')} | ${t('Bn')}`,\r\n      }\r\n    case '/teams':\r\n      return {\r\n        title: `${t('Leaderboard')} | ${t('Bn')}`,\r\n      }\r\n    case '/profile/tasks':\r\n      return {\r\n        title: `${t('Task Center')} | ${t('Bn')}`,\r\n      }\r\n    case '/profile':\r\n      return {\r\n        title: `${t('Your Profile')} | ${t('Bn')}`,\r\n      }\r\n    default:\r\n      return null\r\n  }\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Helmet } from 'react-helmet-async'\r\nimport { useLocation } from 'react-router'\r\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport Container from './Container'\r\n\r\nconst StyledPage = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nconst PageMeta = () => {\r\n  const { t } = useTranslation()\r\n  const { pathname } = useLocation()\r\n  const cakePriceUsd = usePriceCakeBusd()\r\n  const cakePriceUsdDisplay = cakePriceUsd.gt(0)\r\n    ? `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\r\n        minimumFractionDigits: 3,\r\n        maximumFractionDigits: 3,\r\n      })}`\r\n    : ''\r\n\r\n  const pageMeta = getCustomMeta(pathname, t) || {}\r\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\r\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\r\n\r\n  return (\r\n    <Helmet>\r\n      <title>{pageTitle}</title>\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={description} />\r\n      <meta property=\"og:image\" content={image} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\r\n  return (\r\n    <>\r\n      <PageMeta />\r\n      <StyledPage {...props}>{children}</StyledPage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport {\r\n  TokenPairImage as UIKitTokenPairImage,\r\n  TokenPairImageProps as UIKitTokenPairImageProps,\r\n} from '@pancakeswap/uikit'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Token } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\n\r\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\r\n  primaryToken: Token\r\n  secondaryToken: Token\r\n}\r\n\r\nconst getImageUrlFromToken = (token: Token) => {\r\n  const address = getAddress(token.symbol === 'BNB' ? tokens.wbnb.address : token.address)\r\n  return `/images/tokens/${address}.svg`\r\n}\r\n\r\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\r\n  return (\r\n    <UIKitTokenPairImage\r\n      primarySrc={getImageUrlFromToken(primaryToken)}\r\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TokenPairImage\r\n","import { InjectedConnector } from '@web3-react/injected-connector'\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\nimport { BscConnector } from '@binance-chain/bsc-connector'\r\nimport { ConnectorNames } from '@pancakeswap/uikit'\r\nimport { ethers } from 'ethers'\r\nimport getNodeUrl from './getRpcUrl'\r\n\r\nconst POLLING_INTERVAL = 12000\r\nconst rpcUrl = getNodeUrl()\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n\r\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n  rpc: { [chainId]: rpcUrl },\r\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\r\n  qrcode: true,\r\n  pollingInterval: POLLING_INTERVAL,\r\n})\r\n\r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n}\r\n\r\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\r\n  const library = new ethers.providers.Web3Provider(provider)\r\n  library.pollingInterval = POLLING_INTERVAL\r\n  return library\r\n}\r\n\r\n/**\r\n * BSC Wallet requires a different sign method\r\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\r\n */\r\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\r\n  if (window.BinanceChain) {\r\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\r\n    return signature\r\n  }\r\n\r\n  /**\r\n   * Wallet Connect does not sign the message correctly unless you use their method\r\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\r\n   */\r\n  if (provider.provider?.wc) {\r\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\r\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\r\n    return signature\r\n  }\r\n\r\n  return provider.getSigner(account).signMessage(message)\r\n}\r\n","// Set of helper functions to facilitate wallet setup\r\n\r\nimport { BASE_BSC_SCAN_URL } from 'config'\r\nimport { nodes } from './getRpcUrl'\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Polygon Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BNB',\r\n              symbol: 'bnb',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress: string,\r\n  tokenSymbol: string,\r\n  tokenDecimals: number,\r\n  tokenImage: string,\r\n) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void\r\n  tokenPrice: number\r\n  apr: number\r\n  displayApr?: string\r\n  linkLabel: string\r\n  linkHref: string\r\n  earningTokenSymbol?: string\r\n  roundingDecimals?: number\r\n  compoundFrequency?: number\r\n  performanceFee?: number\r\n  isFarm?: boolean\r\n}\r\n\r\n\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, auto);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 12px;\r\n`\r\n\r\nconst GridItem = styled.div``\r\n\r\nconst GridHeaderItem = styled.div`\r\n  max-width: 180px;\r\n`\r\n\r\nconst BulletList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  li {\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  li::before {\r\n    content: '•';\r\n    margin-right: 4px;\r\n  }\r\n\r\n  li::marker {\r\n    font-size: 12px;\r\n    color: ${({ theme }) => theme.colors.textSubtle};\r\n  }\r\n`\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  tokenPrice,\r\n  apr,\r\n  displayApr,\r\n  linkLabel,\r\n  linkHref,\r\n  earningTokenSymbol = 'FARM',\r\n  roundingDecimals = 2,\r\n  compoundFrequency = 1,\r\n  performanceFee = 0,\r\n  isFarm = false,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\r\n\r\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 1,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n// console.log(\"perform,,,,\",tokenEarnedPerThousand1D)\r\n\r\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 7,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 30,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n    numberOfDays: 365,\r\n    farmApr: apr,\r\n    tokenPrice,\r\n    roundingDecimals,\r\n    compoundFrequency,\r\n    performanceFee,\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\r\n      {isFarm && (\r\n        <Box>\r\n          <Flex mb=\"8px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('APR (incl. LP rewards)')}\r\n            </Text>\r\n            <Text small>{displayApr}%</Text>\r\n          </Flex>\r\n          <Flex mb=\"24px\" justifyContent=\"space-between\">\r\n            <Text small color=\"textSubtle\">\r\n              {t('Base APR (yield only)')}\r\n            </Text>\r\n            <Text small>{apr.toFixed(roundingDecimals)}%</Text>\r\n          </Flex>\r\n        </Box>\r\n      )}\r\n      <Grid>\r\n        <GridHeaderItem>\r\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('Timeframe')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text\r\n            textAlign=\"right\"\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mr=\"12px\"\r\n            ml=\"12px\"\r\n            mb=\"12px\"\r\n          >\r\n            {t('ROI')}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        <GridHeaderItem>\r\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\r\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\r\n          </Text>\r\n        </GridHeaderItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 1 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 7 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\r\n              roundingDecimals,\r\n            )}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>{t('%num%d', { num: 30 })}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem style={{ maxWidth: '180px' }}>\r\n          <Text>{t('365d (APY)')}</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\r\n            {getRoi({\r\n              amountEarned: tokenEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfToken,\r\n            }).toFixed(roundingDecimals)}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Flex justifyContent=\"center\">\r\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\r\n          <BulletList>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Calculated based on current rates.')}\r\n              </Text>\r\n            </li>\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\r\n              </Text>\r\n            </li>\r\n            {isFarm && (\r\n              <li>\r\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\r\n                </Text>\r\n              </li>\r\n            )}\r\n            <li>\r\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                {t(\r\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\r\n                )}\r\n              </Text>\r\n            </li>\r\n            {performanceFee > 0 && (\r\n              <li>\r\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\r\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\r\n                    fee: performanceFee,\r\n                  })}\r\n                </Text>\r\n              </li>\r\n            )}\r\n          </BulletList>\r\n        </Box>\r\n      </Flex>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ApyCalculatorModal\r\n","import { ChainId } from '@pancakeswap/sdk'\r\nimport addresses from 'config/constants/contracts'\r\nimport tokens from 'config/constants/tokens'\r\nimport { Address } from 'config/constants/types'\r\n\r\nexport const getAddress = (address: Address): string => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\r\n}\r\n\r\nexport const getCakeAddress = () => {\r\n  return getAddress(tokens.cake.address)\r\n}\r\nexport const getMasterChefAddress = () => {\r\n  return getAddress(addresses.masterChef)\r\n}\r\nexport const getMulticallAddress = () => {\r\n  return getAddress(addresses.multiCall)\r\n}\r\nexport const getWbnbAddress = () => {\r\n  return getAddress(tokens.wbnb.address)\r\n}\r\nexport const getLotteryV2Address = () => {\r\n  return getAddress(addresses.lotteryV2)\r\n}\r\nexport const getPancakeProfileAddress = () => {\r\n  return getAddress(addresses.pancakeProfile)\r\n}\r\nexport const getPancakeRabbitsAddress = () => {\r\n  return getAddress(addresses.pancakeRabbits)\r\n}\r\nexport const getBunnyFactoryAddress = () => {\r\n  return getAddress(addresses.bunnyFactory)\r\n}\r\nexport const getClaimRefundAddress = () => {\r\n  return getAddress(addresses.claimRefund)\r\n}\r\nexport const getPointCenterIfoAddress = () => {\r\n  return getAddress(addresses.pointCenterIfo)\r\n}\r\nexport const getBunnySpecialAddress = () => {\r\n  return getAddress(addresses.bunnySpecial)\r\n}\r\nexport const getTradingCompetitionAddress = () => {\r\n  return getAddress(addresses.tradingCompetition)\r\n}\r\nexport const getEasterNftAddress = () => {\r\n  return getAddress(addresses.easterNft)\r\n}\r\nexport const getCakeVaultAddress = () => {\r\n  return getAddress(addresses.cakeVault)\r\n}\r\nexport const getPredictionsAddress = () => {\r\n  return getAddress(addresses.predictions)\r\n}\r\nexport const getChainlinkOracleAddress = () => {\r\n  return getAddress(addresses.chainlinkOracle)\r\n}\r\nexport const getBunnySpecialCakeVaultAddress = () => {\r\n  return getAddress(addresses.bunnySpecialCakeVault)\r\n}\r\nexport const getBunnySpecialPredictionAddress = () => {\r\n  return getAddress(addresses.bunnySpecialPrediction)\r\n}\r\n","export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import sample from 'lodash/sample'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  return sample(nodes)\r\n}\r\n\r\nexport default getNodeUrl\r\n","const ARCHIVED_FARMS_START_PID = 139\r\nconst ARCHIVED_FARMS_END_PID = 250\r\n\r\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\r\n\r\nexport default isArchivedPid\r\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\r\nimport { kebabCase } from 'lodash'\r\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\r\nimport { ToastContextApi } from './types'\r\n\r\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\r\n\r\nexport const ToastsProvider: React.FC = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\r\n\r\n  const toast = useCallback(\r\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\r\n      setToasts((prevToasts) => {\r\n        const id = kebabCase(title)\r\n\r\n        // Remove any existing toasts with the same id\r\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\r\n\r\n        return [\r\n          {\r\n            id,\r\n            title,\r\n            description,\r\n            type,\r\n          },\r\n          ...currentToasts,\r\n        ]\r\n      })\r\n    },\r\n    [setToasts],\r\n  )\r\n\r\n  const toastError = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.DANGER })\r\n  }\r\n  const toastInfo = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.INFO })\r\n  }\r\n  const toastSuccess = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.SUCCESS })\r\n  }\r\n  const toastWarning = (title: string, description?: ReactNode) => {\r\n    return toast({ title, description, type: toastTypes.WARNING })\r\n  }\r\n  const clear = () => setToasts([])\r\n  const remove = (id: string) => {\r\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\r\n  }\r\n\r\n  return (\r\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\r\n      {children}\r\n    </ToastsContext.Provider>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { ToastContainer } from '@pancakeswap/uikit'\r\nimport useToast from 'hooks/useToast'\r\n\r\nconst ToastListener = () => {\r\n  const { toasts, remove } = useToast()\r\n\r\n  const handleRemove = (id: string) => remove(id)\r\n\r\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\r\n}\r\n\r\nexport default ToastListener\r\n","import { Campaign } from './types'\r\n\r\n/**\r\n * id: The campaign id (required)\r\n * type: The type of the achievement\r\n * title: A string or an object to be translated.\r\n * Note: If the value is a string it is likely used as data in a translation object\r\n *\r\n * badge: Achievement avatar\r\n */\r\n\r\nconst campaigns: Campaign[] = [\r\n  {\r\n    id: '511110000',\r\n    type: 'ifo',\r\n    title: 'Kalmar',\r\n    badge: 'ifo-kalm.svg',\r\n  },\r\n  {\r\n    id: '511100000',\r\n    type: 'ifo',\r\n    title: 'Hotcross',\r\n    badge: 'ifo-hotcross.svg',\r\n  },\r\n  {\r\n    id: '511090000',\r\n    type: 'ifo',\r\n    title: 'Horizon Protocol',\r\n    badge: 'ifo-hzn.svg',\r\n  },\r\n  {\r\n    id: '511080000',\r\n    type: 'ifo',\r\n    title: 'Belt',\r\n    badge: 'ifo-belt.svg',\r\n  },\r\n  {\r\n    id: '511070000',\r\n    type: 'ifo',\r\n    title: 'Yieldwatch',\r\n    badge: 'ifo-watch.svg',\r\n  },\r\n  {\r\n    id: '511060000',\r\n    type: 'ifo',\r\n    title: 'Berry',\r\n    badge: 'ifo-bry.svg',\r\n  },\r\n  {\r\n    id: '511050000',\r\n    type: 'ifo',\r\n    title: 'Soteria',\r\n    badge: 'ifo-wsote.svg',\r\n  },\r\n  {\r\n    id: '511040000',\r\n    type: 'ifo',\r\n    title: 'Helmet',\r\n    badge: 'ifo-helmet.svg',\r\n  },\r\n  {\r\n    id: '511030000',\r\n    type: 'ifo',\r\n    title: 'Tenet',\r\n    badge: 'ifo-ten.svg',\r\n  },\r\n  {\r\n    id: '511020000',\r\n    type: 'ifo',\r\n    title: 'Ditto',\r\n    badge: 'ifo-ditto.svg',\r\n  },\r\n  {\r\n    id: '511010000',\r\n    type: 'ifo',\r\n    title: 'Blink',\r\n    badge: 'ifo-blk.svg',\r\n  },\r\n  {\r\n    id: '512010001',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Gold',\r\n    badge: 'easter-champion-gold.svg',\r\n  },\r\n  {\r\n    id: '512010002',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010003',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010004',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Gold',\r\n    badge: 'easter-top-500-gold.svg',\r\n  },\r\n  {\r\n    id: '512010005',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Gold',\r\n    badge: 'easter-participant-gold.svg',\r\n  },\r\n  {\r\n    id: '512010006',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Silver',\r\n    badge: 'easter-champion-silver.svg',\r\n  },\r\n  {\r\n    id: '512010007',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010008',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010009',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Silver',\r\n    badge: 'easter-top-500-silver.svg',\r\n  },\r\n  {\r\n    id: '512010010',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Silver',\r\n    badge: 'easter-participant-silver.svg',\r\n  },\r\n  {\r\n    id: '512010011',\r\n    type: 'teambattle',\r\n    title: 'Easter Champion: Bronze',\r\n    badge: 'easter-champion-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010012',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010013',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010014',\r\n    type: 'teambattle',\r\n    title: 'Easter Top 500: Bronze',\r\n    badge: 'easter-top-500-bronze.svg',\r\n  },\r\n  {\r\n    id: '512010015',\r\n    type: 'teambattle',\r\n    title: 'Easter Participant: Bronze',\r\n    badge: 'easter-participant-bronze.svg',\r\n  },\r\n  {\r\n    id: '513010001',\r\n    type: 'participation',\r\n    title: 'Syrup Soaker',\r\n    description: 'Took a dip in the early days of the Auto FARM Pool',\r\n    badge: 'syrup-soaker.svg',\r\n  },\r\n  {\r\n    id: '514010001',\r\n    type: 'participation',\r\n    title: 'Clairvoyant',\r\n    description: 'Played a round of Prediction before round 12,120',\r\n    badge: 'clairvoyant.svg',\r\n  },\r\n]\r\n\r\n/**\r\n * Transform the campaign config into a map. Keeps the config the same\r\n * as the others and allows easy access to a campaign by id\r\n */\r\nexport const campaignMap = new Map<string, Campaign>()\r\n\r\ncampaigns.forEach((campaign) => {\r\n  campaignMap.set(campaign.id, campaign)\r\n})\r\n\r\nexport default campaigns\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Spacer from './Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { BigNumber } from 'bignumber.js'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n  decimals?: number\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n  decimals = 18,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n    const balanceBigNumber = new BigNumber(balance)\r\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\r\n      return balanceBigNumber.toLocaleString()\r\n    }\r\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          {t('No tokens to stake')}:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('Get %symbol%', { symbol })}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import identity from 'lodash/identity'\r\nimport { useEffect, useState } from 'react'\r\n\r\ninterface UsePersistStateOptions {\r\n  localStorageKey: string\r\n  hydrate?: (value: any) => any\r\n  dehydrate?: (value: any) => any\r\n}\r\n\r\nconst defaultOptions = {\r\n  hydrate: identity,\r\n  dehydrate: identity,\r\n}\r\n\r\n/**\r\n * Same as \"useState\" but saves the value to local storage each time it changes\r\n */\r\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\r\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const valueFromLS = localStorage.getItem(localStorageKey)\r\n\r\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\r\n    } catch (error) {\r\n      return initialValue\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\r\n  }, [value, localStorageKey, dehydrate])\r\n\r\n  return [value, setValue]\r\n}\r\n\r\nexport default usePersistState\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getBalanceNumber1 = (balance: BigNumber, decimals = 18) => {\r\n    const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n    return displayBalance.toNumber()\r\n  }\r\n\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n","import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import { Team } from './types'\r\n\r\nconst teams: Team[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Syrup Storm',\r\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\r\n    images: {\r\n      lg: 'syrup-storm-lg.png',\r\n      md: 'syrup-storm-md.png',\r\n      sm: 'syrup-storm-sm.png',\r\n      alt: 'syrup-storm-alt.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\r\n    },\r\n    background: 'syrup-storm-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Fearsome Flippers',\r\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\r\n    images: {\r\n      lg: 'fearsome-flippers-lg.png',\r\n      md: 'fearsome-flippers-md.png',\r\n      sm: 'fearsome-flippers-sm.png',\r\n      alt: 'fearsome-flippers-alt.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\r\n    },\r\n    background: 'fearsome-flippers-bg.svg',\r\n    textColor: '#FFFFFF',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Chaotic Cakers',\r\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\r\n    images: {\r\n      lg: 'chaotic-cakers-lg.png',\r\n      md: 'chaotic-cakers-md.png',\r\n      sm: 'chaotic-cakers-sm.png',\r\n      alt: 'chaotic-cakers-alt.png',\r\n      ipfs: 'https://cloudflare-ipfs.com/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\r\n    },\r\n    background: 'chaotic-cakers-bg.svg',\r\n    textColor: '#191326',\r\n    users: 0,\r\n    points: 0,\r\n  },\r\n]\r\n\r\nexport default teams\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { SerializedBigNumber } from 'state/types'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n\r\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\r\n  ethersToBigNumber(ethersBn).toJSON()\r\n\r\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\r\n","import merge from 'lodash/merge'\r\nimport teamsList from 'config/constants/teams'\r\nimport { getProfileContract } from 'utils/contractHelpers'\r\nimport { Team } from 'config/constants/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { TeamsById } from 'state/types'\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\r\n\r\nconst profileContract = getProfileContract()\r\n\r\nexport const getTeam = async (teamId: number): Promise<Team> => {\r\n  try {\r\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\r\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\r\n\r\n    return merge({}, staticTeamInfo, {\r\n      isJoinable,\r\n      name: teamName,\r\n      users: numberUsers.toNumber(),\r\n      points: numberPoints.toNumber(),\r\n    })\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets on-chain data and merges it with the existing static list of teams\r\n */\r\nexport const getTeams = async (): Promise<TeamsById> => {\r\n  try {\r\n    const teamsById = teamsList.reduce((accum, team) => {\r\n      return {\r\n        ...accum,\r\n        [team.id]: team,\r\n      }\r\n    }, {})\r\n    const nbTeams = await profileContract.numberTeams()\r\n\r\n    const calls = []\r\n    for (let i = 1; i <= nbTeams; i++) {\r\n      calls.push({\r\n        address: getPancakeProfileAddress(),\r\n        name: 'getTeamProfile',\r\n        params: [i],\r\n      })\r\n    }\r\n    const teamData = await multicallv2(profileABI, calls)\r\n\r\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\r\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\r\n\r\n      return {\r\n        ...accum,\r\n        [index + 1]: {\r\n          name: teamName,\r\n          users: numberUsers.toNumber(),\r\n          points: numberPoints.toNumber(),\r\n          isJoinable,\r\n        },\r\n      }\r\n    }, {})\r\n\r\n    return merge({}, teamsById, onChainTeamData)\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Farm, Pool } from 'state/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\ntype UserData =\r\n  | Pool['userData']\r\n  | {\r\n      allowance: number | string\r\n      stakingTokenBalance: number | string\r\n      stakedBalance: number | string\r\n      pendingReward: number | string\r\n    }\r\n\r\nexport const transformUserData = (userData: UserData) => {\r\n  return {\r\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\r\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\r\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\r\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\r\n  }\r\n}\r\n\r\nexport const transformPool = (pool: Pool): Pool => {\r\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\r\n\r\n  return {\r\n    ...rest,\r\n    userData: transformUserData(userData),\r\n    totalStaked: new BigNumber(totalStaked),\r\n    stakingLimit: new BigNumber(stakingLimit),\r\n  } as Pool\r\n}\r\n\r\nexport const getTokenPricesFromFarm = (farms: Farm[]) => {\r\n  return farms.reduce((prices, farm) => {\r\n    const quoteTokenAddress = getAddress(farm.quoteToken.address).toLocaleLowerCase()\r\n    const tokenAddress = getAddress(farm.token.address).toLocaleLowerCase()\r\n    /* eslint-disable no-param-reassign */\r\n    if (!prices[quoteTokenAddress]) {\r\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteToken.busdPrice).toNumber()\r\n    }\r\n    if (!prices[tokenAddress]) {\r\n      prices[tokenAddress] = new BigNumber(farm.token.busdPrice).toNumber()\r\n    }\r\n    /* eslint-enable no-param-reassign */\r\n    return prices\r\n  }, {})\r\n}\r\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\r\nimport { Nft, NftType } from 'config/constants/types'\r\nimport { getAddress } from './addressHelpers'\r\nimport { getErc721Contract } from './contractHelpers'\r\n\r\n/**\r\n * Gets the identifier key based on the nft address\r\n * Helpful for looking up the key when all you have is the address\r\n */\r\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\r\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\r\n    const address = getAddress(nftSourceEntry.address)\r\n    return address === nftAddress\r\n  })\r\n\r\n  return nftSource ? nftSource.identifierKey : null\r\n}\r\n\r\n/**\r\n * Some sources like Pancake do not return HTTP tokenURI's\r\n */\r\nexport const getTokenUrl = (tokenUri: string) => {\r\n  if (tokenUri.startsWith('ipfs://')) {\r\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\r\n  }\r\n\r\n  return tokenUri\r\n}\r\n\r\nexport const getAddressByType = (type: NftType) => {\r\n  return getAddress(nftSources[type].address)\r\n}\r\n\r\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\r\n  try {\r\n    const contract = getErc721Contract(nftAddress)\r\n    const tokenUri = await contract.tokenURI(tokenId)\r\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\r\n\r\n    if (!uriDataResponse.ok) {\r\n      return null\r\n    }\r\n\r\n    const uriData = await uriDataResponse.json()\r\n    return uriData\r\n  } catch (error) {\r\n    console.error('getTokenUriData', error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\r\n  const uriData = await getTokenUriData(nftAddress, tokenId)\r\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\r\n\r\n  // Bail out early if we have no uriData, identifierKey, or the value does not\r\n  // exist in the object\r\n  if (!uriData) {\r\n    return null\r\n  }\r\n\r\n  if (!identifierKey) {\r\n    return null\r\n  }\r\n\r\n  if (!uriData[identifierKey]) {\r\n    return null\r\n  }\r\n\r\n  return Nfts.find((nft) => {\r\n    return uriData[identifierKey].includes(nft.identifier)\r\n  })\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { BLOCKS_PER_YEAR, CAKE_PER_YEAR } from 'config'\r\nimport lpAprs from 'config/constants/lpAprs.json'\r\n\r\n/**\r\n * Get the APR value in %\r\n * @param stakingTokenPrice Token price in the same quote currency\r\n * @param rewardTokenPrice Token price in the same quote currency\r\n * @param totalStaked Total amount of stakingToken in the pool\r\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\r\n * @returns Null if the APR is NaN or infinite.\r\n */\r\nexport const getPoolApr = (\r\n  stakingTokenPrice: number,\r\n  rewardTokenPrice: number,\r\n  totalStaked: number,\r\n  tokenPerBlock: number,\r\n): number => {\r\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\r\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\r\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\r\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\r\n}\r\n\r\n/**\r\n * Get farm APR value in %\r\n * @param poolWeight allocationPoint / totalAllocationPoint\r\n * @param cakePriceUsd Cake price in USD\r\n * @param poolLiquidityUsd Total pool liquidity in USD\r\n * @returns\r\n */\r\nexport const getFarmApr = (\r\n  poolWeight: BigNumber,\r\n  cakePriceUsd: BigNumber,\r\n  poolLiquidityUsd: BigNumber,\r\n  farmAddress: string,\r\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\r\n  const yearlyCakeRewardAllocation = CAKE_PER_YEAR.times(poolWeight)\r\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\r\n  let cakeRewardsAprAsNumber = null\r\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\r\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\r\n  }\r\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\r\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\r\n}\r\n\r\nexport default null\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useState } from 'react'\r\n\r\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\r\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\r\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\r\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\r\n\r\n  useEffect(() => {\r\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\r\n    const secondsRemainingCalc = feeEndTime - currentSeconds\r\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\r\n\r\n    const tick = () => {\r\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\r\n    }\r\n    const timerInterval = setInterval(() => tick(), 1000)\r\n    if (doesUnstakingFeeApply) {\r\n      setSecondsRemaining(secondsRemainingCalc)\r\n      setHasUnstakingFee(true)\r\n    } else {\r\n      setHasUnstakingFee(false)\r\n      clearInterval(timerInterval)\r\n    }\r\n\r\n    return () => clearInterval(timerInterval)\r\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\r\n\r\n  return { hasUnstakingFee, secondsRemaining }\r\n}\r\n\r\nexport default useWithdrawalFeeTimer\r\n","import tokens from './tokens'\r\nimport farms from './farms'\r\nimport { Ifo, Token } from './types'\r\n\r\n// const cakeBnbLpToken: Token = {\r\n//   symbol: farms[1].lpSymbol,\r\n//   address: farms[1].lpAddresses,\r\n//   decimals: 18,\r\n// }\r\n\r\nconst ifos: Ifo[] = [\r\n//   {\r\n//     id: 'kalmar',\r\n//     address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\r\n//     isActive: true,\r\n//     name: 'Kalmar (KALM)',\r\n//     poolBasic: {\r\n//       saleAmount: '375,000 KALM',\r\n//       raiseAmount: '$750,000',\r\n//       cakeToBurn: '$375,000',\r\n//       distributionRatio: 0.3,\r\n//     },\r\n//     poolUnlimited: {\r\n//       saleAmount: '875,000 KALM',\r\n//       raiseAmount: '$2,500,000',\r\n//       cakeToBurn: '$1,250,000',\r\n//       distributionRatio: 0.7,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.kalm,\r\n//     releaseBlockNumber: 7707736,\r\n//     campaignId: '511110000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\r\n//     tokenOfferingPrice: 2.0,\r\n//     version: 2,\r\n//   },\r\n//   {\r\n//     id: 'hotcross',\r\n//     address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\r\n//     isActive: false,\r\n//     name: 'Hot Cross (HOTCROSS)',\r\n//     poolBasic: {\r\n//       saleAmount: '15,000,000 HOTCROSS',\r\n//       raiseAmount: '$750,000',\r\n//       cakeToBurn: '$375,000',\r\n//       distributionRatio: 0.3,\r\n//     },\r\n//     poolUnlimited: {\r\n//       saleAmount: '35,000,000 HOTCROSS',\r\n//       raiseAmount: '$1,750,000',\r\n//       cakeToBurn: '$875,000',\r\n//       distributionRatio: 0.7,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.hotcross,\r\n//     releaseBlockNumber: 7477900,\r\n//     campaignId: '511100000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\r\n//     tokenOfferingPrice: 0.05,\r\n//     version: 2,\r\n//   },\r\n//   {\r\n//     id: 'horizon',\r\n//     address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\r\n//     isActive: false,\r\n//     name: 'Horizon Protocol (HZN)',\r\n//     poolBasic: {\r\n//       saleAmount: '3,000,000 HZN',\r\n//       raiseAmount: '$750,000',\r\n//       cakeToBurn: '$375,000',\r\n//       distributionRatio: 0.3,\r\n//     },\r\n//     poolUnlimited: {\r\n//       saleAmount: '7,000,000 HZN',\r\n//       raiseAmount: '$1,750,000',\r\n//       cakeToBurn: '$875,000',\r\n//       distributionRatio: 0.7,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.hzn,\r\n//     releaseBlockNumber: 6581111,\r\n//     campaignId: '511090000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\r\n//     tokenOfferingPrice: 0.25,\r\n//     version: 2,\r\n//   },\r\n//   {\r\n//     id: 'belt',\r\n//     address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\r\n//     isActive: false,\r\n//     name: 'Belt (BELT)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '150,000 BELT',\r\n//       raiseAmount: '$3,000,000',\r\n//       cakeToBurn: '$1,500,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.belt,\r\n//     releaseBlockNumber: 5493919,\r\n//     campaignId: '511080000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'watch',\r\n//     address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\r\n//     isActive: false,\r\n//     name: 'Yieldwatch (WATCH)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '8,000,000 WATCH',\r\n//       raiseAmount: '$800,000',\r\n//       cakeToBurn: '$400,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.watch,\r\n//     releaseBlockNumber: 5294924,\r\n//     campaignId: '511070000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'berry',\r\n//     address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\r\n//     isActive: false,\r\n//     name: 'Berry (BRY)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '2,000,000 BRY',\r\n//       raiseAmount: '$1,000,000',\r\n//       cakeToBurn: '$500,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.bry,\r\n//     releaseBlockNumber: 4750968,\r\n//     campaignId: '511060000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'soteria',\r\n//     address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\r\n//     isActive: false,\r\n//     name: 'Soteria (wSOTE)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '1,500,000 wSOTE',\r\n//       raiseAmount: '$525,000',\r\n//       cakeToBurn: '$262,500',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.wsote,\r\n//     releaseBlockNumber: 4086064,\r\n//     campaignId: '511050000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'helmet',\r\n//     address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\r\n//     isActive: false,\r\n//     name: 'Helmet.insure (Helmet)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '10,000,000 Helmet',\r\n//       raiseAmount: '$1,000,000',\r\n//       cakeToBurn: '$500,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.helmet,\r\n//     releaseBlockNumber: 3771926,\r\n//     campaignId: '511040000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'tenet',\r\n//     address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\r\n//     isActive: false,\r\n//     name: 'Tenet (TEN)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '1,000,000 TEN',\r\n//       raiseAmount: '$1,000,000',\r\n//       cakeToBurn: '$500,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.ten,\r\n//     releaseBlockNumber: 3483883,\r\n//     campaignId: '511030000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'ditto',\r\n//     address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\r\n//     isActive: false,\r\n//     name: 'Ditto (DITTO)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '700,000 DITTO',\r\n//       raiseAmount: '$630,000',\r\n//       cakeToBurn: '$315,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.ditto,\r\n//     releaseBlockNumber: 3279767,\r\n//     campaignId: '511020000',\r\n//     articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n//   {\r\n//     id: 'blink',\r\n//     address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\r\n//     isActive: false,\r\n//     name: 'BLINk (BLK)',\r\n//     poolUnlimited: {\r\n//       saleAmount: '100,000,000 BLINK',\r\n//       raiseAmount: '$1,000,000',\r\n//       cakeToBurn: '$500,000',\r\n//       distributionRatio: 1,\r\n//     },\r\n//     currency: cakeBnbLpToken,\r\n//     token: tokens.blink,\r\n//     releaseBlockNumber: 3279767,\r\n//     campaignId: '511010000',\r\n//     articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\r\n//     tokenOfferingPrice: null,\r\n//     version: 1,\r\n//   },\r\n]\r\n\r\nexport default ifos\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { BlockState } from '../types'\r\n\r\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\r\n\r\nexport const blockSlice = createSlice({\r\n  name: 'Block',\r\n  initialState,\r\n  reducers: {\r\n    setBlock: (state, action: PayloadAction<number>) => {\r\n      if (state.initialBlock === 0) {\r\n        state.initialBlock = action.payload\r\n      }\r\n\r\n      state.currentBlock = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setBlock } = blockSlice.actions\r\n\r\nexport default blockSlice.reducer\r\n","import { useEffect, useMemo } from 'react'\r\nimport tokens from 'config/constants/tokens'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useSelector } from 'react-redux'\r\nimport { ethers } from 'ethers'\r\nimport { minBy, orderBy } from 'lodash'\r\nimport { useAppDispatch } from 'state'\r\nimport { Team } from 'config/constants/types'\r\nimport Nfts from 'config/constants/nfts'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n// import { ZERO } from '@pancakeswap/sdk/dist/constants'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\n// import { ZERO } from '@pancakeswap/sdk/dist/constants'\r\nimport {\r\n  fetchFarmsPublicDataAsync,\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  setBlock,\r\n} from './actions'\r\nimport {\r\n  State,\r\n  Farm,\r\n  Pool,\r\n  ProfileState,\r\n  TeamsState,\r\n  AchievementState,\r\n  FarmsState,\r\n  NodeRound,\r\n  ReduxNodeLedger,\r\n  NodeLedger,\r\n  ReduxNodeRound,\r\n} from './types'\r\nimport { fetchProfile } from './profile'\r\nimport { fetchTeam, fetchTeams } from './teams'\r\nimport { fetchAchievements } from './achievements'\r\nimport { fetchWalletNfts } from './collectibles'\r\nimport { parseBigNumberObj } from './predictions/helpers'\r\nimport { transformPool } from './pools/helpers'\r\nimport { fetchPoolsStakingLimitsAsync } from './pools'\r\nimport { Token } from '../config/constants/types'\r\n\r\nimport { fetchFarmUserDataAsync, nonArchivedFarms } from './farms'\r\nimport {\r\n  fetchCurrentLotteryId,\r\n  fetchCurrentLottery,\r\n  fetchUserTicketsAndLotteries,\r\n  fetchPublicLotteries,\r\n} from './lottery'\r\nimport { useProcessLotteryResponse } from './lottery/helpers'\r\n\r\n\r\nexport const usePollFarmsData = (includeArchive = false) => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n  const { account } = useWeb3React()\r\n\r\n  useEffect(() => {\r\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\r\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\r\n\r\n    dispatch(fetchFarmsPublicDataAsync(pids))\r\n\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\r\n    }\r\n  }, [includeArchive, dispatch, slowRefresh, account])\r\n}\r\n\r\n/**\r\n * Fetches the \"core\" farm data used globally\r\n * 251 = FARM-BNB LP\r\n * 252 = BUSD-BNB LP\r\n */\r\nexport const usePollCoreFarmData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchFarmsPublicDataAsync([1, 2]))\r\n  }, [dispatch, fastRefresh])\r\n}\r\n\r\nexport const usePollBlockNumber = () => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n      dispatch(setBlock(blockNumber))\r\n    }, 6000)\r\n\r\n    return () => clearInterval(interval)\r\n  }, [dispatch])\r\n}\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): FarmsState => {\r\n  const farms = useSelector((state: State) => state.farms)\r\n  return farms\r\n}\r\n\r\n  \r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\r\n  }\r\n}\r\n\r\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\r\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\r\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\n// Return the base token price for a farm, from a given pid\r\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\r\n  const farm = useFarmFromPid(pid)\r\n  return farm && new BigNumber(farm.token.busdPrice)\r\n}\r\n\r\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber => {\r\n  const tokenFarm = useFarmFromTokenSymbol(tokenSymbol)\r\n  const tokenPrice = useBusdPriceFromPid(tokenFarm?.pid)\r\n  return tokenPrice\r\n}\r\n\r\nexport const useLpTokenPrice = (symbol: string) => {\r\n  const farm = useFarmFromLpSymbol(symbol)\r\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\r\n  let lpTokenPrice = BIG_ZERO\r\n\r\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\r\n    // Total value of base token in LP\r\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\r\n    // Double it to get overall value in LP\r\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\r\n    // Divide total value of all tokens, by the number of LP tokens\r\n    const totalLpTokens = getBalanceAmount(new BigNumber(farm.lpTotalSupply))\r\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\r\n  }\r\n\r\n  return lpTokenPrice\r\n}\r\n\r\n// Pools\r\n\r\nexport const useFetchPublicPoolsData = () => {\r\n  const dispatch = useAppDispatch()\r\n  const { slowRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber();\r\n    //   // console.log('blockNumber:',blockNumber);\r\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n    }\r\n\r\n    fetchPoolsPublicData()\r\n    dispatch(fetchPoolsStakingLimitsAsync())\r\n  }, [dispatch, slowRefresh])\r\n}\r\n\r\nexport const usePools = (account): { pools: Pool[]; userDataLoaded: boolean } => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  return { pools: pools.map(transformPool), userDataLoaded }\r\n}\r\n\r\nexport const usePoolFromPid = (sousId: number): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return transformPool(pool)\r\n}\r\n\r\nexport const useFetchCakeVault = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultPublicData())\r\n  }, [dispatch, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultUserData({ account }))\r\n  }, [dispatch, fastRefresh, account])\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchCakeVaultFees())\r\n  }, [dispatch])\r\n}\r\n\r\nexport const useCakeVault = () => {\r\n  const {\r\n    totalShares: totalSharesAsString,\r\n    pricePerFullShare: pricePerFullShareAsString,\r\n    totalCakeInVault: totalCakeInVaultAsString,\r\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\r\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\r\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\r\n    userData: {\r\n      isLoading,\r\n      userShares: userSharesAsString,\r\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  } = useSelector((state: State) => state.pools.cakeVault)\r\n\r\n//   // console.log('useSelector:',useSelector((state: State) => state.pools.cakeVault));\r\n\r\n  const estimatedCakeBountyReward = useMemo(() => {\r\n    return new BigNumber(estimatedCakeBountyRewardAsString)\r\n  }, [estimatedCakeBountyRewardAsString])\r\n\r\n  const totalPendingCakeHarvest = useMemo(() => {\r\n    return new BigNumber(totalPendingCakeHarvestAsString)\r\n  }, [totalPendingCakeHarvestAsString])\r\n\r\n  const totalShares = useMemo(() => {\r\n    return new BigNumber(totalSharesAsString)\r\n  }, [totalSharesAsString])\r\n\r\n  const pricePerFullShare = useMemo(() => {\r\n    return new BigNumber(pricePerFullShareAsString)\r\n  }, [pricePerFullShareAsString])\r\n\r\n  const totalCakeInVault = useMemo(() => {\r\n    return new BigNumber(totalCakeInVaultAsString)\r\n  }, [totalCakeInVaultAsString])\r\n\r\n  const userShares = useMemo(() => {\r\n    return new BigNumber(userSharesAsString)\r\n  }, [userSharesAsString])\r\n\r\n  const cakeAtLastUserAction = useMemo(() => {\r\n    return new BigNumber(cakeAtLastUserActionAsString)\r\n  }, [cakeAtLastUserActionAsString])\r\n\r\n  return {\r\n    totalShares,\r\n    pricePerFullShare,\r\n    totalCakeInVault,\r\n    estimatedCakeBountyReward,\r\n    totalPendingCakeHarvest,\r\n    fees: {\r\n      performanceFee,\r\n      callFee,\r\n      withdrawalFee,\r\n      withdrawalFeePeriod,\r\n    },\r\n    userData: {\r\n      isLoading,\r\n      userShares,\r\n      cakeAtLastUserAction,\r\n      lastDepositedTime,\r\n      lastUserActionTime,\r\n    },\r\n  }\r\n}\r\n\r\n// Profile\r\n\r\nexport const useFetchProfile = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchProfile(account))\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\r\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\r\n}\r\n\r\n// Teams\r\n\r\nexport const useTeam = (id: number) => {\r\n  const team: Team = useSelector((state: State) => state.teams.data[id])\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeam(id))\r\n  }, [id, dispatch])\r\n\r\n  return team\r\n}\r\n\r\nexport const useTeams = () => {\r\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTeams())\r\n  }, [dispatch])\r\n\r\n  return { teams: data, isInitialized, isLoading }\r\n}\r\n\r\n// Achievements\r\n\r\nexport const useFetchAchievements = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchAchievements(account))\r\n    }\r\n  }, [account, dispatch])\r\n}\r\n\r\nexport const useAchievements = () => {\r\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\r\n  return achievements\r\n}\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const bnbBusdFarm = useFarmFromPid(2)\r\n  return new BigNumber(bnbBusdFarm.quoteToken.busdPrice)\r\n// return BIG_ZERO;\r\n\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const cakeBnbFarm = useFarmFromPid(1)\r\n  return new BigNumber(cakeBnbFarm.token.busdPrice)\r\n//   return BIG_ZERO;\r\n}\r\n\r\n// Block\r\nexport const useBlock = () => {\r\n  return useSelector((state: State) => state.block)\r\n}\r\n\r\nexport const useInitialBlock = () => {\r\n  return useSelector((state: State) => state.block.initialBlock)\r\n}\r\n\r\n// Predictions\r\nexport const useGetRounds = () => {\r\n  const rounds = useSelector((state: State) => state.predictions.rounds)\r\n  return Object.keys(rounds).reduce((accum, epoch) => {\r\n    return {\r\n      ...accum,\r\n      [epoch]: parseBigNumberObj<ReduxNodeRound, NodeRound>(rounds[epoch]),\r\n    }\r\n  }, {}) as { [key: string]: NodeRound }\r\n}\r\n\r\nexport const useGetRound = (epoch: number) => {\r\n  const round = useSelector((state: State) => state.predictions.rounds[epoch])\r\n  return parseBigNumberObj<ReduxNodeRound, NodeRound>(round)\r\n}\r\n\r\nexport const useGetSortedRounds = () => {\r\n  const roundData = useGetRounds()\r\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\r\n}\r\n\r\nexport const useGetBetByEpoch = (account: string, epoch: number) => {\r\n  const bets = useSelector((state: State) => state.predictions.ledgers)\r\n\r\n  if (!bets[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!bets[account][epoch]) {\r\n    return null\r\n  }\r\n\r\n  return parseBigNumberObj<ReduxNodeLedger, NodeLedger>(bets[account][epoch])\r\n}\r\n\r\nexport const useGetIsClaimable = (epoch) => {\r\n  const claimableStatuses = useSelector((state: State) => state.predictions.claimableStatuses)\r\n  return claimableStatuses[epoch] || false\r\n}\r\n\r\n/**\r\n * Used to get the range of rounds to poll for\r\n */\r\nexport const useGetEarliestEpoch = () => {\r\n  return useSelector((state: State) => {\r\n    const earliestRound = minBy(Object.values(state.predictions.rounds), 'epoch')\r\n    return earliestRound?.epoch\r\n  })\r\n}\r\n\r\nexport const useIsHistoryPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\r\n}\r\n\r\nexport const useIsChartPaneOpen = () => {\r\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\r\n}\r\n\r\nexport const useGetCurrentEpoch = () => {\r\n  return useSelector((state: State) => state.predictions.currentEpoch)\r\n}\r\n\r\nexport const useGetIntervalBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.intervalBlocks)\r\n}\r\n\r\nexport const useGetBufferBlocks = () => {\r\n  return useSelector((state: State) => state.predictions.bufferBlocks)\r\n}\r\n\r\nexport const useGetTotalIntervalBlocks = () => {\r\n  const intervalBlocks = useGetIntervalBlocks()\r\n  const bufferBlocks = useGetBufferBlocks()\r\n  return intervalBlocks + bufferBlocks\r\n}\r\n\r\nexport const useGetCurrentRound = () => {\r\n  const currentEpoch = useGetCurrentEpoch()\r\n  const rounds = useGetSortedRounds()\r\n  return rounds.find((round) => round.epoch === currentEpoch)\r\n}\r\n\r\nexport const useGetPredictionsStatus = () => {\r\n  return useSelector((state: State) => state.predictions.status)\r\n}\r\n\r\nexport const useGetHistoryFilter = () => {\r\n  return useSelector((state: State) => state.predictions.historyFilter)\r\n}\r\n\r\nexport const useGetCurrentRoundBlockNumber = () => {\r\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\r\n}\r\n\r\nexport const useGetMinBetAmount = () => {\r\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\r\n  return useMemo(() => ethers.BigNumber.from(minBetAmount), [minBetAmount])\r\n}\r\n\r\nexport const useGetRewardRate = () => {\r\n  const rewardRate = useSelector((state: State) => state.predictions.rewardRate)\r\n  return rewardRate / 100\r\n}\r\n\r\nexport const useGetIsFetchingHistory = () => {\r\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\r\n}\r\n\r\nexport const useGetHistory = () => {\r\n  return useSelector((state: State) => state.predictions.history)\r\n}\r\n\r\nexport const useGetHistoryByAccount = (account: string) => {\r\n  const bets = useGetHistory()\r\n  return bets ? bets[account] : []\r\n}\r\n\r\nexport const useGetLedgerByRoundId = (account: string, roundId: string) => {\r\n  const ledgers = useSelector((state: State) => state.predictions.ledgers)\r\n\r\n  if (!ledgers[account]) {\r\n    return null\r\n  }\r\n\r\n  if (!ledgers[account][roundId]) {\r\n    return null\r\n  }\r\n\r\n  return ledgers[account][roundId]\r\n}\r\n\r\nexport const useGetLastOraclePrice = () => {\r\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\r\n  return useMemo(() => {\r\n    return ethers.BigNumber.from(lastOraclePrice)\r\n  }, [lastOraclePrice])\r\n}\r\n\r\n// Collectibles\r\nexport const useGetCollectibles = () => {\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\r\n  const identifiers = Object.keys(data)\r\n\r\n  useEffect(() => {\r\n    // Fetch nfts only if we have not done so already\r\n    if (!isInitialized) {\r\n      dispatch(fetchWalletNfts(account))\r\n    }\r\n  }, [isInitialized, account, dispatch])\r\n\r\n  return {\r\n    isInitialized,\r\n    isLoading,\r\n    tokenIds: data,\r\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\r\n  }\r\n}\r\n\r\n// Voting\r\nexport const useGetProposals = () => {\r\n  const proposals = useSelector((state: State) => state.voting.proposals)\r\n  return Object.values(proposals)\r\n}\r\n\r\nexport const useGetProposal = (proposalId: string) => {\r\n  const proposal = useSelector((state: State) => state.voting.proposals[proposalId])\r\n  return proposal\r\n}\r\n\r\nexport const useGetVotes = (proposalId: string) => {\r\n  const votes = useSelector((state: State) => state.voting.votes[proposalId])\r\n  return votes ? votes.filter((vote) => vote._inValid !== true) : []\r\n}\r\n\r\nexport const useGetVotingStateLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.voteLoadingStatus)\r\n  return votingStatus\r\n}\r\n\r\nexport const useGetProposalLoadingStatus = () => {\r\n  const votingStatus = useSelector((state: State) => state.voting.proposalLoadingStatus)\r\n  return votingStatus\r\n}\r\n\r\n// Lottery\r\nexport const useGetCurrentLotteryId = () => {\r\n  return useSelector((state: State) => state.lottery.currentLotteryId)\r\n}\r\n\r\nexport const useGetUserLotteriesGraphData = () => {\r\n  return useSelector((state: State) => state.lottery.userLotteryData)\r\n}\r\n\r\nexport const useGetUserLotteryGraphRoundById = (lotteryId: string) => {\r\n  const userLotteriesData = useGetUserLotteriesGraphData()\r\n  return userLotteriesData.rounds.find((userRound) => userRound.lotteryId === lotteryId)\r\n}\r\n\r\nexport const useGetLotteriesGraphData = () => {\r\n  return useSelector((state: State) => state.lottery.lotteriesData)\r\n}\r\n\r\nexport const useGetLotteryGraphDataById = (lotteryId: string) => {\r\n  const lotteriesData = useGetLotteriesGraphData()\r\n  return lotteriesData.find((lottery) => lottery.id === lotteryId)\r\n}\r\n\r\nexport const useFetchLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useAppDispatch()\r\n  const currentLotteryId = useGetCurrentLotteryId()\r\n\r\n  useEffect(() => {\r\n    // get current lottery ID & max ticket buy\r\n    dispatch(fetchCurrentLotteryId())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    if (currentLotteryId) {\r\n      // Get historical lottery data from nodes + subgraph\r\n      dispatch(fetchPublicLotteries({ currentLotteryId }))\r\n      // get public data for current lottery\r\n      dispatch(fetchCurrentLottery({ currentLotteryId }))\r\n    }\r\n  }, [dispatch, currentLotteryId, fastRefresh])\r\n\r\n  useEffect(() => {\r\n    // get user tickets for current lottery, and user lottery subgraph data\r\n    if (account && currentLotteryId) {\r\n      dispatch(fetchUserTicketsAndLotteries({ account, currentLotteryId }))\r\n    }\r\n  }, [dispatch, currentLotteryId, account])\r\n}\r\n\r\nexport const useLottery = () => {\r\n  const currentRound = useSelector((state: State) => state.lottery.currentRound)\r\n  const processedCurrentRound = useProcessLotteryResponse(currentRound);\r\n\r\n//   // console.log('processedCurrentRound:',processedCurrentRound);\r\n\r\n  const isTransitioning = useSelector((state: State) => state.lottery.isTransitioning)\r\n\r\n  const currentLotteryId = useGetCurrentLotteryId()\r\n  const userLotteryData = useGetUserLotteriesGraphData()\r\n  const lotteriesData = useGetLotteriesGraphData()\r\n\r\n  const maxNumberTicketsPerBuyOrClaimAsString = useSelector(\r\n    (state: State) => state.lottery.maxNumberTicketsPerBuyOrClaim,\r\n  )\r\n  const maxNumberTicketsPerBuyOrClaim = useMemo(() => {\r\n    return new BigNumber(maxNumberTicketsPerBuyOrClaimAsString)\r\n  }, [maxNumberTicketsPerBuyOrClaimAsString])\r\n\r\n  return {\r\n    currentLotteryId,\r\n    maxNumberTicketsPerBuyOrClaim,\r\n    isTransitioning,\r\n    userLotteryData,\r\n    lotteriesData,\r\n    currentRound: processedCurrentRound,\r\n  }\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n    const farms = useFarms();\r\n    const bnbPrice = usePriceBnbBusd();\r\n    const cakePrice = usePriceCakeBusd();\r\n    let value = new BigNumber(0);\r\n\r\n    for (let i = 0; i < farms.data.length; i++) {\r\n      const farm = farms.data[i]\r\n      if (farm.lpTotalInQuoteToken) {\r\n        let val;\r\n        if (farm.quoteToken.symbol === tokens.wbnb.symbol) {\r\n          val = (bnbPrice.times(farm?.lpTotalInQuoteToken));\r\n        }\r\n        if (farm.quoteToken.symbol === tokens.cake.symbol) {\r\n          val = (cakePrice.times(farm?.lpTotalInQuoteToken));\r\n        }else{\r\n          val = (farm?.lpTotalInQuoteToken);\r\n        }\r\n        value = value.plus(val);\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n  \r\n\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { CollectiblesState } from 'state/types'\r\nimport { nftSources } from 'config/constants/nfts'\r\nimport { NftType } from 'config/constants/types'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getErc721Contract } from 'utils/contractHelpers'\r\nimport { getNftByTokenId } from 'utils/collectibles'\r\nimport { ethers } from 'ethers'\r\n\r\nconst initialState: CollectiblesState = {\r\n  isInitialized: false,\r\n  isLoading: true,\r\n  data: {},\r\n}\r\n\r\ntype NftSourceItem = [number, string]\r\n\r\n// Thunks\r\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\r\n  'collectibles/fetchWalletNfts',\r\n  async (account) => {\r\n    // For each nft source get nft data\r\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\r\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\r\n      const address = getAddress(addressObj)\r\n      const contract = getErc721Contract(address)\r\n\r\n      const getTokenIdAndData = async (index: number) => {\r\n        try {\r\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\r\n          const tokenId = tokenIdBn.toNumber()\r\n\r\n          const walletNft = await getNftByTokenId(address, tokenId)\r\n          return [tokenId, walletNft.identifier]\r\n        } catch (error) {\r\n          console.error('getTokenIdAndData', error)\r\n          return null\r\n        }\r\n      }\r\n\r\n      const balanceOfResponse = await contract.balanceOf(account)\r\n      const balanceOf = balanceOfResponse.toNumber()\r\n\r\n      if (balanceOf === 0) {\r\n        return []\r\n      }\r\n\r\n      const nftDataFetchPromises = []\r\n\r\n      // For each index get the tokenId and data associated with it\r\n      for (let i = 0; i < balanceOf; i++) {\r\n        nftDataFetchPromises.push(getTokenIdAndData(i))\r\n      }\r\n\r\n      const nftData = await Promise.all(nftDataFetchPromises)\r\n      return nftData\r\n    })\r\n\r\n    const nftSourceData = await Promise.all(nftSourcePromises)\r\n\r\n    return nftSourceData.flat()\r\n  },\r\n)\r\n\r\nexport const collectiblesSlice = createSlice({\r\n  name: 'collectibles',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchWalletNfts.pending, (state) => {\r\n      state.isLoading = true\r\n    })\r\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\r\n      state.isLoading = false\r\n      state.isInitialized = true\r\n      state.data = action.payload.reduce((accum, association) => {\r\n        if (!association) {\r\n          return accum\r\n        }\r\n\r\n        const [tokenId, identifier] = association as NftSourceItem\r\n\r\n        return {\r\n          ...accum,\r\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\r\n        }\r\n      }, {})\r\n    })\r\n  },\r\n})\r\n\r\nexport default collectiblesSlice.reducer\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import { request, gql } from 'graphql-request'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\r\nimport { Achievement } from 'state/types'\r\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\r\n\r\ninterface UserPointIncreaseEvent {\r\n  campaignId: string\r\n  id: string // wallet address\r\n  points: string\r\n}\r\n\r\n/**\r\n * Gets all user point increase events on the profile filtered by wallet address\r\n */\r\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\r\n  try {\r\n    const { user } = await request(\r\n      GRAPH_API_PROFILE,\r\n      gql`\r\n        query getUserPointIncreaseEvents($account: ID!) {\r\n          user(id: $account) {\r\n            points {\r\n              id\r\n              campaignId\r\n              points\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      {\r\n        account: account.toLowerCase(),\r\n      },\r\n    )\r\n\r\n    return user.points\r\n  } catch (error) {\r\n    return null\r\n  }\r\n}\r\n\r\n/**\r\n * Gets all user point increase events and adds achievement meta\r\n */\r\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\r\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\r\n\r\n  if (!pointIncreaseEvents) {\r\n    return []\r\n  }\r\n\r\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\r\n    if (!campaignMap.has(userPoint.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        id: userPoint.campaignId,\r\n        type: campaignMeta.type,\r\n        address: userPoint.id,\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: Number(userPoint.points),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\r\nimport { AchievementState, Achievement } from '../types'\r\nimport { getAchievements } from './helpers'\r\n\r\nconst initialState: AchievementState = {\r\n  data: [],\r\n}\r\n\r\nexport const achievementSlice = createSlice({\r\n  name: 'achievements',\r\n  initialState,\r\n  reducers: {\r\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\r\n      state.data.push(action.payload)\r\n    },\r\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = [...state.data, ...action.payload]\r\n    },\r\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\r\n      state.data = action.payload\r\n    },\r\n    clearAchievements: (state) => {\r\n      state.data = []\r\n    },\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\r\n\r\n// Thunks\r\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\r\n  try {\r\n    const achievements = await getAchievements(account)\r\n    dispatch(setAchievements(achievements))\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nexport default achievementSlice.reducer\r\n","import { Farm } from 'state/types'\r\n\r\n/**\r\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\r\n * @param farms Array of farms\r\n * @param preferredQuoteTokens Array of preferred quote tokens\r\n * @returns A preferred farm, if found - or the first element of the farms array\r\n */\r\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\r\n  const preferredFarm = farms.find((farm) => {\r\n    return preferredQuoteTokens.some((quoteToken) => {\r\n      return farm.quoteToken.symbol === quoteToken\r\n    })\r\n  })\r\n  return preferredFarm || farms[0]\r\n}\r\n\r\nexport default filterFarmsByQuoteToken\r\n","import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst FAST_INTERVAL = 10000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import React, { useState } from 'react'\r\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\r\nimport { light, dark } from '@pancakeswap/uikit'\r\n\r\nconst CACHE_KEY = 'IS_DARK'\r\n\r\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\r\n\r\nconst ThemeContextProvider = ({ children }) => {\r\n  const [isDark, setIsDark] = useState(() => {\r\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\r\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\r\n  })\r\n\r\n  const toggleTheme = () => {\r\n    setIsDark((prevState) => {\r\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\r\n      return !prevState\r\n    })\r\n  }\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\r\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\r\n    </ThemeContext.Provider>\r\n  )\r\n}\r\n\r\nexport { ThemeContext, ThemeContextProvider }\r\n","import React, { useEffect, useRef } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport { Text, TextProps } from '@pancakeswap/uikit'\r\n\r\ninterface BalanceProps extends TextProps {\r\n  value: number\r\n  decimals?: number\r\n  unit?: string\r\n  isDisabled?: boolean\r\n  prefix?: string\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst Balance: React.FC<BalanceProps> = ({\r\n  value,\r\n  color = 'text',\r\n  decimals = 3,\r\n  isDisabled = false,\r\n  unit,\r\n  prefix,\r\n  onClick,\r\n  ...props\r\n}) => {\r\n  const previousValue = useRef(0)\r\n\r\n  useEffect(() => {\r\n    previousValue.current = value\r\n  }, [value])\r\n\r\n  return (\r\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\r\n      {prefix && <span>{prefix}</span>}\r\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\r\n      {unit && <span>{unit}</span>}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default Balance\r\n","import { ethers } from 'ethers'\r\nimport { Campaign } from 'config/constants/types'\r\nimport ifosList from 'config/constants/ifo'\r\nimport { campaignMap } from 'config/constants/campaigns'\r\nimport { Achievement, TranslatableText } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { getPointCenterIfoAddress } from 'utils/addressHelpers'\r\nimport pointCenterIfoABI from 'config/abi/pointCenterIfo.json'\r\n\r\ninterface IfoMapResponse {\r\n  thresholdToClaim: string\r\n  campaignId: string\r\n  numberPoints: ethers.BigNumber\r\n}\r\n\r\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'IFO Shopper: %title%',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.title\r\n  }\r\n}\r\n\r\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\r\n  switch (campaign.type) {\r\n    case 'ifo':\r\n      return {\r\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\r\n        data: {\r\n          title: campaign.title as string,\r\n        },\r\n      }\r\n    default:\r\n      return campaign.description\r\n  }\r\n}\r\n\r\n/**\r\n * Checks if a wallet is eligible to claim points from valid IFO's\r\n */\r\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\r\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\r\n\r\n  // Returns the claim status of every IFO with a campaign ID\r\n  const claimStatusCalls = ifoCampaigns.map(({ address }) => {\r\n    return {\r\n      address: getPointCenterIfoAddress(),\r\n      name: 'checkClaimStatus',\r\n      params: [account, address],\r\n    }\r\n  })\r\n\r\n  const claimStatuses = (await multicallv2(pointCenterIfoABI, claimStatusCalls, { requireSuccess: false })) as\r\n    | [boolean][]\r\n    | null\r\n\r\n  // Get IFO data for all IFO's that are eligible to claim\r\n  const claimableIfoData = (await multicallv2(\r\n    pointCenterIfoABI,\r\n    claimStatuses.reduce((accum, claimStatusArr, index) => {\r\n      if (claimStatusArr === null) {\r\n        return accum\r\n      }\r\n\r\n      const [claimStatus] = claimStatusArr\r\n\r\n      if (claimStatus === true) {\r\n        return [...accum, { address: getPointCenterIfoAddress(), name: 'ifos', params: [index] }]\r\n      }\r\n\r\n      return accum\r\n    }, []),\r\n  )) as IfoMapResponse[]\r\n\r\n  // Transform response to an Achievement\r\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\r\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\r\n      return accum\r\n    }\r\n\r\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\r\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\r\n\r\n    return [\r\n      ...accum,\r\n      {\r\n        address,\r\n        id: claimableIfoDataItem.campaignId,\r\n        type: 'ifo',\r\n        title: getAchievementTitle(campaignMeta),\r\n        description: getAchievementDescription(campaignMeta),\r\n        badge: campaignMeta.badge,\r\n        points: claimableIfoDataItem.numberPoints.toNumber(),\r\n      },\r\n    ]\r\n  }, [])\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport maxBy from 'lodash/maxBy'\r\nimport merge from 'lodash/merge'\r\nimport range from 'lodash/range'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { Bet, LedgerData, HistoryFilter, PredictionsState, PredictionStatus, ReduxNodeRound } from 'state/types'\r\nimport { getPredictionsContract } from 'utils/contractHelpers'\r\nimport {\r\n  getBetHistory,\r\n  transformBetResponse,\r\n  makeFutureRoundResponse,\r\n  makeRoundData,\r\n  getRoundsData,\r\n  getPredictionData,\r\n  MarketData,\r\n  getLedgerData,\r\n  makeLedgerData,\r\n  serializePredictionsRoundsResponse,\r\n  getClaimStatuses,\r\n} from './helpers'\r\n\r\nconst PAST_ROUND_COUNT = 5\r\nconst FUTURE_ROUND_COUNT = 2\r\n\r\n// The estimated time it takes to broadcast\r\nexport const BLOCK_PADDING = 3\r\n\r\nconst initialState: PredictionsState = {\r\n  status: PredictionStatus.INITIAL,\r\n  isLoading: false,\r\n  isHistoryPaneOpen: false,\r\n  isChartPaneOpen: false,\r\n  isFetchingHistory: false,\r\n  historyFilter: HistoryFilter.ALL,\r\n  currentEpoch: 0,\r\n  currentRoundStartBlockNumber: 0,\r\n  intervalBlocks: 100,\r\n  bufferBlocks: 20,\r\n  minBetAmount: '1000000000000000',\r\n  rewardRate: 97,\r\n  lastOraclePrice: BIG_ZERO.toJSON(),\r\n  rounds: {},\r\n  history: {},\r\n  ledgers: {},\r\n  claimableStatuses: {},\r\n}\r\n\r\n// Thunks\r\n// V2 REFACTOR\r\ntype PredictionInitialization = Pick<\r\n  PredictionsState,\r\n  | 'status'\r\n  | 'currentEpoch'\r\n  | 'intervalBlocks'\r\n  | 'bufferBlocks'\r\n  | 'minBetAmount'\r\n  | 'rewardRate'\r\n  | 'rounds'\r\n  | 'ledgers'\r\n  | 'claimableStatuses'\r\n>\r\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\r\n  'predictions/intialize',\r\n  async (account = null) => {\r\n    // Static values\r\n    const marketData = await getPredictionData()\r\n    const epochs = range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\r\n\r\n    // Round data\r\n    const roundsResponse = await getRoundsData(epochs)\r\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n\r\n    const initializedData = {\r\n      ...marketData,\r\n      rounds: initialRoundData,\r\n      ledgers: {},\r\n      claimableStatuses: {},\r\n    }\r\n\r\n    if (!account) {\r\n      return initializedData\r\n    }\r\n\r\n    // Bet data\r\n    const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n    // Claim statuses\r\n    const claimableStatuses = await getClaimStatuses(account, epochs)\r\n\r\n    return merge({}, initializedData, {\r\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\r\n      claimableStatuses,\r\n    })\r\n  },\r\n)\r\n\r\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\r\n  const predictionContract = getPredictionsContract()\r\n  const response = await predictionContract.rounds(epoch)\r\n  return serializePredictionsRoundsResponse(response)\r\n})\r\n\r\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\r\n  'predictions/fetchRounds',\r\n  async (epochs) => {\r\n    const rounds = await getRoundsData(epochs)\r\n    return rounds.reduce((accum, round) => {\r\n      if (!round) {\r\n        return accum\r\n      }\r\n\r\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\r\n\r\n      return {\r\n        ...accum,\r\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\r\n      }\r\n    }, {})\r\n  },\r\n)\r\n\r\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\r\n  const marketData = await getPredictionData()\r\n  return marketData\r\n})\r\n\r\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\r\n  'predictions/fetchLedgerData',\r\n  async ({ account, epochs }) => {\r\n    const ledgers = await getLedgerData(account, epochs)\r\n    return makeLedgerData(account, ledgers, epochs)\r\n  },\r\n)\r\n\r\nexport const fetchClaimableStatuses = createAsyncThunk<\r\n  PredictionsState['claimableStatuses'],\r\n  { account: string; epochs: number[] }\r\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\r\n  const ledgers = await getClaimStatuses(account, epochs)\r\n  return ledgers\r\n})\r\n// END V2 REFACTOR\r\n\r\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\r\n  'predictions/fetchHistory',\r\n  async ({ account, claimed }) => {\r\n    const response = await getBetHistory({\r\n      user: account.toLowerCase(),\r\n      claimed,\r\n    })\r\n    const bets = response.map(transformBetResponse)\r\n\r\n    return { account, bets }\r\n  },\r\n)\r\n\r\nexport const predictionsSlice = createSlice({\r\n  name: 'predictions',\r\n  initialState,\r\n  reducers: {\r\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\r\n      state.status = action.payload\r\n    },\r\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isHistoryPaneOpen = action.payload\r\n      state.historyFilter = HistoryFilter.ALL\r\n    },\r\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\r\n      state.isChartPaneOpen = action.payload\r\n    },\r\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\r\n      state.historyFilter = action.payload\r\n    },\r\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\r\n      state.currentEpoch = action.payload\r\n    },\r\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\r\n      state.lastOraclePrice = action.payload\r\n    },\r\n    markBetHistoryAsCollected: (state, action: PayloadAction<{ account: string; betId: string }>) => {\r\n      const { account, betId } = action.payload\r\n\r\n      if (state.history[account]) {\r\n        const betIndex = state.history[account].findIndex((bet) => bet.id === betId)\r\n\r\n        if (betIndex >= 0) {\r\n          state.history[account][betIndex].claimed = true\r\n        }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Claimable statuses\r\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\r\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\r\n    })\r\n\r\n    // Ledger (bet) records\r\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\r\n      state.ledgers = merge({}, state.ledgers, action.payload)\r\n    })\r\n\r\n    // Get static market data\r\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, intervalBlocks, bufferBlocks, minBetAmount, rewardRate } = action.payload\r\n\r\n      // If the round has change add a new future round\r\n      if (state.currentEpoch !== currentEpoch) {\r\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\r\n        const futureRound = makeFutureRoundResponse(\r\n          newestRound.epoch + 1,\r\n          newestRound.startBlock + (state.intervalBlocks + BLOCK_PADDING),\r\n        )\r\n\r\n        state.rounds[futureRound.epoch] = futureRound\r\n        state.currentRoundStartBlockNumber = state.currentRoundStartBlockNumber + state.intervalBlocks + BLOCK_PADDING\r\n      }\r\n\r\n      state.status = status\r\n      state.currentEpoch = currentEpoch\r\n      state.intervalBlocks = intervalBlocks\r\n      state.bufferBlocks = bufferBlocks\r\n      state.minBetAmount = minBetAmount\r\n      state.rewardRate = rewardRate\r\n    })\r\n\r\n    // Initialize predictions\r\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\r\n      const { status, currentEpoch, bufferBlocks, intervalBlocks, rounds, claimableStatuses, rewardRate, ledgers } =\r\n        action.payload\r\n      const currentRoundStartBlockNumber = action.payload.rounds[currentEpoch].startBlock\r\n      const futureRounds: ReduxNodeRound[] = []\r\n\r\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\r\n        futureRounds.push(\r\n          makeFutureRoundResponse(\r\n            currentEpoch + i,\r\n            currentRoundStartBlockNumber + (intervalBlocks + BLOCK_PADDING) * i,\r\n          ),\r\n        )\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        status,\r\n        currentEpoch,\r\n        bufferBlocks,\r\n        intervalBlocks,\r\n        rewardRate,\r\n        currentRoundStartBlockNumber,\r\n        claimableStatuses,\r\n        ledgers,\r\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\r\n      }\r\n    })\r\n\r\n    // Get single round\r\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, {\r\n        [action.payload.epoch.toString()]: action.payload,\r\n      })\r\n    })\r\n\r\n    // Get multiple rounds\r\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\r\n      state.rounds = merge({}, state.rounds, action.payload)\r\n    })\r\n\r\n    // Show History\r\n    builder.addCase(fetchHistory.pending, (state) => {\r\n      state.isFetchingHistory = true\r\n    })\r\n    builder.addCase(fetchHistory.rejected, (state) => {\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n    })\r\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\r\n      const { account, bets } = action.payload\r\n\r\n      state.isFetchingHistory = false\r\n      state.isHistoryPaneOpen = true\r\n      state.history[account] = bets\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const {\r\n  setChartPaneState,\r\n  setCurrentEpoch,\r\n  setHistoryFilter,\r\n  setHistoryPaneState,\r\n  setPredictionStatus,\r\n  setLastOraclePrice,\r\n  markBetHistoryAsCollected,\r\n} = predictionsSlice.actions\r\n\r\nexport default predictionsSlice.reducer\r\n","import React from 'react'\r\nimport { Box, BoxProps } from '@pancakeswap/uikit'\r\n\r\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\r\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default Container\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","const MINUTE_IN_SECONDS = 60\r\nconst HOUR_IN_SECONDS = 3600\r\nconst DAY_IN_SECONDS = 86400\r\nconst MONTH_IN_SECONDS = 2629800\r\nconst YEAR_IN_SECONDS = 31557600\r\n\r\n/**\r\n * Format number of seconds into year, month, day, hour, minute, seconds\r\n *\r\n * @param seconds\r\n */\r\nconst getTimePeriods = (seconds: number) => {\r\n  let delta = Math.abs(seconds)\r\n  const timeLeft = {\r\n    years: 0,\r\n    months: 0,\r\n    days: 0,\r\n    hours: 0,\r\n    minutes: 0,\r\n    seconds: 0,\r\n  }\r\n\r\n  if (delta >= YEAR_IN_SECONDS) {\r\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\r\n    delta -= timeLeft.years * YEAR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MONTH_IN_SECONDS) {\r\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\r\n    delta -= timeLeft.months * MONTH_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= DAY_IN_SECONDS) {\r\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\r\n    delta -= timeLeft.days * DAY_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= HOUR_IN_SECONDS) {\r\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\r\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\r\n  }\r\n\r\n  if (delta >= MINUTE_IN_SECONDS) {\r\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\r\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\r\n  }\r\n\r\n  timeLeft.seconds = delta\r\n\r\n  return timeLeft\r\n}\r\n\r\nexport default getTimePeriods\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Spinner } from '@pancakeswap/uikit'\r\nimport Page from './Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Spinner />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import BigNumber from 'bignumber.js'\r\nimport { SerializedBigNumber, TranslatableText } from 'state/types'\r\n\r\nexport interface Address {\r\n  80001?: string\r\n  137: string\r\n}\r\n\r\nexport interface Token {\r\n  symbol: string\r\n  address?: Address\r\n  decimals?: number\r\n  projectLink?: string\r\n  busdPrice?: string\r\n}\r\n\r\nexport enum PoolIds {\r\n  poolBasic = 'poolBasic',\r\n  poolUnlimited = 'poolUnlimited',\r\n}\r\n\r\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\r\n\r\ninterface IfoPoolInfo {\r\n  saleAmount: string\r\n  raiseAmount: string\r\n  cakeToBurn: string\r\n  distributionRatio: number // Range [0-1]\r\n}\r\n\r\nexport interface Ifo {\r\n  id: string\r\n  isActive: boolean\r\n  address: string\r\n  name: string\r\n  currency: Token\r\n  token: Token\r\n  releaseBlockNumber: number\r\n  articleUrl: string\r\n  campaignId: string\r\n  tokenOfferingPrice: number\r\n  version: number\r\n  [PoolIds.poolBasic]?: IfoPoolInfo\r\n  [PoolIds.poolUnlimited]: IfoPoolInfo\r\n}\r\n\r\n\r\nexport enum QuoteToken {\r\n  'BNB' = 'BNB',\r\n  'FARM' = 'FARM',\r\n  'SYRUP' = 'SYRUP',\r\n  'USDC' = 'USDC',\r\n  'TWT' = 'TWT',\r\n  'UST' = 'UST',\r\n  'WMATIC' = 'WMATIC',\r\n  'MATIC' = 'MATIC',\r\n  'WETH' = 'WETH'\r\n}\r\n\r\nexport enum PoolCategory {\r\n  'COMMUNITY' = 'Community',\r\n  'CORE' = 'Core',\r\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\r\n  'AUTO' = 'Auto',\r\n}\r\n\r\nexport interface FarmConfig {\r\n  pid: number\r\n  lpSymbol: string\r\n  lpAddresses: Address\r\n  token: Token\r\n  quoteToken: Token\r\n  multiplier?: string\r\n  isCommunity?: boolean\r\n  dual?: {\r\n    rewardPerBlock: number\r\n    earnLabel: string\r\n    endBlock: number\r\n  }\r\n}\r\n\r\nexport interface PoolConfig {\r\n  sousId: number\r\n  earningToken: Token\r\n  stakingToken: Token\r\n  contractAddress: Address\r\n  poolCategory: PoolCategory\r\n  tokenPerBlock: string\r\n  sortOrder?: number\r\n  harvest?: boolean\r\n  isFinished?: boolean\r\n  enableEmergencyWithdraw?: boolean\r\n}\r\n\r\nexport type Images = {\r\n  lg: string\r\n  md: string\r\n  sm: string\r\n  ipfs?: string\r\n}\r\n\r\nexport type NftImages = {\r\n  blur?: string\r\n} & Images\r\n\r\nexport type NftVideo = {\r\n  webm: string\r\n  mp4: string\r\n}\r\n\r\nexport type NftSource = {\r\n  [key in NftType]: {\r\n    address: Address\r\n    identifierKey: string\r\n  }\r\n}\r\n\r\nexport enum NftType {\r\n  PANCAKE = 'pancake',\r\n  MIXIE = 'mixie',\r\n}\r\n\r\nexport type Nft = {\r\n  description: string\r\n  name: string\r\n  images: NftImages\r\n  sortOrder: number\r\n  type: NftType\r\n  video?: NftVideo\r\n\r\n  // Uniquely identifies the nft.\r\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\r\n  identifier: string\r\n\r\n  // Used to be \"bunnyId\". Used when minting NFT\r\n  variationId?: number | string\r\n}\r\n\r\nexport type TeamImages = {\r\n  alt: string\r\n} & Images\r\n\r\nexport type Team = {\r\n  id: number\r\n  name: string\r\n  description: string\r\n  isJoinable?: boolean\r\n  users: number\r\n  points: number\r\n  images: TeamImages\r\n  background: string\r\n  textColor: string\r\n}\r\n\r\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\r\n\r\nexport type Campaign = {\r\n  id: string\r\n  type: CampaignType\r\n  title?: TranslatableText\r\n  description?: TranslatableText\r\n  badge?: string\r\n}\r\n\r\nexport type PageMeta = {\r\n  title: string\r\n  description?: string\r\n  image?: string\r\n}\r\n\r\nexport enum LotteryStatus {\r\n  PENDING = 'pending',\r\n  OPEN = 'open',\r\n  CLOSE = 'close',\r\n  CLAIMABLE = 'claimable',\r\n}\r\n\r\nexport interface LotteryTicket {\r\n  id: string\r\n  number: string\r\n  status: boolean\r\n  rewardBracket?: number\r\n  roundId?: string\r\n  cakeReward?: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryTicketClaimData {\r\n  ticketsWithUnclaimedRewards: LotteryTicket[]\r\n  allWinningTickets: LotteryTicket[]\r\n  cakeTotal: BigNumber\r\n  roundId: string\r\n}\r\n","import request, { gql } from 'graphql-request'\r\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\r\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\r\n  const response: { proposals: Proposal[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\r\n        proposals(\r\n          first: $first\r\n          skip: $skip\r\n          orderBy: \"end\"\r\n          orderDirection: desc\r\n          where: { space_in: \"cake.eth\", state: $state }\r\n        ) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, state },\r\n  )\r\n  return response.proposals\r\n}\r\n\r\nexport const getProposal = async (id: string): Promise<Proposal> => {\r\n  const response: { proposal: Proposal } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getProposal($id: String) {\r\n        proposal(id: $id) {\r\n          id\r\n          title\r\n          body\r\n          choices\r\n          start\r\n          end\r\n          snapshot\r\n          state\r\n          author\r\n          space {\r\n            id\r\n            name\r\n          }\r\n        }\r\n      }\r\n    `,\r\n    { id },\r\n  )\r\n  return response.proposal\r\n}\r\n\r\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\r\n  const response: { votes: Vote[] } = await request(\r\n    SNAPSHOT_API,\r\n    gql`\r\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\r\n        votes(first: $first, skip: $skip, where: $where) {\r\n          id\r\n          voter\r\n          created\r\n          choice\r\n          space {\r\n            id\r\n            name\r\n          }\r\n          proposal {\r\n            choices\r\n          }\r\n          metadata\r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.votes\r\n}\r\n\r\nexport const getVoteVerificationStatuses = async (\r\n  votes: Vote[],\r\n  block?: number,\r\n): Promise<{ [key: string]: boolean }> => {\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n\r\n  const votesToVerify = votes.map((vote) => ({\r\n    address: vote.voter,\r\n    verificationHash: vote.metadata?.verificationHash,\r\n    total: vote.metadata?.votingPower,\r\n  }))\r\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      block: blockNumber,\r\n      votes: votesToVerify,\r\n    }),\r\n  })\r\n\r\n  if (!response.ok) {\r\n    throw new Error(response.statusText)\r\n  }\r\n\r\n  const data = await response.json()\r\n  return votes.reduce((accum, vote) => {\r\n    return {\r\n      ...accum,\r\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\r\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  return new Promise((resolve, reject) => {\r\n    let votes: Vote[] = []\r\n\r\n    const fetchVoteChunk = async (newSkip: number) => {\r\n      try {\r\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\r\n\r\n        if (voteChunk.length === 0) {\r\n          resolve(votes)\r\n        } else {\r\n          votes = [...votes, ...voteChunk]\r\n          fetchVoteChunk(newSkip + votesPerChunk)\r\n        }\r\n      } catch (error) {\r\n        reject(error)\r\n      }\r\n    }\r\n\r\n    fetchVoteChunk(0)\r\n  })\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport { merge } from 'lodash'\r\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\r\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\r\n\r\nconst initialState: VotingState = {\r\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  proposals: {},\r\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\r\n  votes: {},\r\n}\r\n\r\n// Thunks\r\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\r\n  'voting/fetchProposals',\r\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\r\n    const response = await getProposals(first, skip, state)\r\n    return response\r\n  },\r\n)\r\n\r\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\r\n  const response = await getProposal(proposalId)\r\n  return response\r\n})\r\n\r\nexport const fetchVotes = createAsyncThunk<\r\n  { votes: Vote[]; proposalId: string },\r\n  { proposalId: string; block?: number }\r\n>('voting/fetchVotes', async ({ proposalId, block }) => {\r\n  const response = await getAllVotes(proposalId, block)\r\n  return { votes: response, proposalId }\r\n})\r\n\r\nexport const verifyVotes = createAsyncThunk<\r\n  { results: { [key: string]: boolean }; proposalId: string },\r\n  { proposalId: string; snapshot?: string },\r\n  { state: State }\r\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\r\n  const state = getState()\r\n  const proposalVotes = state.voting.votes[proposalId]\r\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\r\n  return { results: response, proposalId }\r\n})\r\n\r\nexport const votingSlice = createSlice({\r\n  name: 'voting',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    // Verify Votes\r\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\r\n      const { proposalId, results } = action.payload\r\n\r\n      if (state.votes[proposalId]) {\r\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\r\n          return {\r\n            ...vote,\r\n            _inValid: results[vote.id] === false,\r\n          }\r\n        })\r\n      }\r\n    })\r\n\r\n    // Fetch Proposals\r\n    builder.addCase(fetchProposals.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\r\n      const proposals = action.payload.reduce((accum, proposal) => {\r\n        return {\r\n          ...accum,\r\n          [proposal.id]: proposal,\r\n        }\r\n      }, {})\r\n\r\n      state.proposals = merge({}, state.proposals, proposals)\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Proposal\r\n    builder.addCase(fetchProposal.pending, (state) => {\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\r\n      state.proposals[action.payload.id] = action.payload\r\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n\r\n    // Fetch Votes\r\n    builder.addCase(fetchVotes.pending, (state) => {\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\r\n    })\r\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\r\n      const { votes, proposalId } = action.payload\r\n\r\n      state.votes = {\r\n        ...state.votes,\r\n        [proposalId]: votes,\r\n      }\r\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\r\n    })\r\n  },\r\n})\r\n\r\nexport default votingSlice.reducer\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket, LotteryTicketClaimData } from 'config/constants/types'\r\nimport { LotteryUserGraphEntity, LotteryRoundGraphEntity } from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport {\r\n  getViewUserTicketInfoCalls,\r\n  mergeViewUserTicketInfoMulticallResponse,\r\n  processRawTicketsResponse,\r\n} from './helpers'\r\n\r\ninterface RoundDataAndUserTickets {\r\n  roundId: string\r\n  userTickets: LotteryTicket[]\r\n  finalNumber: string\r\n}\r\n\r\nconst lotteryAddress = getLotteryV2Address()\r\n\r\nconst fetchCakeRewardsForTickets = async (\r\n  winningTickets: LotteryTicket[],\r\n): Promise<{ ticketsWithUnclaimedRewards: LotteryTicket[]; cakeTotal: BigNumber }> => {\r\n  const calls = winningTickets.map((winningTicket) => {\r\n    const { roundId, id, rewardBracket } = winningTicket\r\n    return {\r\n      name: 'viewRewardsForTicketId',\r\n      address: lotteryAddress,\r\n      params: [roundId, id, rewardBracket],\r\n    }\r\n  })\r\n  const cakeRewards = await multicallv2(lotteryV2Abi, calls)\r\n\r\n  const cakeTotal = cakeRewards.reduce((accum: BigNumber, cakeReward: ethers.BigNumber[]) => {\r\n    return accum.plus(new BigNumber(cakeReward[0].toString()))\r\n  }, BIG_ZERO)\r\n\r\n  const ticketsWithUnclaimedRewards = winningTickets.map((winningTicket, index) => {\r\n    return { ...winningTicket, cakeReward: cakeRewards[index] }\r\n  })\r\n  return { ticketsWithUnclaimedRewards, cakeTotal }\r\n}\r\n\r\nconst getRewardBracketByNumber = (ticketNumber: string, finalNumber: string): number => {\r\n  // Winning numbers are evaluated right-to-left in the smart contract, so we reverse their order for validation here:\r\n  // i.e. '1123456' should be evaluated as '6543211'\r\n  const ticketNumAsArray = ticketNumber.split('').reverse()\r\n  const winningNumsAsArray = finalNumber.split('').reverse()\r\n  const matchingNumbers = []\r\n\r\n  // The number at index 6 in all tickets is 1 and will always match, so finish at index 5\r\n  for (let index = 0; index < winningNumsAsArray.length - 1; index++) {\r\n    if (ticketNumAsArray[index] !== winningNumsAsArray[index]) {\r\n      break\r\n    }\r\n    matchingNumbers.push(ticketNumAsArray[index])\r\n  }\r\n\r\n  // Reward brackets refer to indexes, 0 = 1 match, 5 = 6 matches. Deduct 1 from matchingNumbers' length to get the reward bracket\r\n  const rewardBracket = matchingNumbers.length - 1\r\n  return rewardBracket\r\n}\r\n\r\nexport const getWinningTickets = async (\r\n  roundDataAndUserTickets: RoundDataAndUserTickets,\r\n): Promise<LotteryTicketClaimData> => {\r\n  const { roundId, userTickets, finalNumber } = roundDataAndUserTickets\r\n\r\n  const ticketsWithRewardBrackets = userTickets.map((ticket) => {\r\n    return {\r\n      roundId,\r\n      id: ticket.id,\r\n      number: ticket.number,\r\n      status: ticket.status,\r\n      rewardBracket: getRewardBracketByNumber(ticket.number, finalNumber),\r\n    }\r\n  })\r\n\r\n  // A rewardBracket of -1 means no matches. 0 and above means there has been a match\r\n  const allWinningTickets = ticketsWithRewardBrackets.filter((ticket) => {\r\n    return ticket.rewardBracket >= 0\r\n  })\r\n\r\n  // If ticket.status is true, the ticket has already been claimed\r\n  const unclaimedWinningTickets = allWinningTickets.filter((ticket) => {\r\n    return !ticket.status\r\n  })\r\n\r\n  if (unclaimedWinningTickets.length > 0) {\r\n    const { ticketsWithUnclaimedRewards, cakeTotal } = await fetchCakeRewardsForTickets(unclaimedWinningTickets)\r\n    return { ticketsWithUnclaimedRewards, allWinningTickets, cakeTotal, roundId }\r\n  }\r\n\r\n  if (allWinningTickets.length > 0) {\r\n    return { ticketsWithUnclaimedRewards: null, allWinningTickets, cakeTotal: null, roundId }\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nconst getWinningNumbersForRound = (targetRoundId: string, lotteriesData: LotteryRoundGraphEntity[]) => {\r\n  const targetRound = lotteriesData.find((pastLottery) => pastLottery.id === targetRoundId)\r\n  return targetRound?.finalNumber\r\n}\r\n\r\nexport const fetchUserTicketsForMultipleRounds = async (\r\n  roundsToCheck: { totalTickets: string; lotteryId: string }[],\r\n  account: string,\r\n) => {\r\n  // Build calls with data to help with merging multicall responses\r\n  const callsWithRoundData = roundsToCheck.map((round) => {\r\n    const totalTickets = parseInt(round.totalTickets, 10)\r\n    const calls = getViewUserTicketInfoCalls(totalTickets, account, round.lotteryId)\r\n    return { calls, lotteryId: round.lotteryId, count: calls.length }\r\n  })\r\n\r\n  // Batch all calls across all rounds\r\n  const multicalls = [].concat(...callsWithRoundData.map((callWithRoundData) => callWithRoundData.calls))\r\n\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, multicalls, { requireSuccess: false })\r\n    // Use callsWithRoundData to slice multicall responses by round\r\n    const multicallResPerRound = []\r\n    let resCount = 0\r\n    for (let i = 0; i < callsWithRoundData.length; i += 1) {\r\n      const callOptions = callsWithRoundData[i]\r\n\r\n      const singleRoundResponse = multicallRes.slice(resCount, resCount + callOptions.count)\r\n      // Don't push null responses values - can happen when the check is using fallback behaviour because it has no subgraph past rounds\r\n      multicallResPerRound.push(singleRoundResponse.filter((res) => res))\r\n      resCount += callOptions.count\r\n    }\r\n    const mergedMulticallResponse = multicallResPerRound.map((res) => mergeViewUserTicketInfoMulticallResponse(res))\r\n\r\n    return mergedMulticallResponse\r\n  } catch (error) {\r\n    console.error(error)\r\n    return []\r\n  }\r\n}\r\n\r\nconst fetchUnclaimedUserRewards = async (\r\n  account: string,\r\n  userLotteryData: LotteryUserGraphEntity,\r\n  lotteriesData: LotteryRoundGraphEntity[],\r\n): Promise<LotteryTicketClaimData[]> => {\r\n  const { rounds } = userLotteryData\r\n\r\n  // If there is no user round history - return an empty array\r\n  if (rounds.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // If the web3 provider account doesn't equal the userLotteryData account, return an empty array - this is effectively a loading state as the user switches accounts\r\n  if (userLotteryData.account.toLowerCase() !== account.toLowerCase()) {\r\n    return []\r\n  }\r\n\r\n  // Filter out non-claimable rounds\r\n  const claimableRounds = rounds.filter((round) => {\r\n    return round.status.toLowerCase() === LotteryStatus.CLAIMABLE\r\n  })\r\n\r\n  // If there are any rounds tickets haven't been claimed for, OR a user has over 100 tickets in a round - check user tickets for those rounds\r\n  const roundsToCheck = claimableRounds.filter((round) => {\r\n    return !round.claimed || parseInt(round.totalTickets, 10) > 100\r\n  })\r\n\r\n  if (roundsToCheck.length > 0) {\r\n    const rawUserTicketData = await fetchUserTicketsForMultipleRounds(roundsToCheck, account)\r\n\r\n    if (rawUserTicketData.length === 0) {\r\n      // In case of error with ticket calls, return empty array\r\n      return []\r\n    }\r\n\r\n    const roundIds = roundsToCheck.map((round) => round.lotteryId)\r\n    const roundDataAndUserTickets = rawUserTicketData.map((rawRoundTicketData, index) => {\r\n      return {\r\n        roundId: roundIds[index],\r\n        userTickets: processRawTicketsResponse(rawRoundTicketData),\r\n        finalNumber: getWinningNumbersForRound(roundIds[index], lotteriesData),\r\n      }\r\n    })\r\n\r\n    const winningTicketsForPastRounds = await Promise.all(\r\n      roundDataAndUserTickets.map((roundData) => getWinningTickets(roundData)),\r\n    )\r\n\r\n    // Filter out null values (returned when no winning tickets found for past round)\r\n    const roundsWithWinningTickets = winningTicketsForPastRounds.filter(\r\n      (winningTicketData) => winningTicketData !== null,\r\n    )\r\n\r\n    // Filter to only rounds with unclaimed tickets\r\n    const roundsWithUnclaimedWinningTickets = roundsWithWinningTickets.filter(\r\n      (winningTicketData) => winningTicketData.ticketsWithUnclaimedRewards,\r\n    )\r\n\r\n    return roundsWithUnclaimedWinningTickets\r\n  }\r\n  // All rounds claimed, return empty array\r\n  return []\r\n}\r\n\r\nexport default fetchUnclaimedUserRewards\r\n","import { ethers } from 'ethers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { poolsConfig } from 'config/constants'\r\nimport { PoolCategory } from 'config/constants/types'\r\n\r\n// Addresses\r\nimport {\r\n  getAddress,\r\n  getPancakeProfileAddress,\r\n  getPancakeRabbitsAddress,\r\n  getBunnyFactoryAddress,\r\n  getBunnySpecialAddress,\r\n  getCakeAddress,\r\n  getLotteryV2Address,\r\n  getMasterChefAddress,\r\n  getPointCenterIfoAddress,\r\n  getClaimRefundAddress,\r\n  getTradingCompetitionAddress,\r\n  getEasterNftAddress,\r\n  getCakeVaultAddress,\r\n  getPredictionsAddress,\r\n  getChainlinkOracleAddress,\r\n  getMulticallAddress,\r\n  getBunnySpecialCakeVaultAddress,\r\n  getBunnySpecialPredictionAddress,\r\n} from 'utils/addressHelpers'\r\n\r\n// ABI\r\nimport profileABI from 'config/abi/pancakeProfile.json'\r\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\r\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\r\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\r\nimport bep20Abi from 'config/abi/erc20.json'\r\nimport erc721Abi from 'config/abi/erc721.json'\r\nimport lpTokenAbi from 'config/abi/lpToken.json'\r\nimport cakeAbi from 'config/abi/cake.json'\r\nimport ifoV1Abi from 'config/abi/ifoV1.json'\r\nimport ifoV2Abi from 'config/abi/ifoV2.json'\r\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport masterChef from 'config/abi/masterchef.json'\r\nimport sousChef from 'config/abi/sousChef.json'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\r\nimport claimRefundAbi from 'config/abi/claimRefund.json'\r\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\r\nimport easterNftAbi from 'config/abi/easterNft.json'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\r\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\r\nimport { ChainLinkOracleContract, PredictionsContract } from './types'\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = signer ?? simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bep20Abi, address, signer)\r\n}\r\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(erc721Abi, address, signer)\r\n}\r\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lpTokenAbi, address, signer)\r\n}\r\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV1Abi, address, signer)\r\n}\r\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ifoV2Abi, address, signer)\r\n}\r\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n  return getContract(abi, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const config = poolsConfig.find((pool) => pool.sousId === id)\r\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\r\n}\r\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\r\n}\r\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeAbi, getCakeAddress(), signer)\r\n}\r\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(profileABI, getPancakeProfileAddress(), signer)\r\n}\r\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\r\n}\r\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\r\n}\r\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\r\n}\r\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\r\n}\r\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(masterChef, getMasterChefAddress(), signer)\r\n}\r\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\r\n}\r\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\r\n}\r\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\r\n}\r\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\r\n}\r\n\r\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\r\n}\r\n\r\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\r\n}\r\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\r\n}\r\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\r\n}\r\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n  width: 100%;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n  user-select: none;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    setIsOpen(!isOpen)\r\n    event.stopPropagation()\r\n  }\r\n\r\n  const onOptionClicked = (selectedIndex: number) => () => {\r\n    setSelectedOptionIndex(selectedIndex)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(options[selectedIndex])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n\r\n    const handleClickOutside = () => {\r\n      setIsOpen(false)\r\n    }\r\n\r\n    document.addEventListener('click', handleClickOutside)\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{options[selectedOptionIndex].label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option, index) =>\r\n            index !== selectedOptionIndex ? (\r\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const { t } = useTranslation()\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder={t(placeholder)}\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from 'utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\nexport const BSC_BLOCK_TIME = 2\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 FARM is minted per block\r\n// 20 FARM per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 FARM per block goes to FARM syrup pool\r\n// 9 FARM per block goes to Yield farms and lottery\r\n// CAKE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// FARM/Block in src/views/Home/components/CakeStats.tsx = 19 (40 - Amount sent to burn pool)\r\n\r\nexport const CAKE_PER_BLOCK = new BigNumber(1)\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\r\nexport const CAKE_PER_YEAR = CAKE_PER_BLOCK.times(BLOCKS_PER_YEAR)\r\nexport const BASE_URL = 'https://pancakeswap.finance'\r\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\r\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\r\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\r\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\r\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\r\nexport const LOTTERY_TICKET_PRICE = 1\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\r\nexport const DEFAULT_GAS_LIMIT = 200000\r\nexport const DEFAULT_GAS_PRICE = 5\r\n","import { ethers } from 'ethers'\r\nimport { getMulticallContract } from 'utils/contractHelpers'\r\nimport { MultiCallResponse } from './types'\r\n\r\nexport interface Call {\r\n  address: string // Address of the contract\r\n  name: string // Function name on the contract (example: balanceOf)\r\n  params?: any[] // Function params\r\n}\r\n\r\ninterface MulticallOptions {\r\n  requireSuccess?: boolean\r\n}\r\n\r\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\r\n  try {\r\n    const multi = getMulticallContract()\r\n\r\n    const itf = new ethers.utils.Interface(abi)\r\n\r\n    const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n    const { returnData } = await multi.aggregate(calldata)\r\n\r\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n\r\n    return res\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\n/**\r\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\r\n *\r\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\r\n * 2. The return inclues a boolean whether the call was successful e.g. [wasSuccessfull, callResult]\r\n */\r\nexport const multicallv2 = async <T = any>(\r\n  abi: any[],\r\n  calls: Call[],\r\n  options: MulticallOptions = { requireSuccess: true },\r\n): Promise<MultiCallResponse<T>> => {\r\n  const { requireSuccess } = options\r\n  const multi = getMulticallContract()\r\n  const itf = new ethers.utils.Interface(abi)\r\n\r\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\r\n  const res = returnData.map((call, i) => {\r\n    const [result, data] = call\r\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\r\n  })\r\n\r\n  return res\r\n}\r\n\r\nexport default multicall\r\n","import { useMemo } from 'react'\r\nimport useWeb3Provider from 'hooks/useWeb3Provider'\r\nimport {\r\n  getBep20Contract,\r\n  getCakeContract,\r\n  getBunnyFactoryContract,\r\n  getBunnySpecialContract,\r\n  getPancakeRabbitContract,\r\n  getProfileContract,\r\n  getIfoV1Contract,\r\n  getIfoV2Contract,\r\n  getMasterchefContract,\r\n  getPointCenterIfoContract,\r\n  getSouschefContract,\r\n  getClaimRefundContract,\r\n  getTradingCompetitionContract,\r\n  getEasterNftContract,\r\n  getErc721Contract,\r\n  getCakeVaultContract,\r\n  getPredictionsContract,\r\n  getChainlinkOracleContract,\r\n  getSouschefV2Contract,\r\n  getLotteryV2Contract,\r\n  getBunnySpecialCakeVaultContract,\r\n  getBunnySpecialPredictionContract,\r\n} from 'utils/contractHelpers'\r\n\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useIfoV1Contract = (address: string) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getIfoV1Contract(address, provider.getSigner()), [address, provider])\r\n}\r\n\r\nexport const useIfoV2Contract = (address: string) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getIfoV2Contract(address, provider.getSigner()), [address, provider])\r\n}\r\n\r\nexport const useERC20 = (address: string) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getBep20Contract(address, provider.getSigner()), [address, provider])\r\n}\r\n\r\n/**\r\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\r\n */\r\nexport const useERC721 = (address: string) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getErc721Contract(address, provider.getSigner()), [address, provider])\r\n}\r\n\r\nexport const useCake = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getCakeContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useBunnyFactory = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getBunnyFactoryContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const usePancakeRabbits = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getPancakeRabbitContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useProfile = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getProfileContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useLotteryV2Contract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getLotteryV2Contract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useMasterchef = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getMasterchefContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useSousChef = (id) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getSouschefContract(id, provider.getSigner()), [id, provider])\r\n}\r\n\r\nexport const useSousChefV2 = (id) => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getSouschefV2Contract(id, provider.getSigner()), [id, provider])\r\n}\r\n\r\nexport const usePointCenterIfoContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getPointCenterIfoContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useBunnySpecialContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getBunnySpecialContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useClaimRefundContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getClaimRefundContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useTradingCompetitionContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getTradingCompetitionContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useEasterNftContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getEasterNftContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useCakeVaultContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getCakeVaultContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const usePredictionsContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getPredictionsContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useChainlinkOracleContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getChainlinkOracleContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useSpecialBunnyCakeVaultContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getBunnySpecialCakeVaultContract(provider.getSigner()), [provider])\r\n}\r\n\r\nexport const useSpecialBunnyPredictionContract = () => {\r\n  const provider = useWeb3Provider()\r\n  return useMemo(() => getBunnySpecialPredictionContract(provider.getSigner()), [provider])\r\n}\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap/uikit'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apr?: number\r\n  displayApr?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, displayApr, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\r\n      tokenPrice={cakePrice.toNumber()}\r\n      apr={apr}\r\n      displayApr={displayApr}\r\n      linkHref={addLiquidityUrl}\r\n      isFarm\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import { useCallback } from 'react'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useHarvestFarm = (farmPid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    await harvestFarm(masterChefContract, farmPid)\r\n  }, [farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport default useHarvestFarm\r\n","import { useCallback } from 'react'\r\nimport { unstakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useUnstakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      await unstakeFarm(masterChefContract, pid, amount)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onUnstake: handleUnstake }\r\n}\r\n\r\nexport default useUnstakeFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Staked!'), t('Your funds have been staked in the farm'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get %symbol%', { symbol: tokenName })}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from '@pancakeswap/uikit'\r\nimport { ModalActions, ModalInput } from 'components/Modal'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useToast from 'hooks/useToast'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const { toastSuccess, toastError } = useToast()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onConfirm(val)\r\n              toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\r\n              onDismiss()\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import { useCallback } from 'react'\r\nimport { stakeFarm } from 'utils/calls'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useStakeFarms = (pid: number) => {\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stakeFarm(masterChefContract, pid, amount)\r\n      console.info(txHash)\r\n    },\r\n    [masterChefContract, pid],\r\n  )\r\n\r\n  return { onStake: handleStake }\r\n}\r\n\r\nexport default useStakeFarms\r\n","import { useCallback } from 'react'\r\nimport { ethers, Contract } from 'ethers'\r\nimport { useMasterchef } from 'hooks/useContract'\r\n\r\nconst useApproveFarm = (lpContract: Contract) => {\r\n  const masterChefContract = useMasterchef()\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await lpContract.approve(masterChefContract.address, ethers.constants.MaxUint256)\r\n      const receipt = await tx.wait()\r\n      return receipt.status\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [lpContract, masterChefContract])\r\n\r\n  return { onApprove: handleApprove }\r\n}\r\n\r\nexport default useApproveFarm\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingCake',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { Skeleton } from '@pancakeswap/uikit'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  tokenAddress?: Address\r\n  quoteTokenAddress?: Address\r\n  cakePrice: BigNumber\r\n  originalValue: number\r\n  fee?: string\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  tokenAddress,\r\n  quoteTokenAddress,\r\n  cakePrice,\r\n  originalValue,\r\n  fee,\r\n  hideButton = false,\r\n}) => {\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return originalValue !== 0 ? (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton\r\n              lpLabel={lpLabel}\r\n              cakePrice={cakePrice}\r\n              apr={originalValue}\r\n              displayApr={value}\r\n              addLiquidityUrl={addLiquidityUrl}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>\r\n          <Skeleton width={60} />\r\n        </AprWrapper>\r\n      )}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <AprWrapper>{originalValue}%</AprWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text } from '@pancakeswap/uikit'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { Token } from 'config/constants/types'\r\nimport TokenPairImage from 'components/TokenPairImage'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  token: Token\r\n  quoteToken: Token\r\n}\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst TokenWrapper = styled.div`\r\n  padding-right: 8px;\r\n  width: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ token, quoteToken, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\r\n          {t('Farming')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TokenWrapper>\r\n        <TokenPairImage variant=\"inverted\" primaryToken={token} secondaryToken={quoteToken} width={40} height={40} />\r\n      </TokenWrapper>\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton } from '@pancakeswap/uikit'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\ninterface EarnedPropsWithLoading extends EarnedProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\r\n  if (userDataReady) {\r\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\r\n  }\r\n  return (\r\n    <Amount earned={0}>\r\n      <Skeleton width={60} />\r\n    </Amount>\r\n  )\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && t('Details')}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <>\r\n      {t('The multiplier represents the amount of FARM rewards each farm gets.')}\r\n      <br />\r\n      <br />\r\n      {t('For example, if a 1x farm was getting 1 FARM per block, a 40x farm would be getting 40 FARM per block.')}\r\n    </>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface FeeProps {\r\n  fee: any\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Fee: React.FunctionComponent<FeeProps> = ({ fee }) => {\r\n  const displayFee = fee\r\n    // liquidity && liquidity.gt(0) ? (\r\n    //   `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    // ) : (\r\n    //   <Skeleton width={60} />\r\n    // )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayFee}%</Text>\r\n      </LiquidityWrapper>\r\n      {/* <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip} */}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Fee\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: BigNumber\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n    \r\n  const displayLiquidity =\r\n    liquidity && liquidity.gt(0) ? (\r\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    ) : (\r\n      <Skeleton width={60} />\r\n    )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('Total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n","import React, { useState } from 'react'\r\nimport { Button, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport Balance from 'components/Balance'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getBalanceAmount } from 'utils/formatBalance'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useHarvestFarm from '../../../hooks/useHarvestFarm'\r\n\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\r\n\r\ninterface HarvestActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\r\n  const { toastSuccess, toastError } = useToast()\r\n  const earningsBigNumber = new BigNumber(userData.earnings)\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = BIG_ZERO\r\n  let earningsBusd = 0\r\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\r\n\r\n  // If user didn't connect wallet default balance will be 0\r\n  if (!earningsBigNumber.isZero()) {\r\n    earnings = getBalanceAmount(earningsBigNumber)\r\n    earningsBusd = earnings.multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvestFarm(pid)\r\n  const { t } = useTranslation()\r\n  const dispatch = useAppDispatch()\r\n  const { account } = useWeb3React()\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n          FARM\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          {earningsBusd > 0 && (\r\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\r\n          )}\r\n        </div>\r\n        <Button\r\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            try {\r\n              await onReward()\r\n              toastSuccess(\r\n                `${t('Harvested')}!`,\r\n                t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'FARM' }),\r\n              )\r\n            } catch (e) {\r\n              toastError(\r\n                t('Error'),\r\n                t('Please try again. Confirm the transaction and make sure you are paying enough gas!'),\r\n              )\r\n              console.error(e)\r\n            } finally {\r\n              setPendingTx(false)\r\n            }\r\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport Balance from 'components/Balance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\r\nimport { fetchFarmUserDataAsync } from 'state/farms'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useERC20 } from 'hooks/useContract'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport { useAppDispatch } from 'state'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useUnstakeFarms from '../../../hooks/useUnstakeFarms'\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport useStakeFarms from '../../../hooks/useStakeFarms'\r\nimport useApproveFarm from '../../../hooks/useApproveFarm'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  userDataReady,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStakeFarms(pid)\r\n  const { onUnstake } = useUnstakeFarms(pid)\r\n  const location = useLocation()\r\n  const lpPrice = useLpTokenPrice(lpSymbol)\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  const handleStake = async (amount: string) => {\r\n    await onStake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const handleUnstake = async (amount: string) => {\r\n    await onUnstake(amount)\r\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n  }\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\r\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={handleStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={lpSymbol} />,\r\n  )\r\n  const lpContract = useERC20(lpAddress)\r\n  const dispatch = useAppDispatch()\r\n  const { onApprove } = useApproveFarm(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\r\n\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove, dispatch, account, pid])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\r\n              {lpSymbol}\r\n            </Text>\r\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n              {t('Staked')}\r\n            </Text>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance()}</Earned>\r\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\r\n                <Balance\r\n                  fontSize=\"12px\"\r\n                  color=\"textSubtle\"\r\n                  decimals={2}\r\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\r\n                  unit=\" USD\"\r\n                  prefix=\"~\"\r\n                />\r\n              )}\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton\r\n                variant=\"secondary\"\r\n                onClick={onPresentDeposit}\r\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n              >\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\r\n            {t('Stake').toUpperCase()}\r\n          </Text>\r\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\r\n            {lpSymbol}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n            {t('Start Farming')}\r\n          </Text>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Enable Farm')}\r\n        </Text>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from '@pancakeswap/uikit'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBscScanAddressUrl } from 'utils/bscscan'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\nimport Fee from '../Fee'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  userDataReady: boolean\r\n  expanded: boolean,\r\n  fee: any\r\n}\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 500px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 500px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ expanded }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  apr,\r\n  multiplier,\r\n  liquidity,\r\n  userDataReady,\r\n  expanded,\r\n  fee\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const isActive = farm.multiplier !== '0X'\r\n  const { quoteToken, token, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const lpAddress = getAddress(farm.lpAddresses)\r\n  const bsc = getBscScanAddressUrl(lpAddress)\r\n  const info = `https://pancakeswap.info/pool/${lpAddress}`\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <InfoContainer>\r\n        {isActive && (\r\n          <StakeContainer>\r\n            <StyledLinkExternal href={`https://exchange.pancakeswap.finance/#/add/${liquidityUrlPathParts}`}>\r\n              {t('Get %symbol%', { symbol: lpLabel })}\r\n            </StyledLinkExternal>\r\n          </StakeContainer>\r\n        )}\r\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{t('APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Fee')}</Text>\r\n          <Fee {...fee} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} userDataReady={userDataReady} />\r\n        <StakedAction {...farm} userDataReady={userDataReady} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport { useFarmUser } from 'state/hooks'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Fee, { FeeProps } from './Fee';\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  fee: FeeProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\ninterface RowPropsWithLoading extends RowProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n  fee: Fee\r\n}\r\n\r\n// console.log(\"cells...\",cells)\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.cardBorder};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\r\n  const { details, userDataReady } = props\r\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\r\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\r\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelExpanded(!actionPanelExpanded)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActionPanelExpanded(hasStakedAmount)\r\n  }, [hasStakedAmount])\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelExpanded} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} userDataReady={userDataReady} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelExpanded} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {shouldRenderChild && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  userDataReady: boolean\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns, userDataReady } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport ReactDatePicker, { ReactDatePickerProps } from 'react-datepicker'\r\nimport { Input, InputProps } from '@pancakeswap/uikit'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport interface DatePickerProps extends ReactDatePickerProps {\r\n  inputProps?: InputProps\r\n}\r\n\r\nconst DatePicker: React.FC<DatePickerProps> = ({ inputProps = {}, ...props }) => {\r\n  return (\r\n    <ReactDatePicker customInput={<Input {...inputProps} />} portalId=\"reactDatePicker\" dateFormat=\"PPP\" {...props} />\r\n  )\r\n}\r\n\r\nexport default DatePicker\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledDatePickerPortal = styled.div`\r\n  .react-datepicker-wrapper,\r\n  .react-datepicker__input-container {\r\n    display: block;\r\n  }\r\n\r\n  .react-datepicker {\r\n    background: ${({ theme }) => theme.card.background};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n    color: ${({ theme }) => theme.colors.text};\r\n    font-family: 'Kanit', sans-serif;\r\n  }\r\n\r\n  .react-datepicker__header {\r\n    background: ${({ theme }) => theme.colors.input};\r\n    border-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__current-month,\r\n  .react-datepicker-time__header,\r\n  .react-datepicker-year-header,\r\n  .react-datepicker__day-name,\r\n  .react-datepicker__day,\r\n  .react-datepicker__time-name {\r\n    color: ${({ theme }) => theme.colors.text};\r\n  }\r\n\r\n  .react-datepicker__day:hover,\r\n  .react-datepicker__month-text:hover,\r\n  .react-datepicker__quarter-text:hover,\r\n  .react-datepicker__year-text:hover {\r\n    background-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\r\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\r\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\r\n  }\r\n\r\n  .react-datepicker__day--selected,\r\n  .react-datepicker__day--in-selecting-range,\r\n  .react-datepicker__day--in-range,\r\n  .react-datepicker__month-text--selected,\r\n  .react-datepicker__month-text--in-selecting-range,\r\n  .react-datepicker__month-text--in-range,\r\n  .react-datepicker__quarter-text--selected,\r\n  .react-datepicker__quarter-text--in-selecting-range,\r\n  .react-datepicker__quarter-text--in-range,\r\n  .react-datepicker__year-text--selected,\r\n  .react-datepicker__year-text--in-selecting-range,\r\n  .react-datepicker__year-text--in-range {\r\n    background-color: ${({ theme }) => theme.colors.primary};\r\n  }\r\n\r\n  .react-datepicker__day--selected:hover,\r\n  .react-datepicker__day--in-selecting-range:hover,\r\n  .react-datepicker__day--in-range:hover,\r\n  .react-datepicker__month-text--selected:hover,\r\n  .react-datepicker__month-text--in-selecting-range:hover,\r\n  .react-datepicker__month-text--in-range:hover,\r\n  .react-datepicker__quarter-text--selected:hover,\r\n  .react-datepicker__quarter-text--in-selecting-range:hover,\r\n  .react-datepicker__quarter-text--in-range:hover,\r\n  .react-datepicker__year-text--selected:hover,\r\n  .react-datepicker__year-text--in-selecting-range:hover,\r\n  .react-datepicker__year-text--in-range:hover {\r\n    background-color: ${({ theme }) => theme.colors.primaryBright};\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected,\r\n  .react-datepicker__month-text--keyboard-selected,\r\n  .react-datepicker__quarter-text--keyboard-selected,\r\n  .react-datepicker__year-text--keyboard-selected {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__day--keyboard-selected:hover,\r\n  .react-datepicker__month-text--keyboard-selected:hover,\r\n  .react-datepicker__quarter-text--keyboard-selected:hover,\r\n  .react-datepicker__year-text--keyboard-selected:hover {\r\n    background-color: ${({ theme }) => theme.colors.secondary};\r\n    color: #ffffff;\r\n  }\r\n\r\n  .react-datepicker__time-container,\r\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\r\n    width: 120px;\r\n  }\r\n\r\n  .react-datepicker__header--time {\r\n    padding: 8px;\r\n  }\r\n\r\n  .react-datepicker__time-container\r\n    .react-datepicker__time\r\n    .react-datepicker__time-box\r\n    ul.react-datepicker__time-list\r\n    li.react-datepicker__time-list-item {\r\n    height: auto;\r\n    padding: 8px;\r\n  }\r\n`\r\n\r\nconst DatePickerPortal = () => {\r\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\r\n}\r\n\r\nexport default DatePickerPortal\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport DatePicker, { DatePickerProps } from './DatePicker'\r\n\r\nconst TimePicker: React.FC<DatePickerProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <DatePicker\r\n      showTimeSelect\r\n      showTimeSelectOnly\r\n      timeIntervals={15}\r\n      timeCaption={t('Time')}\r\n      dateFormat=\"ppp\"\r\n      {...props}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TimePicker\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport { useDispatch } from 'react-redux'\r\nimport farmsReducer from './farms'\r\nimport poolsReducer from './pools'\r\nimport predictionsReducer from './predictions'\r\nimport profileReducer from './profile'\r\nimport teamsReducer from './teams'\r\nimport achievementsReducer from './achievements'\r\nimport blockReducer from './block'\r\nimport collectiblesReducer from './collectibles'\r\nimport votingReducer from './voting'\r\nimport lotteryReducer from './lottery'\r\n\r\nconst store = configureStore({\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  reducer: {\r\n    achievements: achievementsReducer,\r\n    block: blockReducer,\r\n    farms: farmsReducer,\r\n    pools: poolsReducer,\r\n    predictions: predictionsReducer,\r\n    profile: profileReducer,\r\n    teams: teamsReducer,\r\n    collectibles: collectiblesReducer,\r\n    voting: votingReducer,\r\n    lottery: lotteryReducer,\r\n  },\r\n})\r\n\r\n/**\r\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\r\n */\r\nexport type AppDispatch = typeof store.dispatch\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport default store\r\n","import { ThunkAction } from 'redux-thunk'\r\nimport { AnyAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { CampaignType, FarmConfig, LotteryStatus, LotteryTicket, Nft, PoolConfig, Team } from 'config/constants/types'\r\n\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\r\n\r\nexport interface BigNumberToJson {\r\n  type: 'BigNumber'\r\n  hex: string\r\n}\r\n\r\nexport type TranslatableText =\r\n  | string\r\n  | {\r\n      key: string\r\n      data?: {\r\n        [key: string]: string | number\r\n      }\r\n    }\r\n\r\nexport type SerializedBigNumber = string\r\n\r\nexport interface Farm extends FarmConfig {\r\n  tokenAmountMc?: SerializedBigNumber\r\n  quoteTokenAmountMc?: SerializedBigNumber\r\n  tokenAmountTotal?: SerializedBigNumber\r\n  quoteTokenAmountTotal?: SerializedBigNumber\r\n  lpTotalInQuoteToken?: SerializedBigNumber\r\n  lpTotalSupply?: SerializedBigNumber\r\n  tokenPriceVsQuote?: SerializedBigNumber\r\n  poolWeight?: SerializedBigNumber\r\n  userData?: {\r\n    allowance: string\r\n    tokenBalance: string\r\n    stakedBalance: string\r\n    earnings: string\r\n  }\r\n}\r\n\r\nexport interface Pool extends PoolConfig {\r\n  totalStaked?: BigNumber\r\n  stakingLimit?: BigNumber\r\n  startBlock?: number\r\n  endBlock?: number\r\n  apr?: number\r\n  stakingTokenPrice?: number\r\n  earningTokenPrice?: number\r\n  isAutoVault?: boolean\r\n  userData?: {\r\n    allowance: BigNumber\r\n    stakingTokenBalance: BigNumber\r\n    stakedBalance: BigNumber\r\n    pendingReward: BigNumber\r\n  }\r\n}\r\n\r\nexport interface Profile {\r\n  userId: number\r\n  points: number\r\n  teamId: number\r\n  nftAddress: string\r\n  tokenId: number\r\n  isActive: boolean\r\n  username: string\r\n  nft?: Nft\r\n  team: Team\r\n  hasRegistered: boolean\r\n}\r\n\r\n// Slices states\r\n\r\nexport interface FarmsState {\r\n  data: Farm[]\r\n  loadArchivedFarmsData: boolean\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface VaultFees {\r\n  performanceFee: number\r\n  callFee: number\r\n  withdrawalFee: number\r\n  withdrawalFeePeriod: number\r\n}\r\n\r\nexport interface VaultUser {\r\n  isLoading: boolean\r\n  userShares: string\r\n  cakeAtLastUserAction: string\r\n  lastDepositedTime: string\r\n  lastUserActionTime: string\r\n}\r\nexport interface CakeVault {\r\n  totalShares?: string\r\n  pricePerFullShare?: string\r\n  totalCakeInVault?: string\r\n  estimatedCakeBountyReward?: string\r\n  totalPendingCakeHarvest?: string\r\n  fees?: VaultFees\r\n  userData?: VaultUser\r\n}\r\n\r\nexport interface PoolsState {\r\n  data: Pool[]\r\n  cakeVault: CakeVault\r\n  userDataLoaded: boolean\r\n}\r\n\r\nexport interface ProfileState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  hasRegistered: boolean\r\n  data: Profile\r\n}\r\n\r\nexport type TeamResponse = {\r\n  0: string\r\n  1: string\r\n  2: string\r\n  3: string\r\n  4: boolean\r\n}\r\n\r\nexport type TeamsById = {\r\n  [key: string]: Team\r\n}\r\n\r\nexport interface TeamsState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: TeamsById\r\n}\r\n\r\nexport interface Achievement {\r\n  id: string\r\n  type: CampaignType\r\n  address: string\r\n  title: TranslatableText\r\n  description?: TranslatableText\r\n  badge: string\r\n  points: number\r\n}\r\n\r\nexport interface AchievementState {\r\n  data: Achievement[]\r\n}\r\n\r\n// Block\r\n\r\nexport interface BlockState {\r\n  currentBlock: number\r\n  initialBlock: number\r\n}\r\n\r\n// Collectibles\r\n\r\nexport interface CollectiblesState {\r\n  isInitialized: boolean\r\n  isLoading: boolean\r\n  data: {\r\n    [key: string]: number[]\r\n  }\r\n}\r\n\r\n// Predictions\r\n\r\nexport enum BetPosition {\r\n  BULL = 'Bull',\r\n  BEAR = 'Bear',\r\n  HOUSE = 'House',\r\n}\r\n\r\nexport enum PredictionStatus {\r\n  INITIAL = 'initial',\r\n  LIVE = 'live',\r\n  PAUSED = 'paused',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface Round {\r\n  id: string\r\n  epoch: number\r\n  failed?: boolean\r\n  startBlock: number\r\n  startAt: number\r\n  lockAt: number\r\n  lockBlock: number\r\n  lockPrice: number\r\n  endBlock: number\r\n  closePrice: number\r\n  totalBets: number\r\n  totalAmount: number\r\n  bullBets: number\r\n  bearBets: number\r\n  bearAmount: number\r\n  bullAmount: number\r\n  position: BetPosition\r\n  bets?: Bet[]\r\n}\r\n\r\nexport interface Market {\r\n  paused: boolean\r\n  epoch: number\r\n}\r\n\r\nexport interface Bet {\r\n  id?: string\r\n  hash?: string\r\n  amount: number\r\n  position: BetPosition\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: PredictionUser\r\n  round: Round\r\n}\r\n\r\nexport interface PredictionUser {\r\n  id: string\r\n  address: string\r\n  block: number\r\n  totalBets: number\r\n  totalBNB: number\r\n}\r\n\r\nexport interface HistoryData {\r\n  [key: string]: Bet[]\r\n}\r\n\r\nexport enum HistoryFilter {\r\n  ALL = 'all',\r\n  COLLECTED = 'collected',\r\n  UNCOLLECTED = 'uncollected',\r\n}\r\n\r\nexport interface LedgerData {\r\n  [key: string]: {\r\n    [key: string]: ReduxNodeLedger\r\n  }\r\n}\r\n\r\nexport interface RoundData {\r\n  [key: string]: ReduxNodeRound\r\n}\r\n\r\nexport interface ReduxNodeLedger {\r\n  position: BetPosition\r\n  amount: BigNumberToJson\r\n  claimed: boolean\r\n}\r\n\r\nexport interface NodeLedger {\r\n  position: BetPosition\r\n  amount: ethers.BigNumber\r\n  claimed: boolean\r\n}\r\n\r\nexport interface ReduxNodeRound {\r\n  epoch: number\r\n  startBlock: number\r\n  lockBlock: number | null\r\n  endBlock: number | null\r\n  lockPrice: BigNumberToJson | null\r\n  closePrice: BigNumberToJson | null\r\n  totalAmount: BigNumberToJson\r\n  bullAmount: BigNumberToJson\r\n  bearAmount: BigNumberToJson\r\n  rewardBaseCalAmount: BigNumberToJson\r\n  rewardAmount: BigNumberToJson\r\n  oracleCalled: boolean\r\n}\r\n\r\nexport interface NodeRound {\r\n  epoch: number\r\n  startBlock: number\r\n  lockBlock: number\r\n  endBlock: number\r\n  lockPrice: ethers.BigNumber\r\n  closePrice: ethers.BigNumber\r\n  totalAmount: ethers.BigNumber\r\n  bullAmount: ethers.BigNumber\r\n  bearAmount: ethers.BigNumber\r\n  rewardBaseCalAmount: ethers.BigNumber\r\n  rewardAmount: ethers.BigNumber\r\n  oracleCalled: boolean\r\n}\r\n\r\nexport interface PredictionsState {\r\n  status: PredictionStatus\r\n  isLoading: boolean\r\n  isHistoryPaneOpen: boolean\r\n  isChartPaneOpen: boolean\r\n  isFetchingHistory: boolean\r\n  historyFilter: HistoryFilter\r\n  currentEpoch: number\r\n  currentRoundStartBlockNumber: number\r\n  intervalBlocks: number\r\n  bufferBlocks: number\r\n  minBetAmount: string\r\n  rewardRate: number\r\n  lastOraclePrice: string\r\n  history: HistoryData\r\n  rounds?: RoundData\r\n  ledgers?: LedgerData\r\n  claimableStatuses: {\r\n    [key: string]: boolean\r\n  }\r\n}\r\n\r\n// Voting\r\n\r\n/* eslint-disable camelcase */\r\n/**\r\n * @see https://hub.snapshot.page/graphql\r\n */\r\nexport interface VoteWhere {\r\n  id?: string\r\n  id_in?: string[]\r\n  voter?: string\r\n  voter_in?: string[]\r\n  proposal?: string\r\n  proposal_in?: string[]\r\n}\r\n\r\nexport enum SnapshotCommand {\r\n  PROPOSAL = 'proposal',\r\n  VOTE = 'vote',\r\n}\r\n\r\nexport enum ProposalType {\r\n  ALL = 'all',\r\n  CORE = 'core',\r\n  COMMUNITY = 'community',\r\n}\r\n\r\nexport enum ProposalState {\r\n  ACTIVE = 'active',\r\n  PENDING = 'pending',\r\n  CLOSED = 'closed',\r\n}\r\n\r\nexport interface Space {\r\n  id: string\r\n  name: string\r\n}\r\n\r\nexport interface Proposal {\r\n  author: string\r\n  body: string\r\n  choices: string[]\r\n  end: number\r\n  id: string\r\n  snapshot: string\r\n  space: Space\r\n  start: number\r\n  state: ProposalState\r\n  title: string\r\n}\r\n\r\nexport interface Vote {\r\n  id: string\r\n  voter: string\r\n  created: number\r\n  space: Space\r\n  proposal: {\r\n    choices: Proposal['choices']\r\n  }\r\n  choice: number\r\n  metadata?: {\r\n    votingPower: string\r\n    verificationHash: string\r\n  }\r\n  _inValid?: boolean\r\n}\r\n\r\nexport enum VotingStateLoadingStatus {\r\n  INITIAL = 'initial',\r\n  IDLE = 'idle',\r\n  LOADING = 'loading',\r\n  ERROR = 'error',\r\n}\r\n\r\nexport interface VotingState {\r\n  proposalLoadingStatus: VotingStateLoadingStatus\r\n  proposals: {\r\n    [key: string]: Proposal\r\n  }\r\n  voteLoadingStatus: VotingStateLoadingStatus\r\n  votes: {\r\n    [key: string]: Vote[]\r\n  }\r\n}\r\n\r\nexport interface LotteryRoundUserTickets {\r\n  isLoading?: boolean\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\ninterface LotteryRoundGenerics {\r\n  isLoading?: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  startTime: string\r\n  endTime: string\r\n  treasuryFee: string\r\n  firstTicketId: string\r\n  lastTicketId: string\r\n  finalNumber: number\r\n}\r\n\r\nexport interface LotteryRound extends LotteryRoundGenerics {\r\n  userTickets?: LotteryRoundUserTickets\r\n  priceTicketInCake: BigNumber\r\n  discountDivisor: BigNumber\r\n  amountCollectedInCake: BigNumber\r\n  cakePerBracket: string[]\r\n  countWinnersPerBracket: string[]\r\n  rewardsBreakdown: string[]\r\n}\r\n\r\nexport interface LotteryResponse extends LotteryRoundGenerics {\r\n  priceTicketInCake: SerializedBigNumber\r\n  discountDivisor: SerializedBigNumber\r\n  amountCollectedInCake: SerializedBigNumber\r\n  cakePerBracket: SerializedBigNumber[]\r\n  countWinnersPerBracket: SerializedBigNumber[]\r\n  rewardsBreakdown: SerializedBigNumber[]\r\n}\r\n\r\nexport interface LotteryState {\r\n  currentLotteryId: string\r\n  maxNumberTicketsPerBuyOrClaim: string\r\n  isTransitioning: boolean\r\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\r\n  lotteriesData?: LotteryRoundGraphEntity[]\r\n  userLotteryData?: LotteryUserGraphEntity\r\n}\r\n\r\nexport interface LotteryRoundGraphEntity {\r\n  id: string\r\n  totalUsers: string\r\n  totalTickets: string\r\n  winningTickets: string\r\n  status: LotteryStatus\r\n  finalNumber: string\r\n  startTime: string\r\n  endTime: string\r\n  ticketPrice: SerializedBigNumber\r\n}\r\n\r\nexport interface LotteryUserGraphEntity {\r\n  account: string\r\n  totalCake: string\r\n  totalTickets: string\r\n  rounds: UserRound[]\r\n}\r\n\r\nexport interface UserRound {\r\n  claimed: boolean\r\n  lotteryId: string\r\n  status: LotteryStatus\r\n  endTime: string\r\n  totalTickets: string\r\n  tickets?: LotteryTicket[]\r\n}\r\n\r\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\r\n\r\n// Global state\r\n\r\nexport interface State {\r\n  achievements: AchievementState\r\n  block: BlockState\r\n  farms: FarmsState\r\n  pools: PoolsState\r\n  predictions: PredictionsState\r\n  profile: ProfileState\r\n  teams: TeamsState\r\n  collectibles: CollectiblesState\r\n  voting: VotingState\r\n  lottery: LotteryState\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { Pool } from 'state/types'\r\nimport { getRoi, tokenEarnedPerThousandDollarsCompounding } from 'utils/compoundApyHelpers'\r\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\r\n\r\nexport const convertSharesToCake = (\r\n  shares: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\r\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\r\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\r\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\r\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\r\n}\r\n\r\nexport const convertCakeToShares = (\r\n  cake: BigNumber,\r\n  cakePerFullShare: BigNumber,\r\n  decimals = 18,\r\n  decimalsToRound = 3,\r\n) => {\r\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\r\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\r\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\r\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\r\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\r\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\r\n}\r\n\r\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 288\r\nconst MANUAL_POOL_COMPOUND_FREQUENCY = 1\r\n\r\nexport const getAprData = (pool: Pool, performanceFee: number) => {\r\n  const { isAutoVault, earningTokenPrice, apr } = pool\r\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\r\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\r\n  const roundingDecimals = isHighValueToken ? 4 : 2\r\n\r\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\r\n  const compoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_COMPOUND_FREQUENCY\r\n\r\n  if (isAutoVault) {\r\n    const oneThousandDollarsWorthOfToken = 1000 / earningTokenPrice\r\n    const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\r\n      numberOfDays: 365,\r\n      farmApr: apr,\r\n      tokenPrice: earningTokenPrice,\r\n      roundingDecimals,\r\n      compoundFrequency,\r\n      performanceFee,\r\n    })\r\n    const autoApr = getRoi({\r\n      amountEarned: tokenEarnedPerThousand365D,\r\n      amountInvested: oneThousandDollarsWorthOfToken,\r\n    })\r\n    return { apr: autoApr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n  }\r\n  return { apr, isHighValueToken, roundingDecimals, compoundFrequency }\r\n}\r\n\r\nexport const getCakeVaultEarnings = (\r\n  account: string,\r\n  cakeAtLastUserAction: BigNumber,\r\n  userShares: BigNumber,\r\n  pricePerFullShare: BigNumber,\r\n  earningTokenPrice: number,\r\n) => {\r\n  const hasAutoEarnings =\r\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\r\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\r\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\r\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\r\n\r\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\r\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\r\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\r\n}\r\n\r\nexport const getPoolBlockInfo = (pool: Pool, currentBlock: number) => {\r\n  const { startBlock, endBlock, isFinished } = pool\r\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\r\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\r\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\r\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\r\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\r\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\r\n}\r\n","export default {\r\n  masterChef: {\r\n    80001: '0x1a112E814fF4B4fAdeEa57A30BD00B341776F901',\r\n    137: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\r\n  },\r\n  sousChef: {\r\n    80001: '0x6852B0D48D8D1f72B403f1f3c5a1AD8E971DE096',\r\n    137: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n  },\r\n  lotteryV2: {\r\n    80001: '0x14d4649C319678B2e13EA76097Cd6360E2C23841',\r\n    137: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  multiCall: {\r\n    137: '0x40524425bcb58Dc16f11746B0028e23aCDA1e128',\r\n    80001: '0x1607D729E881d64413D6Cc0e3DaB5d72A84B55Af',\r\n  },\r\n  pancakeProfile: {\r\n    137: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  pancakeRabbits: {\r\n    137: '0xDf7952B35f24aCF7fC0487D01c8d13790a60DBa07',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  bunnyFactory: {\r\n    137: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  claimRefund: {\r\n    137: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  pointCenterIfo: {\r\n    137: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  bunnySpecial: {\r\n    137: '0xFee8A195570a18461146F401d6033f5ab3380849',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  tradingCompetition: {\r\n    137: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  easterNft: {\r\n    137: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\r\n    80001: '0x5aF6D33DE2ccEC94efb1bDF8f92Bd58085432d2c',\r\n  },\r\n  cakeVault: {\r\n    137: '0xa80240Eb5d7E05d3F250cF000eEc0891d00b51CC',\r\n    80001: '0xEb67a9300ebE4c4a6657F832933632715D1bAA6a',\r\n  },\r\n  predictions: {\r\n    137: '0x516ffd7D1e0Ca40b1879935B2De87cb20Fc1124b',\r\n    80001: '0xb1A2455395b9eed82FfB7623F85e572431E89940',\r\n  },\r\n  chainlinkOracle: {\r\n    137: '0x01377F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\r\n    80001: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n  },\r\n  bunnySpecialCakeVault: {\r\n    137: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\r\n    80001: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n  },\r\n  bunnySpecialPrediction: {\r\n    137: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n    80001: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\r\n  },\r\n  preFarm : {\r\n    137: '',\r\n    80001: '0x78536735F2725323DC6Bf32260dcE014fEab5E20',\r\n  },\r\n  preFarmReedem : {\r\n    137: '',\r\n    80001: '0xAc004e6C5FB7449EE0e9ae96A17F11F4915ecE12',\r\n  }\r\n}\r\n","import { useContext } from 'react'\r\nimport { ToastsContext } from 'contexts/ToastsContext'\r\n\r\nconst useToast = () => {\r\n  const toastContext = useContext(ToastsContext)\r\n\r\n  if (toastContext === undefined) {\r\n    throw new Error('Toasts context undefined')\r\n  }\r\n\r\n  return toastContext\r\n}\r\n\r\nexport default useToast\r\n","const tokens = {\r\n  bnb: {\r\n    symbol: 'BNB',\r\n    projectLink: 'https://www.binance.com/',\r\n  },\r\n  cake: {\r\n    symbol: 'FARM',\r\n    address: {\r\n      137: '0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82',\r\n      80001: '0x09A5aEc2D8637EDA36110AcF722363f2d6036e0c',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n//   chess: {\r\n//     symbol: 'CHESS',\r\n//     address: {\r\n//       56: '0x20de22029ab63cf9A7Cf5fEB2b737Ca1eE4c82A6',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://tranchess.com/',\r\n//   },\r\n//   titan: {\r\n//     symbol: 'TITAN',\r\n//     address: {\r\n//       56: '0xe898EDc43920F357A93083F1d4460437dE6dAeC2',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://titanswap.org',\r\n//   },\r\n//   harmony: {\r\n//     symbol: 'ONE',\r\n//     address: {\r\n//       56: '0x03fF0ff224f904be3118461335064bB48Df47938',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.harmony.one/',\r\n//   },\r\n//   mask: {\r\n//     symbol: 'MASK',\r\n//     address: {\r\n//       56: '0x2eD9a5C8C13b93955103B9a7C167B67Ef4d568a3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mask.io/',\r\n//   },\r\n//   dvi: {\r\n//     symbol: 'DVI',\r\n//     address: {\r\n//       56: '0x758FB037A375F17c7e195CC634D77dA4F554255B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dvision.network/',\r\n//   },\r\n//   adx: {\r\n//     symbol: 'ADX',\r\n//     address: {\r\n//       56: '0x6bfF4Fb161347ad7de4A625AE5aa3A1CA7077819',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.adex.network',\r\n//   },\r\n//   bscpad: {\r\n//     symbol: 'BSCPAD',\r\n//     address: {\r\n//       56: '0x5A3010d4d8D3B5fB49f8B6E57FB9E48063f16700',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bscpad.com/',\r\n//   },\r\n//   rabbit: {\r\n//     symbol: 'RABBIT',\r\n//     address: {\r\n//       56: '0x95a1199EBA84ac5f19546519e287d43D2F0E1b41',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://rabbitfinance.io/earn',\r\n//   },\r\n//   form: {\r\n//     symbol: 'FORM',\r\n//     address: {\r\n//       56: '0x25A528af62e56512A19ce8c3cAB427807c28CC19',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://formation.fi/',\r\n//   },\r\n//   txl: {\r\n//     symbol: 'TXL',\r\n//     address: {\r\n//       56: '0x1FFD0b47127fdd4097E54521C9E2c7f0D66AafC5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://tixl.org/',\r\n//   },\r\n//   orbs: {\r\n//     symbol: 'ORBS',\r\n//     address: {\r\n//       56: '0xeBd49b26169e1b52c04cFd19FCf289405dF55F80',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.orbs.com/',\r\n//   },\r\n//   cos: {\r\n//     symbol: 'COS',\r\n//     address: {\r\n//       56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.contentos.io/',\r\n//   },\r\n//   bunny: {\r\n//     symbol: 'BUNNY',\r\n//     address: {\r\n//       56: '0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://pancakebunny.finance/',\r\n//   },\r\n//   alice: {\r\n//     symbol: 'ALICE',\r\n//     address: {\r\n//       56: '0xAC51066d7bEC65Dc4589368da368b212745d63E8',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://www.myneighboralice.com/',\r\n//   },\r\n//   for: {\r\n//     symbol: 'FOR',\r\n//     address: {\r\n//       56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.for.tube/home',\r\n//   },\r\n//   bux: {\r\n//     symbol: 'BUX',\r\n//     address: {\r\n//       56: '0x211FfbE424b90e25a15531ca322adF1559779E45',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://getbux.com/bux-crypto/',\r\n//   },\r\n//   nuls: {\r\n//     symbol: 'NULS',\r\n//     address: {\r\n//       56: '0x8CD6e29d3686d24d3C2018CEe54621eA0f89313B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://www.nuls.io/',\r\n//   },\r\n//   belt: {\r\n//     symbol: 'BELT',\r\n//     address: {\r\n//       56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://beta.belt.fi/',\r\n//   },\r\n//   ramp: {\r\n//     symbol: 'RAMP',\r\n//     address: {\r\n//       56: '0x8519EA49c997f50cefFa444d240fB655e89248Aa',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://rampdefi.com/',\r\n//   },\r\n//   bfi: {\r\n//     symbol: 'BFI',\r\n//     address: {\r\n//       56: '0x81859801b01764D4f0Fa5E64729f5a6C3b91435b',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bearn.fi/',\r\n//   },\r\n//   dexe: {\r\n//     symbol: 'DEXE',\r\n//     address: {\r\n//       56: '0x039cB485212f996A9DBb85A9a75d898F94d38dA6',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dexe.network/',\r\n//   },\r\n//   bel: {\r\n//     symbol: 'BEL',\r\n//     address: {\r\n//       56: '0x8443f091997f06a61670B735ED92734F5628692F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bella.fi/',\r\n//   },\r\n//   tpt: {\r\n//     symbol: 'TPT',\r\n//     address: {\r\n//       56: '0xECa41281c24451168a37211F0bc2b8645AF45092',\r\n//       97: '',\r\n//     },\r\n//     decimals: 4,\r\n//     projectLink: 'https://www.tokenpocket.pro/',\r\n//   },\r\n//   watch: {\r\n//     symbol: 'WATCH',\r\n//     address: {\r\n//       56: '0x7A9f28EB62C791422Aa23CeAE1dA9C847cBeC9b0',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://yieldwatch.net/',\r\n//   },\r\n//   xmark: {\r\n//     symbol: 'xMARK',\r\n//     address: {\r\n//       56: '0x26A5dFab467d4f58fB266648CAe769503CEC9580',\r\n//       97: '',\r\n//     },\r\n//     decimals: 9,\r\n//     projectLink: 'https://benchmarkprotocol.finance/',\r\n//   },\r\n//   bmxx: {\r\n//     symbol: 'bMXX',\r\n//     address: {\r\n//       56: '0x4131b87F74415190425ccD873048C708F8005823',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://multiplier.finance/',\r\n//   },\r\n//   iotx: {\r\n//     symbol: 'IOTX',\r\n//     address: {\r\n//       56: '0x9678E42ceBEb63F23197D726B29b1CB20d0064E5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://iotex.io/',\r\n//   },\r\n//   bor: {\r\n//     symbol: 'BOR',\r\n//     address: {\r\n//       56: '0x92D7756c60dcfD4c689290E8A9F4d263b3b32241',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.boringdao.com/',\r\n//   },\r\n//   bopen: {\r\n//     symbol: 'bOPEN',\r\n//     address: {\r\n//       56: '0xF35262a9d427F96d2437379eF090db986eaE5d42',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://opendao.io/',\r\n//   },\r\n//   dodo: {\r\n//     symbol: 'DODO',\r\n//     address: {\r\n//       56: '0x67ee3Cb086F8a16f34beE3ca72FAD36F7Db929e2',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dodoex.io/',\r\n//   },\r\n//   swingby: {\r\n//     symbol: 'SWINGBY',\r\n//     address: {\r\n//       56: '0x71DE20e0C4616E7fcBfDD3f875d568492cBE4739',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://swingby.network/',\r\n//   },\r\n//   bry: {\r\n//     symbol: 'BRY',\r\n//     address: {\r\n//       56: '0xf859Bf77cBe8699013d6Dbc7C2b926Aaf307F830',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://berrydata.co/',\r\n//   },\r\n//   zee: {\r\n//     symbol: 'ZEE',\r\n//     address: {\r\n//       56: '0x44754455564474A89358B2C2265883DF993b12F0',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://zeroswap.io/',\r\n//   },\r\n//   swgb: {\r\n//     symbol: 'SWGb',\r\n//     address: {\r\n//       56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://swirgepay.com/',\r\n//   },\r\n//   swg: {\r\n//     symbol: 'SWG',\r\n//     address: {\r\n//       56: '0xe792f64C582698b8572AAF765bDC426AC3aEfb6B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://swirgepay.com/',\r\n//   },\r\n//   sfp: {\r\n//     symbol: 'SFP',\r\n//     address: {\r\n//       56: '0xD41FDb03Ba84762dD66a0af1a6C8540FF1ba5dfb',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.safepal.io/',\r\n//   },\r\n//   lina: {\r\n//     symbol: 'LINA',\r\n//     address: {\r\n//       56: '0x762539b45A1dCcE3D36d080F74d1AED37844b878',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://linear.finance/',\r\n//   },\r\n//   lit: {\r\n//     symbol: 'LIT',\r\n//     address: {\r\n//       56: '0xb59490aB09A0f526Cc7305822aC65f2Ab12f9723',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.litentry.com/',\r\n//   },\r\n//   hget: {\r\n//     symbol: 'HGET',\r\n//     address: {\r\n//       56: '0xC7d8D35EBA58a0935ff2D5a33Df105DD9f071731',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://www.hedget.com/',\r\n//   },\r\n//   bdo: {\r\n//     symbol: 'BDO',\r\n//     address: {\r\n//       56: '0x190b589cf9Fb8DDEabBFeae36a813FFb2A702454',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bdollar.fi/',\r\n//   },\r\n//   egld: {\r\n//     symbol: 'EGLD',\r\n//     address: {\r\n//       56: '0xbF7c81FFF98BbE61B40Ed186e4AfD6DDd01337fe',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://elrond.com/',\r\n//   },\r\n//   ust: {\r\n//     symbol: 'UST',\r\n//     address: {\r\n//       56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   wsote: {\r\n//     symbol: 'wSOTE',\r\n//     address: {\r\n//       56: '0x541E619858737031A1244A5d0Cd47E5ef480342c',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://soteria.finance/#/',\r\n//   },\r\n//   front: {\r\n//     symbol: 'FRONT',\r\n//     address: {\r\n//       56: '0x928e55daB735aa8260AF3cEDadA18B5f70C72f1b',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://frontier.xyz/',\r\n//   },\r\n//   helmet: {\r\n//     symbol: 'Helmet',\r\n//     address: {\r\n//       56: '0x948d2a81086A075b3130BAc19e4c6DEe1D2E3fE8',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.helmet.insure/',\r\n//   },\r\n//   btcst: {\r\n//     symbol: 'BTCST',\r\n//     address: {\r\n//       56: '0x78650B139471520656b9E7aA7A5e9276814a38e9',\r\n//       97: '',\r\n//     },\r\n//     decimals: 17,\r\n//     projectLink: 'https://www.1-b.tc/',\r\n//   },\r\n//   bscx: {\r\n//     symbol: 'BSCX',\r\n//     address: {\r\n//       56: '0x5Ac52EE5b2a633895292Ff6d8A89bB9190451587',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bscex.org/',\r\n//   },\r\n//   ten: {\r\n//     symbol: 'TEN',\r\n//     address: {\r\n//       56: '0xdFF8cb622790b7F92686c722b02CaB55592f152C',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.tenet.farm/',\r\n//   },\r\n//   balbt: {\r\n//     symbol: 'bALBT',\r\n//     address: {\r\n//       56: '0x72fAa679E1008Ad8382959FF48E392042A8b06f7',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://allianceblock.io/',\r\n//   },\r\n//   asr: {\r\n//     symbol: 'ASR',\r\n//     address: {\r\n//       56: '0x80D5f92C2c8C682070C95495313dDB680B267320',\r\n//       97: '',\r\n//     },\r\n//     decimals: 2,\r\n//     projectLink: 'https://www.chiliz.com',\r\n//   },\r\n//   atm: {\r\n//     symbol: 'ATM',\r\n//     address: {\r\n//       56: '0x25E9d05365c867E59C1904E7463Af9F312296f9E',\r\n//       97: '',\r\n//     },\r\n//     decimals: 2,\r\n//     projectLink: 'https://www.chiliz.com',\r\n//   },\r\n//   og: {\r\n//     symbol: 'OG',\r\n//     address: {\r\n//       56: '0xf05E45aD22150677a017Fbd94b84fBB63dc9b44c',\r\n//       97: '',\r\n//     },\r\n//     decimals: 2,\r\n//     projectLink: 'https://www.chiliz.com',\r\n//   },\r\n//   reef: {\r\n//     symbol: 'REEF',\r\n//     address: {\r\n//       56: '0xF21768cCBC73Ea5B6fd3C687208a7c2def2d966e',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://reef.finance/',\r\n//   },\r\n//   ditto: {\r\n//     symbol: 'DITTO',\r\n//     address: {\r\n//       56: '0x233d91A0713155003fc4DcE0AFa871b508B3B715',\r\n//       97: '',\r\n//     },\r\n//     decimals: 9,\r\n//     projectLink: 'https://ditto.money/',\r\n//   },\r\n//   juv: {\r\n//     symbol: 'JUV',\r\n//     address: {\r\n//       56: '0xC40C9A843E1c6D01b7578284a9028854f6683b1B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 2,\r\n//     projectLink: 'https://www.chiliz.com',\r\n//   },\r\n//   psg: {\r\n//     symbol: 'PSG',\r\n//     address: {\r\n//       56: '0xBc5609612b7C44BEf426De600B5fd1379DB2EcF1',\r\n//       97: '',\r\n//     },\r\n//     decimals: 2,\r\n//     projectLink: 'https://www.chiliz.com',\r\n//   },\r\n//   vai: {\r\n//     symbol: 'VAI',\r\n//     address: {\r\n//       56: '0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://venus.io/',\r\n//   },\r\n  wbnb: {\r\n    symbol: 'wBNB',\r\n    address: {\r\n      137: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\r\n      80001: '0x9c3c9283d3e44854697cd22d3faa240cfb032889',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n//   blink: {\r\n//     symbol: 'BLINK',\r\n//     address: {\r\n//       56: '0x63870A18B6e42b01Ef1Ad8A2302ef50B7132054F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://blink.wink.org',\r\n//   },\r\n//   unfi: {\r\n//     symbol: 'UNFI',\r\n//     address: {\r\n//       56: '0x728C5baC3C3e370E372Fc4671f9ef6916b814d8B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://unifiprotocol.com',\r\n//   },\r\n//   twt: {\r\n//     symbol: 'TWT',\r\n//     address: {\r\n//       56: '0x4B0F1812e5Df2A09796481Ff14017e6005508003',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://trustwallet.com/',\r\n//   },\r\n//   hard: {\r\n//     symbol: 'HARD',\r\n//     address: {\r\n//       56: '0xf79037F6f6bE66832DE4E7516be52826BC3cBcc4',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://hard.kava.io',\r\n//   },\r\n//   broobee: {\r\n//     symbol: 'bROOBEE',\r\n//     address: {\r\n//       56: '0xE64F5Cb844946C1F102Bd25bBD87a5aB4aE89Fbe',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://roobee.io/',\r\n//   },\r\n//   stax: {\r\n//     symbol: 'STAX',\r\n//     address: {\r\n//       56: '0x0Da6Ed8B13214Ff28e9Ca979Dd37439e8a88F6c4',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://stablexswap.com/',\r\n//   },\r\n//   nar: {\r\n//     symbol: 'NAR',\r\n//     address: {\r\n//       56: '0xA1303E6199b319a891b79685F0537D289af1FC83',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://narwhalswap.org/',\r\n//   },\r\n//   nya: {\r\n//     symbol: 'NYA',\r\n//     address: {\r\n//       56: '0xbFa0841F7a90c4CE6643f651756EE340991F99D5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://nyanswop.org/',\r\n//   },\r\n//   ctk: {\r\n//     symbol: 'CTK',\r\n//     address: {\r\n//       56: '0xA8c2B8eec3d368C0253ad3dae65a5F2BBB89c929',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://www.certik.foundation/',\r\n//   },\r\n//   inj: {\r\n//     symbol: 'INJ',\r\n//     address: {\r\n//       56: '0xa2B726B1145A4773F68593CF171187d8EBe4d495',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://injectiveprotocol.com/',\r\n//   },\r\n//   sxp: {\r\n//     symbol: 'SXP',\r\n//     address: {\r\n//       56: '0x47BEAd2563dCBf3bF2c9407fEa4dC236fAbA485A',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://swipe.io/',\r\n//   },\r\n//   alpha: {\r\n//     symbol: 'ALPHA',\r\n//     address: {\r\n//       56: '0xa1faa113cbE53436Df28FF0aEe54275c13B40975',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://alphafinance.io/',\r\n//   },\r\n//   xvs: {\r\n//     symbol: 'XVS',\r\n//     address: {\r\n//       56: '0xcF6BB5389c92Bdda8a3747Ddb454cB7a64626C63',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://venus.io/',\r\n//   },\r\n//   sushi: {\r\n//     symbol: 'SUSHI',\r\n//     address: {\r\n//       56: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://sushi.com/',\r\n//   },\r\n//   comp: {\r\n//     symbol: 'COMP',\r\n//     address: {\r\n//       56: '0x52CE071Bd9b1C4B00A0b92D298c512478CaD67e8',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://compound.finance/',\r\n//   },\r\n  syrup: {\r\n    symbol: 'SYRUP',\r\n    address: {\r\n      137: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\r\n      80001: '0xBAd17d65a8BB57D6db7b0b2CFD33550E90Cacd94',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://pancakeswap.finance/',\r\n  },\r\n//   bifi: {\r\n//     symbol: 'BIFI',\r\n//     address: {\r\n//       56: '0xCa3F508B8e4Dd382eE878A314789373D80A5190A',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://beefy.finance/',\r\n//   },\r\n//   dusk: {\r\n//     symbol: 'DUSK',\r\n//     address: {\r\n//       56: '0xB2BD0749DBE21f623d9BABa856D3B0f0e1BFEc9C',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dusk.network/',\r\n//   },\r\n  busd: {\r\n    symbol: 'BUSD',\r\n    address: {\r\n      137: '0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56',\r\n      80001: '0x7838650daF99aeBa2399Fd0d4DFe1962d54CaEA0',\r\n    },\r\n    decimals: 18,\r\n    projectLink: 'https://www.paxos.com/busd/',\r\n  },\r\n//   eth: {\r\n//     symbol: 'ETH',\r\n//     address: {\r\n//       56: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ethereum.org/en/',\r\n//   },\r\n//   beth: {\r\n//     symbol: 'BETH',\r\n//     address: {\r\n//       56: '0x250632378E573c6Be1AC2f97Fcdf00515d0Aa91B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\r\n//   },\r\n//   mamzn: {\r\n//     symbol: 'mAMZN',\r\n//     address: {\r\n//       56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   mgoogl: {\r\n//     symbol: 'mGOOGL',\r\n//     address: {\r\n//       56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   mnflx: {\r\n//     symbol: 'mNFLX',\r\n//     address: {\r\n//       56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   mtsla: {\r\n//     symbol: 'mTSLA',\r\n//     address: {\r\n//       56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   ltc: {\r\n//     symbol: 'LTC',\r\n//     address: {\r\n//       56: '0x4338665CBB7B2485A8855A139b75D5e34AB0DB94',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://litecoin.org/',\r\n//   },\r\n//   usdc: {\r\n//     symbol: 'USDC',\r\n//     address: {\r\n//       56: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.centre.io/usdc',\r\n//   },\r\n//   dai: {\r\n//     symbol: 'DAI',\r\n//     address: {\r\n//       56: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.makerdao.com/',\r\n//   },\r\n//   ada: {\r\n//     symbol: 'ADA',\r\n//     address: {\r\n//       56: '0x3EE2200Efb3400fAbB9AacF31297cBdD1d435D47',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.cardano.org/',\r\n//   },\r\n//   band: {\r\n//     symbol: 'BAND',\r\n//     address: {\r\n//       56: '0xAD6cAEb32CD2c308980a548bD0Bc5AA4306c6c18',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bandprotocol.com/',\r\n//   },\r\n//   dot: {\r\n//     symbol: 'DOT',\r\n//     address: {\r\n//       56: '0x7083609fCE4d1d8Dc0C979AAb8c869Ea2C873402',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://polkadot.network/',\r\n//   },\r\n//   eos: {\r\n//     symbol: 'EOS',\r\n//     address: {\r\n//       56: '0x56b6fB708fC5732DEC1Afc8D8556423A2EDcCbD6',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://eos.io/',\r\n//   },\r\n//   link: {\r\n//     symbol: 'LINK',\r\n//     address: {\r\n//       56: '0xF8A0BF9cF54Bb92F17374d9e9A321E6a111a51bD',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://chain.link/',\r\n//   },\r\n//   usdt: {\r\n//     symbol: 'USDT',\r\n//     address: {\r\n//       56: '0x55d398326f99059fF775485246999027B3197955',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://tether.to/',\r\n//   },\r\n//   btcb: {\r\n//     symbol: 'BTCB',\r\n//     address: {\r\n//       56: '0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bitcoin.org/',\r\n//   },\r\n//   xrp: {\r\n//     symbol: 'XRP',\r\n//     address: {\r\n//       56: '0x1D2F0da169ceB9fC7B3144628dB156f3F6c60dBE',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ripple.com/xrp/',\r\n//   },\r\n//   atom: {\r\n//     symbol: 'ATOM',\r\n//     address: {\r\n//       56: '0x0Eb3a705fc54725037CC9e008bDede697f62F335',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://cosmos.network/',\r\n//   },\r\n//   yfii: {\r\n//     symbol: 'YFII',\r\n//     address: {\r\n//       56: '0x7F70642d88cf1C4a3a7abb072B53B929b653edA5',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dfi.money/#/',\r\n//   },\r\n//   xtz: {\r\n//     symbol: 'XTZ',\r\n//     address: {\r\n//       56: '0x16939ef78684453bfDFb47825F8a5F714f12623a',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.tezos.com/',\r\n//   },\r\n//   bch: {\r\n//     symbol: 'BCH',\r\n//     address: {\r\n//       56: '0x8fF795a6F4D97E7887C79beA79aba5cc76444aDf',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bch.info/',\r\n//   },\r\n//   yfi: {\r\n//     symbol: 'YFI',\r\n//     address: {\r\n//       56: '0x88f1A5ae2A3BF98AEAF342D26B30a79438c9142e',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://yearn.finance/',\r\n//   },\r\n//   uni: {\r\n//     symbol: 'UNI',\r\n//     address: {\r\n//       56: '0xBf5140A22578168FD562DCcF235E5D43A02ce9B1',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://uniswap.org/',\r\n//   },\r\n//   fil: {\r\n//     symbol: 'FIL',\r\n//     address: {\r\n//       56: '0x0D8Ce2A99Bb6e3B7Db580eD848240e4a0F9aE153',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://filecoin.io/',\r\n//   },\r\n//   bake: {\r\n//     symbol: 'BAKE',\r\n//     address: {\r\n//       56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bakeryswap.org/',\r\n//   },\r\n//   burger: {\r\n//     symbol: 'BURGER',\r\n//     address: {\r\n//       56: '0xAe9269f27437f0fcBC232d39Ec814844a51d6b8f',\r\n//       97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://burgerswap.org/',\r\n//   },\r\n//   bdigg: {\r\n//     symbol: 'bDIGG',\r\n//     address: {\r\n//       56: '0x5986D5c77c65e5801a5cAa4fAE80089f870A71dA',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://badger.finance/',\r\n//   },\r\n//   bbadger: {\r\n//     symbol: 'bBadger',\r\n//     address: {\r\n//       56: '0x1F7216fdB338247512Ec99715587bb97BBf96eae',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://badger.finance/',\r\n//   },\r\n//   trade: {\r\n//     symbol: 'TRADE',\r\n//     address: {\r\n//       56: '0x7af173F350D916358AF3e218Bdf2178494Beb748',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://unitrade.app/',\r\n//   },\r\n//   pnt: {\r\n//     symbol: 'PNT',\r\n//     address: {\r\n//       56: '0xdaacB0Ab6Fb34d24E8a67BfA14BF4D95D4C7aF92',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ptokens.io/',\r\n//   },\r\n//   mir: {\r\n//     symbol: 'MIR',\r\n//     address: {\r\n//       56: '0x5B6DcF557E2aBE2323c48445E8CC948910d8c2c9',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   pbtc: {\r\n//     symbol: 'pBTC',\r\n//     address: {\r\n//       56: '0xeD28A457A5A76596ac48d87C0f577020F6Ea1c4C',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ptokens.io/',\r\n//   },\r\n//   lto: {\r\n//     symbol: 'LTO',\r\n//     address: {\r\n//       56: '0x857B222Fc79e1cBBf8Ca5f78CB133d1b7CF34BBd',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ltonetwork.com/',\r\n//   },\r\n//   pcws: {\r\n//     symbol: 'pCWS',\r\n//     address: {\r\n//       56: '0xbcf39F0EDDa668C58371E519AF37CA705f2bFcbd',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://game.seascape.network/',\r\n//   },\r\n//   zil: {\r\n//     symbol: 'ZIL',\r\n//     address: {\r\n//       56: '0xb86AbCb37C3A4B64f74f59301AFF131a1BEcC787',\r\n//       97: '',\r\n//     },\r\n//     decimals: 12,\r\n//     projectLink: 'https://www.zilliqa.com/',\r\n//   },\r\n//   lien: {\r\n//     symbol: 'LIEN',\r\n//     address: {\r\n//       56: '0x5d684ADaf3FcFe9CFb5ceDe3abf02F0Cdd1012E3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://lien.finance/',\r\n//   },\r\n//   swth: {\r\n//     symbol: 'SWTH',\r\n//     address: {\r\n//       56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://switcheo.network/',\r\n//   },\r\n//   dft: {\r\n//     symbol: 'DFT',\r\n//     address: {\r\n//       56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.dfuture.com/home',\r\n//   },\r\n//   gum: {\r\n//     symbol: 'GUM',\r\n//     address: {\r\n//       56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://gourmetgalaxy.io/',\r\n//   },\r\n//   dego: {\r\n//     symbol: 'DEGO',\r\n//     address: {\r\n//       56: '0x3FdA9383A84C05eC8f7630Fe10AdF1fAC13241CC',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bsc.dego.finance/home',\r\n//   },\r\n//   nrv: {\r\n//     symbol: 'NRV',\r\n//     address: {\r\n//       56: '0x42F6f551ae042cBe50C739158b4f0CAC0Edb9096',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://nerve.fi/',\r\n//   },\r\n//   easy: {\r\n//     symbol: 'EASY',\r\n//     address: {\r\n//       56: '0x7C17c8bED8d14bAccE824D020f994F4880D6Ab3B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://easyfi.network/',\r\n//   },\r\n//   oddz: {\r\n//     symbol: 'ODDZ',\r\n//     address: {\r\n//       56: '0xCD40F2670CF58720b694968698A5514e924F742d',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://oddz.fi/',\r\n//   },\r\n//   hoo: {\r\n//     symbol: 'HOO',\r\n//     address: {\r\n//       56: '0xE1d1F66215998786110Ba0102ef558b22224C016',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://hoo.com/',\r\n//   },\r\n//   apys: {\r\n//     symbol: 'APYS',\r\n//     address: {\r\n//       56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://apyswap.com/',\r\n//   },\r\n//   bondly: {\r\n//     symbol: 'BONDLY',\r\n//     address: {\r\n//       56: '0x96058f8C3e16576D9BD68766f3836d9A33158f89',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bondly.finance/',\r\n//   },\r\n//   tko: {\r\n//     symbol: 'TKO',\r\n//     address: {\r\n//       56: '0x9f589e3eabe42ebC94A44727b3f3531C0c877809',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.tokocrypto.com/',\r\n//   },\r\n//   itam: {\r\n//     symbol: 'ITAM',\r\n//     address: {\r\n//       56: '0x04C747b40Be4D535fC83D09939fb0f626F32800B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://itam.network/',\r\n//   },\r\n//   arpa: {\r\n//     symbol: 'ARPA',\r\n//     address: {\r\n//       56: '0x6F769E65c14Ebd1f68817F5f1DcDb61Cfa2D6f7e',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://arpachain.io/',\r\n//   },\r\n//   eps: {\r\n//     symbol: 'EPS',\r\n//     address: {\r\n//       56: '0xA7f552078dcC247C2684336020c03648500C6d9F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://ellipsis.finance/',\r\n//   },\r\n//   jgn: {\r\n//     symbol: 'JGN',\r\n//     address: {\r\n//       56: '0xC13B7a43223BB9Bf4B69BD68Ab20ca1B79d81C75',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://jgndefi.com/',\r\n//   },\r\n//   tlm: {\r\n//     symbol: 'TLM',\r\n//     address: {\r\n//       56: '0x2222227E22102Fe3322098e4CBfE18cFebD57c95',\r\n//       97: '',\r\n//     },\r\n//     decimals: 4,\r\n//     projectLink: 'https://alienworlds.io/',\r\n//   },\r\n//   perl: {\r\n//     symbol: 'PERL',\r\n//     address: {\r\n//       56: '0x0F9E4D49f25de22c2202aF916B681FBB3790497B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://perlinx.finance/',\r\n//   },\r\n//   alpa: {\r\n//     symbol: 'ALPA',\r\n//     address: {\r\n//       56: '0xc5E6689C9c8B02be7C49912Ef19e79cF24977f03',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://bsc.alpaca.city/',\r\n//   },\r\n//   hzn: {\r\n//     symbol: 'HZN',\r\n//     address: {\r\n//       56: '0xC0eFf7749b125444953ef89682201Fb8c6A917CD',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://horizonprotocol.com/',\r\n//   },\r\n//   suter: {\r\n//     symbol: 'SUTER',\r\n//     address: {\r\n//       56: '0x4CfbBdfBd5BF0814472fF35C72717Bd095ADa055',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://shield.suterusu.io/',\r\n//   },\r\n//   cgg: {\r\n//     symbol: 'CGG',\r\n//     address: {\r\n//       56: '0x1613957159E9B0ac6c80e824F7Eea748a32a0AE2',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://chainguardians.io/',\r\n//   },\r\n//   mix: {\r\n//     symbol: 'MIX',\r\n//     address: {\r\n//       56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mixie.chainguardians.io/',\r\n//   },\r\n//   hakka: {\r\n//     symbol: 'HAKKA',\r\n//     address: {\r\n//       56: '0x1D1eb8E8293222e1a29d2C0E4cE6C0Acfd89AaaC',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://hakka.finance/',\r\n//   },\r\n//   xed: {\r\n//     symbol: 'XED',\r\n//     address: {\r\n//       56: '0x5621b5A3f4a8008c4CCDd1b942B121c8B1944F1f',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.exeedme.com/',\r\n//   },\r\n//   τbtc: {\r\n//     symbol: 'τBTC',\r\n//     address: {\r\n//       56: '0x2cD1075682b0FCCaADd0Ca629e138E64015Ba11c',\r\n//       97: '',\r\n//     },\r\n//     decimals: 9,\r\n//     projectLink: 'https://www.btcst.finance/',\r\n//   },\r\n//   alpaca: {\r\n//     symbol: 'ALPACA',\r\n//     address: {\r\n//       56: '0x8F0528cE5eF7B51152A59745bEfDD91D97091d2F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.alpacafinance.org/',\r\n//   },\r\n//   dfd: {\r\n//     symbol: 'DFD',\r\n//     address: {\r\n//       56: '0x9899a98b222fCb2f3dbee7dF45d943093a4ff9ff',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://dusd.finance/',\r\n//   },\r\n//   lmt: {\r\n//     symbol: 'LMT',\r\n//     address: {\r\n//       56: '0x9617857E191354dbEA0b714d78Bc59e57C411087',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://lympo.io/lmt/',\r\n//   },\r\n//   btt: {\r\n//     symbol: 'BTT',\r\n//     address: {\r\n//       56: '0x8595F9dA7b868b1822194fAEd312235E43007b49',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bittorrent.com/',\r\n//   },\r\n//   trx: {\r\n//     symbol: 'TRX',\r\n//     address: {\r\n//       56: '0x85EAC5Ac2F758618dFa09bDbe0cf174e7d574D5B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://tron.network/',\r\n//   },\r\n//   win: {\r\n//     symbol: 'WIN',\r\n//     address: {\r\n//       56: '0xaeF0d72a118ce24feE3cD1d43d383897D05B4e99',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://winklink.org/',\r\n//   },\r\n//   mcoin: {\r\n//     symbol: 'mCOIN',\r\n//     address: {\r\n//       56: '0x49022089e78a8D46Ec87A3AF86a1Db6c189aFA6f',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mirror.finance/',\r\n//   },\r\n//   math: {\r\n//     symbol: 'MATH',\r\n//     address: {\r\n//       56: '0xF218184Af829Cf2b0019F8E6F0b2423498a36983',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://mathwallet.org/',\r\n//   },\r\n//   kun: {\r\n//     symbol: 'KUN',\r\n//     address: {\r\n//       56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://chemix.io/home',\r\n//   },\r\n//   qsd: {\r\n//     symbol: 'QSD',\r\n//     address: {\r\n//       56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://chemix.io/home',\r\n//   },\r\n//   hyfi: {\r\n//     symbol: 'HYFI',\r\n//     address: {\r\n//       56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://hyfi.pro/#/',\r\n//   },\r\n//   oin: {\r\n//     symbol: 'OIN',\r\n//     address: {\r\n//       56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://oin.finance/',\r\n//   },\r\n//   doge: {\r\n//     symbol: 'DOGE',\r\n//     address: {\r\n//       56: '0xbA2aE424d960c26247Dd6c32edC70B295c744C43',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://dogecoin.com/',\r\n//   },\r\n//   fine: {\r\n//     symbol: 'FINE',\r\n//     address: {\r\n//       56: '0x4e6415a5727ea08aAE4580057187923aeC331227',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://refinable.com/',\r\n//   },\r\n//   one: {\r\n//     symbol: 'ONE',\r\n//     address: {\r\n//       56: '0x04BAf95Fd4C52fd09a56D840bAEe0AB8D7357bf0',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bigone.com/',\r\n//   },\r\n//   pmon: {\r\n//     symbol: 'PMON',\r\n//     address: {\r\n//       56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://polkamon.com/',\r\n//   },\r\n//   hotcross: {\r\n//     symbol: 'HOTCROSS',\r\n//     address: {\r\n//       56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.hotcross.com/',\r\n//   },\r\n//   τdoge: {\r\n//     symbol: 'τDOGE',\r\n//     address: {\r\n//       56: '0xe550a593d09FBC8DCD557b5C88Cea6946A8b404A',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://www.btcst.finance/',\r\n//   },\r\n//   btr: {\r\n//     symbol: 'BTR',\r\n//     address: {\r\n//       56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bitrue.com/',\r\n//   },\r\n//   ubxt: {\r\n//     symbol: 'UBXT',\r\n//     address: {\r\n//       56: '0xBbEB90cFb6FAFa1F69AA130B7341089AbeEF5811',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://upbots.com/',\r\n//   },\r\n//   wmass: {\r\n//     symbol: 'WMASS',\r\n//     address: {\r\n//       56: '0x7e396BfC8a2f84748701167c2d622F041A1D7a17',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://massnet.org/en/',\r\n//   },\r\n//   rfox: {\r\n//     symbol: 'RFOX',\r\n//     address: {\r\n//       56: '0x0a3A21356793B49154Fd3BbE91CBc2A16c0457f5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.redfoxlabs.io/',\r\n//   },\r\n//   xend: {\r\n//     symbol: 'XEND',\r\n//     address: {\r\n//       56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://xend.finance/',\r\n//   },\r\n//   cyc: {\r\n//     symbol: 'CYC',\r\n//     address: {\r\n//       56: '0x810EE35443639348aDbbC467b33310d2AB43c168',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://cyclone.xyz/',\r\n//   },\r\n//   chr: {\r\n//     symbol: 'CHR',\r\n//     address: {\r\n//       56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\r\n//       97: '',\r\n//     },\r\n//     decimals: 6,\r\n//     projectLink: 'https://chromia.com/',\r\n//   },\r\n//   kalm: {\r\n//     symbol: 'KALM',\r\n//     address: {\r\n//       56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://kalmar.io/',\r\n//   },\r\n//   deri: {\r\n//     symbol: 'DERI',\r\n//     address: {\r\n//       56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://deri.finance/#/index',\r\n//   },\r\n//   well: {\r\n//     symbol: 'WELL',\r\n//     address: {\r\n//       56: '0xf07a32Eb035b786898c00bB1C64d8c6F8E7a46D5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.bitwellex.com/',\r\n//   },\r\n//   wex: {\r\n//     symbol: 'WEX',\r\n//     address: {\r\n//       56: '0xa9c41A46a6B3531d28d5c32F6633dd2fF05dFB90',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://wault.finance/',\r\n//   },\r\n//   waultx: {\r\n//     symbol: 'WAULTx',\r\n//     address: {\r\n//       56: '0xB64E638E60D154B43f660a6BF8fD8a3b249a6a21',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://wault.finance/',\r\n//   },\r\n//   popen: {\r\n//     symbol: 'pOPEN',\r\n//     address: {\r\n//       56: '0xaBaE871B7E3b67aEeC6B46AE9FE1A91660AadAC5',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://opendao.io/',\r\n//   },\r\n//   ez: {\r\n//     symbol: 'EZ',\r\n//     address: {\r\n//       56: '0x5512014efa6Cd57764Fa743756F7a6Ce3358cC83',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://easyfi.network/',\r\n//   },\r\n//   vrt: {\r\n//     symbol: 'VRT',\r\n//     address: {\r\n//       56: '0x5F84ce30DC3cF7909101C69086c50De191895883',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://venus.io/',\r\n//   },\r\n//   tusd: {\r\n//     symbol: 'TUSD',\r\n//     address: {\r\n//       56: '0x14016E85a25aeb13065688cAFB43044C2ef86784',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.trueusd.com/',\r\n//   },\r\n//   mtrg: {\r\n//     symbol: 'MTRG',\r\n//     address: {\r\n//       56: '0xBd2949F67DcdC549c6Ebe98696449Fa79D988A9F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.meter.io/',\r\n//   },\r\n//   ktn: {\r\n//     symbol: 'KTN',\r\n//     address: {\r\n//       56: '0xDAe6c2A48BFAA66b43815c5548b10800919c993E',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://kattana.io/',\r\n//   },\r\n//   qkc: {\r\n//     symbol: 'QKC',\r\n//     address: {\r\n//       56: '0xA1434F1FC3F437fa33F7a781E041961C0205B5Da',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://quarkchain.io/',\r\n//   },\r\n//   bcfx: {\r\n//     symbol: 'bCFX',\r\n//     address: {\r\n//       56: '0x045c4324039dA91c52C55DF5D785385Aab073DcF',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.confluxnetwork.org/',\r\n//   },\r\n//   mx: {\r\n//     symbol: 'MX',\r\n//     address: {\r\n//       56: '0x9F882567A62a5560d147d64871776EeA72Df41D3',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.mxc.com/',\r\n//   },\r\n//   ata: {\r\n//     symbol: 'ATA',\r\n//     address: {\r\n//       56: '0xA2120b9e674d3fC3875f415A7DF52e382F141225',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.ata.network/',\r\n//   },\r\n//   mbox: {\r\n//     symbol: 'MBOX',\r\n//     address: {\r\n//       56: '0x3203c9E46cA618C8C1cE5dC67e7e9D75f5da2377',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.mobox.io/#/',\r\n//   },\r\n//   boring: {\r\n//     symbol: 'BORING',\r\n//     address: {\r\n//       56: '0xffEecbf8D7267757c2dc3d13D730E97E15BfdF7F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.boringdao.com/',\r\n//   },\r\n//   marsh: {\r\n//     symbol: 'MARSH',\r\n//     address: {\r\n//       56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://unmarshal.io/',\r\n//   },\r\n//   ampl: {\r\n//     symbol: 'AMPL',\r\n//     address: {\r\n//       56: '0xDB021b1B247fe2F1fa57e0A87C748Cc1E321F07F',\r\n//       97: '',\r\n//     },\r\n//     decimals: 9,\r\n//     projectLink: 'https://www.ampleforth.org/',\r\n//   },\r\n//   o3: {\r\n//     symbol: 'O3',\r\n//     address: {\r\n//       56: '0xEe9801669C6138E84bD50dEB500827b776777d28',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://o3swap.com/',\r\n//   },\r\n//   hai: {\r\n//     symbol: 'HAI',\r\n//     address: {\r\n//       56: '0xaA9E582e5751d703F85912903bacADdFed26484C',\r\n//       97: '',\r\n//     },\r\n//     decimals: 8,\r\n//     projectLink: 'https://hacken.io/',\r\n//   },\r\n//   htb: {\r\n//     symbol: 'HTB',\r\n//     address: {\r\n//       56: '0x4e840AADD28DA189B9906674B4Afcb77C128d9ea',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://www.hotbit.io/',\r\n//   },\r\n//   woo: {\r\n//     symbol: 'WOO',\r\n//     address: {\r\n//       56: '0x4691937a7508860F876c9c0a2a617E7d9E945D4B',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://woo.network/',\r\n//   },\r\n//   $dg: {\r\n//     symbol: '$DG',\r\n//     address: {\r\n//       56: '0x9Fdc3ae5c814b79dcA2556564047C5e7e5449C19',\r\n//       97: '',\r\n//     },\r\n//     decimals: 18,\r\n//     projectLink: 'https://decentral.games/',\r\n//   },\r\n}\r\n\r\nexport default tokens\r\n","import { request, gql } from 'graphql-request'\r\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\r\nimport { ethers } from 'ethers'\r\nimport {\r\n  Bet,\r\n  LedgerData,\r\n  BetPosition,\r\n  PredictionsState,\r\n  PredictionStatus,\r\n  ReduxNodeLedger,\r\n  ReduxNodeRound,\r\n  Round,\r\n  RoundData,\r\n} from 'state/types'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport predictionsAbi from 'config/abi/predictions.json'\r\nimport { getPredictionsAddress } from 'utils/addressHelpers'\r\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\r\nimport {\r\n  BetResponse,\r\n  getRoundBaseFields,\r\n  getBetBaseFields,\r\n  getUserBaseFields,\r\n  RoundResponse,\r\n  TotalWonMarketResponse,\r\n  TotalWonRoundResponse,\r\n} from './queries'\r\n\r\nexport enum Result {\r\n  WIN = 'win',\r\n  LOSE = 'lose',\r\n  CANCELED = 'canceled',\r\n  LIVE = 'live',\r\n}\r\n\r\nexport const numberOrNull = (value: string) => {\r\n  if (value === null) {\r\n    return null\r\n  }\r\n\r\n  const valueNum = Number(value)\r\n  return Number.isNaN(valueNum) ? null : valueNum\r\n}\r\n\r\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\r\n  const bet = {\r\n    id: betResponse.id,\r\n    hash: betResponse.hash,\r\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\r\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\r\n    claimed: betResponse.claimed,\r\n    claimedHash: betResponse.claimedHash,\r\n    user: {\r\n      id: betResponse.user.id,\r\n      address: betResponse.user.address,\r\n      block: numberOrNull(betResponse.user.block),\r\n      totalBets: numberOrNull(betResponse.user.totalBets),\r\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\r\n    },\r\n  } as Bet\r\n\r\n  if (betResponse.round) {\r\n    bet.round = transformRoundResponse(betResponse.round)\r\n  }\r\n\r\n  return bet\r\n}\r\n\r\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\r\n  const {\r\n    id,\r\n    epoch,\r\n    failed,\r\n    startBlock,\r\n    startAt,\r\n    lockAt,\r\n    lockBlock,\r\n    lockPrice,\r\n    endBlock,\r\n    closePrice,\r\n    totalBets,\r\n    totalAmount,\r\n    bullBets,\r\n    bearBets,\r\n    bearAmount,\r\n    bullAmount,\r\n    position,\r\n    bets = [],\r\n  } = roundResponse\r\n\r\n  const getRoundPosition = (positionResponse: string) => {\r\n    if (positionResponse === 'Bull') {\r\n      return BetPosition.BULL\r\n    }\r\n\r\n    if (positionResponse === 'Bear') {\r\n      return BetPosition.BEAR\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return {\r\n    id,\r\n    failed,\r\n    epoch: numberOrNull(epoch),\r\n    startBlock: numberOrNull(startBlock),\r\n    startAt: numberOrNull(startAt),\r\n    lockAt: numberOrNull(lockAt),\r\n    lockBlock: numberOrNull(lockBlock),\r\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\r\n    endBlock: numberOrNull(endBlock),\r\n    closePrice: closePrice ? parseFloat(closePrice) : null,\r\n    totalBets: numberOrNull(totalBets),\r\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\r\n    bullBets: numberOrNull(bullBets),\r\n    bearBets: numberOrNull(bearBets),\r\n    bearAmount: numberOrNull(bearAmount),\r\n    bullAmount: numberOrNull(bullAmount),\r\n    position: getRoundPosition(position),\r\n    bets: bets.map(transformBetResponse),\r\n  }\r\n}\r\n\r\nexport const transformTotalWonResponse = (\r\n  marketResponse: TotalWonMarketResponse,\r\n  roundResponse: TotalWonRoundResponse[],\r\n): number => {\r\n  const houseRounds = roundResponse.reduce((accum, round) => {\r\n    return accum + (round.totalAmount ? parseFloat(round.totalAmount) : 0)\r\n  }, 0)\r\n\r\n  const totalBNB = marketResponse.totalBNB ? parseFloat(marketResponse.totalBNB) : 0\r\n  const totalBNBTreasury = marketResponse.totalBNBTreasury ? parseFloat(marketResponse.totalBNBTreasury) : 0\r\n\r\n  return Math.max(totalBNB - (totalBNBTreasury + houseRounds), 0)\r\n}\r\n\r\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\r\n  const { round } = bet\r\n  if (round.failed) {\r\n    return Result.CANCELED\r\n  }\r\n\r\n  if (round.epoch >= currentEpoch - 1) {\r\n    return Result.LIVE\r\n  }\r\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\r\n\r\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\r\n}\r\n\r\n/**\r\n * Given a bet object, check if it is eligible to be claimed or refunded\r\n */\r\nexport const getCanClaim = (bet: Bet) => {\r\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\r\n}\r\n\r\n/**\r\n * Returns only bets where the user has won.\r\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\r\n */\r\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\r\n  return bets.filter(getCanClaim)\r\n}\r\n\r\nexport const getTotalWon = async (): Promise<number> => {\r\n  const response = (await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getTotalWonData($position: String) {\r\n        market(id: 1) {\r\n          totalBNB\r\n          totalBNBTreasury\r\n        }\r\n        rounds(where: { position: $position }) {\r\n          totalAmount\r\n        }\r\n      }\r\n    `,\r\n    { position: BetPosition.HOUSE },\r\n  )) as { market: TotalWonMarketResponse; rounds: TotalWonRoundResponse[] }\r\n\r\n  return transformTotalWonResponse(response.market, response.rounds)\r\n}\r\n\r\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\r\n\r\nexport const getBetHistory = async (\r\n  where: BetHistoryWhereClause = {},\r\n  first = 1000,\r\n  skip = 0,\r\n): Promise<BetResponse[]> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\r\n        bets(first: $first, skip: $skip, where: $where) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n    `,\r\n    { first, skip, where },\r\n  )\r\n  return response.bets\r\n}\r\n\r\nexport const getBet = async (betId: string): Promise<BetResponse> => {\r\n  const response = await request(\r\n    GRAPH_API_PREDICTION,\r\n    gql`\r\n      query getBet($id: ID!) {\r\n        bet(id: $id) {\r\n          ${getBetBaseFields()}\r\n          round {\r\n            ${getRoundBaseFields()}\r\n          }\r\n          user {\r\n            ${getUserBaseFields()}\r\n          } \r\n        }\r\n      }\r\n  `,\r\n    {\r\n      id: betId.toLowerCase(),\r\n    },\r\n  )\r\n  return response.bet\r\n}\r\n\r\n// V2 REFACTOR\r\nexport const getLedgerData = async (account: string, epochs: number[]) => {\r\n  const address = getPredictionsAddress()\r\n  const ledgerCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'ledger',\r\n    params: [epoch, account],\r\n  }))\r\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\r\n  return response\r\n}\r\n\r\nexport const getClaimStatuses = async (\r\n  account: string,\r\n  epochs: number[],\r\n): Promise<PredictionsState['claimableStatuses']> => {\r\n  const address = getPredictionsAddress()\r\n  const claimableCalls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'claimable',\r\n    params: [epoch, account],\r\n  }))\r\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\r\n\r\n  // \"claimable\" currently has a bug where it returns true on Bull bets even if the wallet did not interact with the round\r\n  // To get around this temporarily we check the ledger status as well to confirm that it is claimable\r\n  // This can be removed in Predictions V2\r\n  const ledgerResponses = await getLedgerData(account, epochs)\r\n\r\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\r\n    const { amount, claimed } = ledgerResponses[index]\r\n    const epoch = epochs[index]\r\n    const [claimable] = claimableResponse\r\n\r\n    return {\r\n      ...accum,\r\n      [epoch]: claimable && amount.gt(0) && !claimed,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport type MarketData = Pick<\r\n  PredictionsState,\r\n  'status' | 'currentEpoch' | 'intervalBlocks' | 'bufferBlocks' | 'minBetAmount' | 'rewardRate'\r\n>\r\nexport const getPredictionData = async (): Promise<MarketData> => {\r\n  const address = getPredictionsAddress()\r\n  const staticCalls = ['currentEpoch', 'intervalBlocks', 'minBetAmount', 'paused', 'bufferBlocks', 'rewardRate'].map(\r\n    (method) => ({\r\n      address,\r\n      name: method,\r\n    }),\r\n  )\r\n  const [[currentEpoch], [intervalBlocks], [minBetAmount], [paused], [bufferBlocks], [rewardRate]] = await multicallv2(\r\n    predictionsAbi,\r\n    staticCalls,\r\n  )\r\n\r\n  return {\r\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\r\n    currentEpoch: currentEpoch.toNumber(),\r\n    intervalBlocks: intervalBlocks.toNumber(),\r\n    bufferBlocks: bufferBlocks.toNumber(),\r\n    minBetAmount: minBetAmount.toString(),\r\n    rewardRate: rewardRate.toNumber(),\r\n  }\r\n}\r\n\r\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\r\n  const address = getPredictionsAddress()\r\n  const calls = epochs.map((epoch) => ({\r\n    address,\r\n    name: 'rounds',\r\n    params: [epoch],\r\n  }))\r\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\r\n  return response\r\n}\r\n\r\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): ReduxNodeRound => {\r\n  return {\r\n    epoch,\r\n    startBlock,\r\n    lockBlock: null,\r\n    endBlock: null,\r\n    lockPrice: null,\r\n    closePrice: null,\r\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\r\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\r\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\r\n    oracleCalled: false,\r\n  }\r\n}\r\n\r\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\r\n  return rounds.reduce((accum, round) => {\r\n    return {\r\n      ...accum,\r\n      [round.epoch.toString()]: round,\r\n    }\r\n  }, {})\r\n}\r\n\r\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\r\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\r\n  amount: ledgerResponse.amount.toJSON(),\r\n  claimed: ledgerResponse.claimed,\r\n})\r\n\r\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\r\n  return ledgers.reduce((accum, ledgerResponse, index) => {\r\n    if (!ledgerResponse) {\r\n      return accum\r\n    }\r\n\r\n    // If the amount is zero that means the user did not bet\r\n    if (ledgerResponse.amount.eq(0)) {\r\n      return accum\r\n    }\r\n\r\n    const epoch = epochs[index].toString()\r\n\r\n    return {\r\n      ...accum,\r\n      [account]: {\r\n        ...accum[account],\r\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\r\n      },\r\n    }\r\n  }, {})\r\n}\r\n\r\n/**\r\n * Serializes the return from the \"rounds\" call for redux\r\n */\r\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\r\n  const {\r\n    epoch,\r\n    startBlock,\r\n    lockBlock,\r\n    endBlock,\r\n    lockPrice,\r\n    closePrice,\r\n    totalAmount,\r\n    bullAmount,\r\n    bearAmount,\r\n    rewardAmount,\r\n    rewardBaseCalAmount,\r\n    oracleCalled,\r\n  } = response\r\n\r\n  return {\r\n    epoch: epoch.toNumber(),\r\n    startBlock: startBlock.toNumber(),\r\n    lockBlock: lockBlock.toNumber(),\r\n    endBlock: endBlock.toNumber(),\r\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\r\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\r\n    totalAmount: totalAmount.toJSON(),\r\n    bullAmount: bullAmount.toJSON(),\r\n    bearAmount: bearAmount.toJSON(),\r\n    rewardAmount: rewardAmount.toJSON(),\r\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\r\n    oracleCalled,\r\n  }\r\n}\r\n\r\n/**\r\n * Parse serialized values back into ethers.BigNumber\r\n * ethers.BigNumber values are stored with the \"toJSJON()\" method, e.g  { type: \"BigNumber\", hex: string }\r\n */\r\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\r\n  return Object.keys(data).reduce((accum, key) => {\r\n    const value = data[key]\r\n\r\n    if (value && value?.type === 'BigNumber') {\r\n      return {\r\n        ...accum,\r\n        [key]: ethers.BigNumber.from(value),\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...accum,\r\n      [key]: value,\r\n    }\r\n  }, {}) as K\r\n}\r\n","export interface UserResponse {\r\n  id: string\r\n  address: string\r\n  block: string\r\n  totalBets: string\r\n  totalBNB: string\r\n  bets?: BetResponse[]\r\n}\r\n\r\nexport interface BetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  claimedHash: string\r\n  user?: UserResponse\r\n  round?: RoundResponse\r\n}\r\n\r\nexport interface HistoricalBetResponse {\r\n  id: string\r\n  hash: string\r\n  amount: string\r\n  position: string\r\n  claimed: boolean\r\n  user?: UserResponse\r\n  round: {\r\n    id: string\r\n    epoch: string\r\n  }\r\n}\r\n\r\nexport interface RoundResponse {\r\n  id: string\r\n  epoch: string\r\n  failed: boolean\r\n  startBlock: string\r\n  startAt: string\r\n  lockAt: string\r\n  lockBlock: string\r\n  lockPrice: string\r\n  endBlock: string\r\n  closePrice: string\r\n  totalBets: string\r\n  totalAmount: string\r\n  bearBets: string\r\n  bullBets: string\r\n  bearAmount: string\r\n  bullAmount: string\r\n  position: string\r\n  bets: BetResponse[]\r\n}\r\n\r\nexport interface TotalWonMarketResponse {\r\n  totalBNB: string\r\n  totalBNBTreasury: string\r\n}\r\n\r\nexport interface TotalWonRoundResponse {\r\n  totalAmount: string\r\n}\r\n\r\n/**\r\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\r\n */\r\nexport const getRoundBaseFields = () => `\r\n  id\r\n  epoch\r\n  failed\r\n  startAt\r\n  startBlock\r\n  lockAt\r\n  lockBlock\r\n  lockPrice\r\n  endAt\r\n  endBlock\r\n  closePrice\r\n  totalBets\r\n  totalAmount\r\n  bullBets\r\n  bullAmount\r\n  bearBets\r\n  bearAmount\r\n  position\r\n`\r\n\r\nexport const getBetBaseFields = () => `\r\n  id\r\n  hash  \r\n  amount\r\n  position\r\n  claimed\r\n  claimedHash\r\n`\r\n\r\nexport const getUserBaseFields = () => `\r\n  id\r\n  address\r\n  block\r\n  totalBets\r\n  totalBNB\r\n`\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3Provider = (): ethers.providers.JsonRpcProvider | ethers.providers.Web3Provider => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setprovider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return provider\r\n}\r\n\r\nexport default useWeb3Provider\r\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\r\nexport {\r\n  fetchPoolsPublicDataAsync,\r\n  fetchPoolsUserDataAsync,\r\n  fetchCakeVaultPublicData,\r\n  fetchCakeVaultUserData,\r\n  fetchCakeVaultFees,\r\n  updateUserAllowance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n  updateUserStakedBalance,\r\n} from './pools'\r\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\r\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\r\nexport { setBlock } from './block'\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\r\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\r\nimport { getLotteryV2Address } from 'utils/addressHelpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport { LotteryRound, UserTicketsResponse, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\r\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\r\nimport { useMemo } from 'react'\r\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\r\n\r\nconst lotteryContract = getLotteryV2Contract()\r\n// Variable used to determine how many past rounds should be populated by node data rather than subgraph\r\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 4\r\n\r\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\r\n  const {\r\n    status,\r\n    startTime,\r\n    endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee,\r\n    firstTicketId,\r\n    lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber,\r\n    cakePerBracket,\r\n    countWinnersPerBracket,\r\n    rewardsBreakdown,\r\n  } = response\r\n\r\n  const statusKey = Object.keys(LotteryStatus)[status]\r\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\r\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\r\n    ethersToSerializedBigNumber(winnersInBracket),\r\n  )\r\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\r\n\r\n  return {\r\n    isLoading: false,\r\n    lotteryId,\r\n    status: LotteryStatus[statusKey],\r\n    startTime: startTime?.toString(),\r\n    endTime: endTime?.toString(),\r\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\r\n    discountDivisor: discountDivisor?.toString(),\r\n    treasuryFee: treasuryFee?.toString(),\r\n    firstTicketId: firstTicketId?.toString(),\r\n    lastTicketId: lastTicketId?.toString(),\r\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\r\n    finalNumber,\r\n    cakePerBracket: serializedCakePerBracket,\r\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\r\n    rewardsBreakdown: serializedRewardsBreakdown,\r\n  }\r\n}\r\n\r\nconst processViewLotteryErrorResponse = (lotteryId: string) => {\r\n  return {\r\n    isLoading: true,\r\n    lotteryId,\r\n    status: LotteryStatus.PENDING,\r\n    startTime: '',\r\n    endTime: '',\r\n    priceTicketInCake: '',\r\n    discountDivisor: '',\r\n    treasuryFee: '',\r\n    firstTicketId: '',\r\n    lastTicketId: '',\r\n    amountCollectedInCake: '',\r\n    finalNumber: null,\r\n    cakePerBracket: [],\r\n    countWinnersPerBracket: [],\r\n    rewardsBreakdown: [],\r\n  }\r\n}\r\n\r\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\r\n  try {\r\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\r\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\r\n  } catch (error) {\r\n    return processViewLotteryErrorResponse(lotteryId)\r\n  }\r\n}\r\n\r\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\r\n  const calls = lotteryIds.map((id) => ({\r\n    name: 'viewLottery',\r\n    address: getLotteryV2Address(),\r\n    params: [id],\r\n  }))\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\r\n    const processedResponses = multicallRes.map((res, index) =>\r\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\r\n    )\r\n    return processedResponses\r\n  } catch (error) {\r\n    console.error(error)\r\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\r\n  }\r\n}\r\n\r\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\r\n  try {\r\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\r\n      address: getLotteryV2Address(),\r\n      name: method,\r\n    }))\r\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\r\n      lotteryV2Abi,\r\n      calls,\r\n    )) as ethers.BigNumber[][]\r\n\r\n    return {\r\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\r\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      currentLotteryId: null,\r\n      maxNumberTicketsPerBuyOrClaim: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\r\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\r\n\r\n  if (ticketIds?.length > 0) {\r\n    return ticketIds.map((ticketId, index) => {\r\n      return {\r\n        id: ticketId.toString(),\r\n        number: ticketNumbers[index].toString(),\r\n        status: ticketStatuses[index],\r\n      }\r\n    })\r\n  }\r\n  return []\r\n}\r\n\r\nexport const getViewUserTicketInfoCalls = (totalTicketsToRequest: number, account: string, lotteryId: string) => {\r\n  let cursor = 0\r\n  const perRequestLimit = 1000\r\n  const calls = []\r\n\r\n  for (let i = 0; i < totalTicketsToRequest; i += perRequestLimit) {\r\n    cursor = 0\r\n    calls.push({\r\n      name: 'viewUserInfoForLotteryId',\r\n      address: getLotteryV2Address(),\r\n      params: [account, lotteryId, cursor, perRequestLimit],\r\n    })\r\n  }\r\n  return calls\r\n}\r\n\r\nexport const mergeViewUserTicketInfoMulticallResponse = (response) => {\r\n  const mergedMulticallResponse: UserTicketsResponse = [[], [], []]\r\n\r\n  response.forEach((ticketResponse) => {\r\n    mergedMulticallResponse[0].push(...ticketResponse[0])\r\n    mergedMulticallResponse[1].push(...ticketResponse[1])\r\n    mergedMulticallResponse[2].push(...ticketResponse[2])\r\n  })\r\n  // console.log(\"fdgd : \",mergedMulticallResponse);\r\n  return mergedMulticallResponse\r\n}\r\n\r\nexport const fetchTickets = async (\r\n  account: string,\r\n  lotteryId: string,\r\n  userTotalTickets?: string,\r\n): Promise<LotteryTicket[]> => {\r\n  // If the subgraph is returning user totalTickets data for the round - use those totalTickets, if not - batch request up to 5000\r\n  const totalTicketsToRequest = userTotalTickets ? parseInt(userTotalTickets, 10) : 5000\r\n  // console.log(\"callss : \",totalTicketsToRequest);\r\n\r\n  const calls = getViewUserTicketInfoCalls(totalTicketsToRequest, account, lotteryId)\r\n  try {\r\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: true })\r\n    // console.log(multicallRes)\r\n    // When using a static totalTicketsToRequest value - null responses may be returned\r\n    const filteredForNullResponses = multicallRes.filter((res) => res)\r\n    const mergedMulticallResponse = mergeViewUserTicketInfoMulticallResponse(filteredForNullResponses)\r\n    const completeTicketData = processRawTicketsResponse(mergedMulticallResponse)\r\n    return completeTicketData\r\n  } catch (error) {\r\n    console.error(error)\r\n    return null\r\n  }\r\n}\r\n\r\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\r\n  // TODO: This returns a number, but the currentId being typed as a string is deep in the logic and needs untangling\r\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\r\n  const roundIds = []\r\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\r\n    roundIds.push(currentIdAsInt - i)\r\n  }\r\n  return roundIds\r\n}\r\n\r\nexport const useProcessLotteryResponse = (\r\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\r\n): LotteryRound => {\r\n  const {\r\n    priceTicketInCake: priceTicketInCakeAsString,\r\n    discountDivisor: discountDivisorAsString,\r\n    amountCollectedInCake: amountCollectedInCakeAsString,\r\n  } = lotteryData\r\n\r\n  const discountDivisor = useMemo(() => {\r\n    return new BigNumber(discountDivisorAsString)\r\n  }, [discountDivisorAsString])\r\n\r\n  const priceTicketInCake = useMemo(() => {\r\n    return new BigNumber(priceTicketInCakeAsString)\r\n  }, [priceTicketInCakeAsString])\r\n\r\n  const amountCollectedInCake = useMemo(() => {\r\n    return new BigNumber(amountCollectedInCakeAsString)\r\n  }, [amountCollectedInCakeAsString])\r\n\r\n  return {\r\n    isLoading: lotteryData.isLoading,\r\n    lotteryId: lotteryData.lotteryId,\r\n    userTickets: lotteryData.userTickets,\r\n    status: lotteryData.status,\r\n    startTime: lotteryData.startTime,\r\n    endTime: lotteryData.endTime,\r\n    priceTicketInCake,\r\n    discountDivisor,\r\n    treasuryFee: lotteryData.treasuryFee,\r\n    firstTicketId: lotteryData.firstTicketId,\r\n    lastTicketId: lotteryData.lastTicketId,\r\n    amountCollectedInCake,\r\n    finalNumber: lotteryData.finalNumber,\r\n    cakePerBracket: lotteryData.cakePerBracket,\r\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\r\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\r\n  }\r\n}\r\n\r\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\r\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\r\n  return claimedTickets.length > 0\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport cakeABI from 'config/abi/cake.json'\r\nimport wbnbABI from 'config/abi/weth.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\r\n\r\nexport const fetchPoolsBlockLimits = async () => {\r\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\r\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'startBlock',\r\n    }\r\n  })\r\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.contractAddress),\r\n      name: 'bonusEndBlock',\r\n    }\r\n  })\r\n\r\n  const starts = await multicall(sousChefABI, callsStartBlock)\r\n  const ends = await multicall(sousChefABI, callsEndBlock)\r\n\r\n  return poolsWithEnd.map((cakePoolConfig, index) => {\r\n    const startBlock = starts[index]\r\n    const endBlock = ends[index]\r\n    return {\r\n      sousId: cakePoolConfig.sousId,\r\n      startBlock: new BigNumber(startBlock).toJSON(),\r\n      endBlock: new BigNumber(endBlock).toJSON(),\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPoolsTotalStaking = async () => {\r\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\n\r\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\r\n    return {\r\n      address: getAddress(poolConfig.stakingToken.address),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const callsBnbPools = bnbPool.map((poolConfig) => {\r\n    return {\r\n      address: getWbnbAddress(),\r\n      name: 'balanceOf',\r\n      params: [getAddress(poolConfig.contractAddress)],\r\n    }\r\n  })\r\n\r\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\r\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\r\n\r\n  return [\r\n    ...nonBnbPools.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n    ...bnbPool.map((p, index) => ({\r\n      sousId: p.sousId,\r\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\r\n    })),\r\n  ]\r\n}\r\n\r\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\r\n  try {\r\n    const sousContract = getSouschefV2Contract(sousId)\r\n    const stakingLimit = await sousContract.poolLimitPerUser()\r\n    return new BigNumber(stakingLimit.toString())\r\n  } catch (error) {\r\n    return BIG_ZERO\r\n  }\r\n}\r\n\r\nexport const fetchPoolsStakingLimits = async (\r\n  poolsWithStakingLimit: number[],\r\n): Promise<{ [key: string]: BigNumber }> => {\r\n  const validPools = poolsConfig\r\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\r\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\r\n\r\n  // Get the staking limit for each valid pool\r\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\r\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\r\n  const stakingLimits = await Promise.all(stakingLimitPromises)\r\n\r\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\r\n    return {\r\n      ...accum,\r\n      [validPools[index].sousId]: stakingLimit,\r\n    }\r\n  }, {})\r\n}\r\n","import poolsConfig from 'config/constants/pools'\r\nimport sousChefABI from 'config/abi/sousChef.json'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterchefContract } from 'utils/contractHelpers'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport BigNumber from 'bignumber.js'\r\n\r\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\r\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\r\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\r\nconst masterChefContract = getMasterchefContract()\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'allowance',\r\n    params: [account, getAddress(p.contractAddress)],\r\n  }))\r\n\r\n  const allowances = await multicall(erc20ABI, calls)\r\n  return nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n    {},\r\n  )\r\n}\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n  // Non BNB pools\r\n  const calls = nonBnbPools.map((p) => ({\r\n    address: getAddress(p.stakingToken.address),\r\n    name: 'balanceOf',\r\n    params: [account],\r\n  }))\r\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n  const tokenBalances = nonBnbPools.reduce(\r\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  // BNB pools\r\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\r\n  const bnbBalances = bnbPools.reduce(\r\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\r\n    {},\r\n  )\r\n\r\n  return { ...tokenBalances, ...bnbBalances }\r\n}\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'userInfo',\r\n    params: [account],\r\n  }))\r\n  const userInfo = await multicall(sousChefABI, calls)\r\n  const stakedBalances = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\r\n\r\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n  const calls = nonMasterPools.map((p) => ({\r\n    address: getAddress(p.contractAddress),\r\n    name: 'pendingReward',\r\n    params: [account],\r\n  }))\r\n  const res = await multicall(sousChefABI, calls)\r\n  const pendingRewards = nonMasterPools.reduce(\r\n    (acc, pool, index) => ({\r\n      ...acc,\r\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n    }),\r\n    {},\r\n  )\r\n\r\n  // Cake / Cake pool\r\n  const pendingReward = await masterChefContract.pendingCake('0', account)\r\n\r\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { convertSharesToCake } from 'views/Pools/helpers'\r\nimport { multicallv2 } from 'utils/multicall'\r\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\r\nimport { getCakeVaultAddress } from 'utils/addressHelpers'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\n\r\nexport const fetchPublicVaultData = async () => {\r\n  try {\r\n    const calls = [\r\n      'getPricePerFullShare',\r\n      'totalShares',\r\n      'calculateHarvestCakeRewards',\r\n      'calculateTotalPendingCakeRewards',\r\n    ].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\r\n      cakeVaultAbi,\r\n      calls,\r\n    )\r\n\r\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\r\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\r\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\r\n    return {\r\n      totalShares: totalSharesAsBigNumber.toJSON(),\r\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\r\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\r\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\r\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      totalShares: null,\r\n      pricePerFullShare: null,\r\n      totalCakeInVault: null,\r\n      estimatedCakeBountyReward: null,\r\n      totalPendingCakeHarvest: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchVaultFees = async () => {\r\n  try {\r\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\r\n      address: getCakeVaultAddress(),\r\n      name: method,\r\n    }))\r\n\r\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\r\n\r\n    return {\r\n      performanceFee: performanceFee.toNumber(),\r\n      callFee: callFee.toNumber(),\r\n      withdrawalFee: withdrawalFee.toNumber(),\r\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\r\n    }\r\n  } catch (error) {\r\n      // console.log(\"Fuck You !!!\",error);\r\n    return {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchPublicVaultData\r\n","import BigNumber from 'bignumber.js'\r\nimport { getCakeVaultContract } from 'utils/contractHelpers'\r\n\r\nconst cakeVaultContract = getCakeVaultContract()\r\n\r\nconst fetchVaultUser = async (account: string) => {\r\n  try {\r\n    const userContractResponse = await cakeVaultContract.userInfo(account)\r\n    return {\r\n      isLoading: false,\r\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\r\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\r\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\r\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      isLoading: true,\r\n      userShares: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n      cakeAtLastUserAction: null,\r\n    }\r\n  }\r\n}\r\n\r\nexport default fetchVaultUser\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport BigNumber from 'bignumber.js'\r\nimport poolsConfig from 'config/constants/pools'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\r\nimport { getPoolApr } from 'utils/apr'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\r\nimport {\r\n  fetchPoolsAllowance,\r\n  fetchUserBalances,\r\n  fetchUserStakeBalances,\r\n  fetchUserPendingRewards,\r\n} from './fetchPoolsUser'\r\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\r\nimport fetchVaultUser from './fetchVaultUser'\r\nimport { getTokenPricesFromFarm } from './helpers'\r\n\r\nconst initialState: PoolsState = {\r\n  data: [...poolsConfig],\r\n  userDataLoaded: false,\r\n  cakeVault: {\r\n    totalShares: null,\r\n    pricePerFullShare: null,\r\n    totalCakeInVault: null,\r\n    estimatedCakeBountyReward: null,\r\n    totalPendingCakeHarvest: null,\r\n    fees: {\r\n      performanceFee: null,\r\n      callFee: null,\r\n      withdrawalFee: null,\r\n      withdrawalFeePeriod: null,\r\n    },\r\n    userData: {\r\n      isLoading: true,\r\n      userShares: null,\r\n      cakeAtLastUserAction: null,\r\n      lastDepositedTime: null,\r\n      lastUserActionTime: null,\r\n    },\r\n  },\r\n}\r\n\r\n// Thunks\r\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\r\n  const blockLimits = await fetchPoolsBlockLimits()\r\n  const totalStakings = await fetchPoolsTotalStaking()\r\n\r\n  const prices = getTokenPricesFromFarm(getState().farms.data)\r\n\r\n  const liveData = poolsConfig.map((pool) => {\r\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\r\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\r\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\r\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\r\n\r\n    const stakingTokenAddress = pool.stakingToken.address ? getAddress(pool.stakingToken.address).toLowerCase() : null\r\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\r\n\r\n    const earningTokenAddress = pool.earningToken.address ? getAddress(pool.earningToken.address).toLowerCase() : null\r\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\r\n    const apr = !isPoolFinished\r\n      ? getPoolApr(\r\n          stakingTokenPrice,\r\n          earningTokenPrice,\r\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\r\n          parseFloat(pool.tokenPerBlock),\r\n        )\r\n      : 0\r\n\r\n    return {\r\n      ...blockLimit,\r\n      ...totalStaking,\r\n      stakingTokenPrice,\r\n      earningTokenPrice,\r\n      apr,\r\n      isFinished: isPoolFinished,\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(liveData))\r\n}\r\n\r\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\r\n  const poolsWithStakingLimit = getState()\r\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\r\n    .map((pool) => pool.sousId)\r\n\r\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\r\n\r\n  const stakingLimitData = poolsConfig.map((pool) => {\r\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\r\n      return { sousId: pool.sousId }\r\n    }\r\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\r\n    return {\r\n      sousId: pool.sousId,\r\n      stakingLimit: stakingLimit.toJSON(),\r\n    }\r\n  })\r\n\r\n  dispatch(setPoolsPublicData(stakingLimitData))\r\n}\r\n\r\nexport const fetchPoolsUserDataAsync =\r\n  (account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    const stakingTokenBalances = await fetchUserBalances(account)\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n\r\n    const userData = poolsConfig.map((pool) => ({\r\n      sousId: pool.sousId,\r\n      allowance: allowances[pool.sousId],\r\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n      stakedBalance: stakedBalances[pool.sousId],\r\n      pendingReward: pendingRewards[pool.sousId],\r\n    }))\r\n\r\n    dispatch(setPoolsUserData(userData))\r\n  }\r\n\r\nexport const updateUserAllowance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const allowances = await fetchPoolsAllowance(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\r\n  }\r\n\r\nexport const updateUserBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const tokenBalances = await fetchUserBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserStakedBalance =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const stakedBalances = await fetchUserStakeBalances(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\r\n  }\r\n\r\nexport const updateUserPendingReward =\r\n  (sousId: number, account: string): AppThunk =>\r\n  async (dispatch) => {\r\n    const pendingRewards = await fetchUserPendingRewards(account)\r\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\r\n  }\r\n\r\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\r\n  const publicVaultInfo = await fetchPublicVaultData()\r\n  return publicVaultInfo\r\n})\r\n\r\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\r\n  const vaultFees = await fetchVaultFees()\r\n  return vaultFees\r\n})\r\n\r\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\r\n  'cakeVault/fetchUser',\r\n  async ({ account }) => {\r\n    const userData = await fetchVaultUser(account)\r\n    // // console.log('userData:',userData);\r\n    return userData\r\n  },\r\n)\r\n\r\nexport const PoolsSlice = createSlice({\r\n  name: 'Pools',\r\n  initialState,\r\n  reducers: {\r\n    setPoolsPublicData: (state, action) => {\r\n      const livePoolsData: Pool[] = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, ...livePoolData }\r\n      })\r\n    },\r\n    setPoolsUserData: (state, action) => {\r\n      const userData = action.payload\r\n      state.data = state.data.map((pool) => {\r\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\r\n        return { ...pool, userData: userPoolData }\r\n      })\r\n      state.userDataLoaded = true\r\n    },\r\n    updatePoolsUserData: (state, action) => {\r\n      const { field, value, sousId } = action.payload\r\n      const index = state.data.findIndex((p) => p.sousId === sousId)\r\n\r\n      if (index >= 0) {\r\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Vault public data that updates frequently\r\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\r\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\r\n    })\r\n    // Vault fees\r\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\r\n      const fees = action.payload\r\n      state.cakeVault = { ...state.cakeVault, fees }\r\n    })\r\n    // Vault user data\r\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\r\n      const userData = action.payload\r\n      userData.isLoading = false\r\n      state.cakeVault = { ...state.cakeVault, userData }\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\r\n\r\nexport default PoolsSlice.reducer\r\n","import tokens from './tokens'\r\nimport { PoolConfig, PoolCategory } from './types'\r\n\r\nconst pools: PoolConfig[] = [\r\n  {\r\n    sousId: 0,\r\n    stakingToken: tokens.cake,\r\n    earningToken: tokens.cake,\r\n    contractAddress: {\r\n      137: '0x2B111782165cF3be1cC0F0ed24F4BC9334d03A32',\r\n      80001: '0x1a112E814fF4B4fAdeEa57A30BD00B341776F901',\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    tokenPerBlock: '10',\r\n    sortOrder: 1,\r\n    isFinished: false,\r\n  },\r\n//   {\r\n//     sousId: 197,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.chess,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xd1812e7e28c39e78727592de030fc0e7c366d61a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4286',\r\n//   },\r\n//   {\r\n//     sousId: 196,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.titan,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x97058cf9b36c9ef1622485cef22e72d6fea32a36',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.08912',\r\n//   },\r\n//   {\r\n//     sousId: 195,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.harmony,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xe595456846155e23b24cc9cbee910ee97027db6d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.0092',\r\n//   },\r\n//   {\r\n//     sousId: 194,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mask,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xae611c6d4d3ca2cee44cd34eb7aac29d5a387fcf',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.06423',\r\n//   },\r\n//   {\r\n//     sousId: 193,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dvi,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x135827eaf9746573c0b013f18ee12f138b9b0384',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.7233',\r\n//   },\r\n//   {\r\n//     sousId: 192,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.gum,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x09b8a5f51c9e245402057851ada274174fa00e2a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.67129',\r\n//   },\r\n//   {\r\n//     sousId: 191,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.adx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x53a2d1db049b5271c6b6db020dba0e8a7c4eb90d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.7523',\r\n//   },\r\n//   {\r\n//     sousId: 190,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.suter,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4da8da81647ee0aa7350e9959f3e4771eb753da0',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '69.9074',\r\n//   },\r\n//   {\r\n//     sousId: 189,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bscpad,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0446b8f8474c590d2249a4acdd6eedbc2e004bca',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3877',\r\n//   },\r\n//   {\r\n//     sousId: 188,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.rabbit,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x391240A007Bfd8A59bA74978D691219a76c64c5C',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.993',\r\n//   },\r\n//   {\r\n//     sousId: 187,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.waultx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x017DEa5C58c2Bcf57FA73945073dF7AD4052a71C',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '7.9108',\r\n//   },\r\n//   {\r\n//     sousId: 186,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.wex,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6Bd94783caCef3fb7eAa9284f1631c464479829f',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '11.574',\r\n//   },\r\n//   {\r\n//     sousId: 185,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.form,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x7c71723fB1F9Cfb250B702cfc4eBd5D9Ab2E83d9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.4467',\r\n//   },\r\n//   {\r\n//     sousId: 184,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.orbs,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9C8813d7D0A61d30610a7A5FdEF9109e196a3D77',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.8946',\r\n//   },\r\n//   {\r\n//     sousId: 183,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.$dg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xa07a91da6d10173f33c294803684bceede325957',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00135',\r\n//   },\r\n//   {\r\n//     sousId: 182,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.woo,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x88c321d444c88acf3e747dc90f20421b97648903',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3854',\r\n//   },\r\n//   {\r\n//     sousId: 181,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.woo,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3c7234c496d76133b48bd6a342e7aea4f8d87fc8',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0003854',\r\n//   },\r\n//   {\r\n//     sousId: 180,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.htb,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x64473c33c360f315cab38674f1633505d1d8dcb2',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '5.2083',\r\n//   },\r\n//   {\r\n//     sousId: 179,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.jgn,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x5cc7a19a50be2a6b2540ebcd55bd728e732e59c3',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.1001',\r\n//   },\r\n//   {\r\n//     sousId: 178,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dft,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2666e2494e742301ffc8026e476acc1710a775ed',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.7361',\r\n//   },\r\n//   {\r\n//     sousId: 177,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hai,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6ac2213F09A404c86AFf506Aa51B6a5BF1F6e24E',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.3078',\r\n//   },\r\n//   {\r\n//     sousId: 176,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.o3,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x35BD47263f7E57368Df76339903C53bAa99076e1',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.107638',\r\n//   },\r\n//   {\r\n//     sousId: 175,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ampl,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x62dEc3A560D2e8A84D30752bA454f97b26757877',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.398',\r\n//   },\r\n//   {\r\n//     sousId: 174,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.oddz,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4843',\r\n//   },\r\n//   {\r\n//     sousId: 173,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bondly,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4ea43fce546975aae120c9eeceb172500be4a02b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.6741',\r\n//   },\r\n//   {\r\n//     sousId: 172,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.marsh,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x567fd708e788e51b68666b9310ee9df163d60fae',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.1108',\r\n//   },\r\n//   {\r\n//     sousId: 171,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mbox,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x36f9452083fc9bc469a31e7966b873f402292433',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4803',\r\n//   },\r\n//   {\r\n//     sousId: 170,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ata,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xc612680457751d0d01b5d901ad08132a3b001900',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.7361',\r\n//   },\r\n//   {\r\n//     sousId: 169,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x336bcd59f2b6eb7221a99f7a50fd03c6bf9a306b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.27777',\r\n//   },\r\n//   {\r\n//     sousId: 168,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bcfx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2b3974dda76b2d408b7d680a27fbb0393e3cf0e1',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.6944',\r\n//   },\r\n//   {\r\n//     sousId: 167,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.qkc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xfa67f97eeee6de55d179ecabbfe701f27d9a1ed9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '15.9143',\r\n//   },\r\n//   {\r\n//     sousId: 166,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ktn,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.01215',\r\n//   },\r\n//   {\r\n//     sousId: 165,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mtrg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xf4d0f71698f58f221911515781b05e808a8635cb',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.05613',\r\n//   },\r\n//   {\r\n//     sousId: 164,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.tusd,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9dceb1d92f7e0361d0766f3d98482424df857654',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.5787',\r\n//   },\r\n//   {\r\n//     sousId: 163,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.vrt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xb77f1425ec3a7c78b1a1e892f72332c8b5e8ffcb',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '40.5092',\r\n//   },\r\n//   {\r\n//     sousId: 162,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.kalm,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xb9ff4da0954b300542e722097671ead8cf337c17',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0868',\r\n//   },\r\n//   {\r\n//     sousId: 161,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ez,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xb19395702460261e51edf7a7b130109c64f13af9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.01736',\r\n//   },\r\n//   {\r\n//     sousId: 160,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.kalm,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6e113ecb9ff2d271140f124c2cc5b5e4b5700c9f',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//     tokenPerBlock: '0.00868',\r\n//   },\r\n//   {\r\n//     sousId: 159,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.popen,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x7baf1763ce5d0da8c9d85927f08a8be9c481ce50',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.19097',\r\n//   },\r\n//   {\r\n//     sousId: 158,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lien,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2b8d6c9c62bfc1bed84724165d3000e61d332cab',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.023148',\r\n//   },\r\n//   {\r\n//     sousId: 157,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.well,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x8a06ff2748edcba3fb4e44a6bfda4e46769e557b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.2025',\r\n//     sortOrder: 999,\r\n//   },\r\n//   {\r\n//     sousId: 156,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.deri,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3eba95f5493349bbe0cad33eaae05dc6a7e26b90',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '1.6087',\r\n//     sortOrder: 999,\r\n//   },\r\n//   {\r\n//     sousId: 155,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.chr,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x593edbd14a5b7eec828336accca9c16cc12f04be',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '1.655',\r\n//     sortOrder: 999,\r\n//   },\r\n//   {\r\n//     sousId: 154,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.cyc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xD714738837944C3c592477249E8edB724A76e068',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.00015914',\r\n//     sortOrder: 999,\r\n//   },\r\n//   {\r\n//     sousId: 153,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.xend,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x8ea9f2482b2f7b12744a831f81f8d08714adc093',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.31828',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 152,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hget,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x8e8125f871eb5ba9d55361365f5391ab437f9acc',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.03553',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 151,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hotcross,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0e09205e993f78cd5b3a5df355ae98ee7d0b5834',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.4722',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 150,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.rfox,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xf9f00d41b1f4b3c531ff750a9b986c1a530f33d9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.7361',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 149,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.wmass,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4Af531EcD50167a9402Ce921ee6436dd4cFC04FD',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.24942',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 148,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ubxt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9b4bac2d8f69853aa29cb45478c77fc54532ac22',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '2.4074',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 147,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.btr,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x20ee70a07ae1b475cb150dec27930d97915726ea',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '2.8935',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 146,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.τdoge,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x017556dffb8c6a52fd7f4788adf6fb339309c81b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.868',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 145,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.pmon,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xdaa711ecf2ac0bff5c82fceeae96d0008791cc49',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.01261',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 144,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.one,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x74af842ecd0b6588add455a47aa21ed9ba794108',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '57.87',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 143,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.fine,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x42d41749d6e9a1c5b47e27f690d4531f181b2159',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.1342',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 142,\r\n//     stakingToken: tokens.doge,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xbebd44824631b55991fa5f2bf5c7a4ec96ff805b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.01388',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 141,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bmxx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x55131f330c886e3f0cae389cedb23766ac9aa3ed',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.01331',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 140,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.oin,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x01453a74a94687fa3f99b80762435855a13664f4',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3472',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 139,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hyfi,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0032ceb978fe5fc8a5d5d6f5adfc005e76397e29',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '2.8935',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 138,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.kun,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x439b46d467402cebc1a2fa05038b5b696b1f4417',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.23148',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 137,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.math,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x377ae5f933aa4cfa41fa03e2cae8a2befccf53b2',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.15798',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 136,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ust,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xce3ebac3f549ebf1a174a6ac3b390c179422b5f6',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.17361',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 135,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.win,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xd26dec254c699935c286cd90e9841dcabf1af72d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '462.96',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 134,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.trx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x93e2867d9b74341c2d19101b7fbb81d6063cca4d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '4.0509',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 133,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.btt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3b644e44033cff70bd6b771904225f3dd69dfb6d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '79.86',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 132,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lmt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0a687d7b951348d681f7ed5eea84c0ba7b9566dc',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.66145',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 131,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.pnt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x417df1c0e6a498eb1f2247f99032a01d4fafe922',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.09548',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 130,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.xmark,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xdc8943d806f9dd64312d155284abf780455fd345',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0298',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 129,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ramp,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xa90a894e5bc20ab2be46c7e033a38f8b8eaa771a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4861',\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 128,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hakka,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x34ac807e34e534fe426da1e11f816422774aae1c',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.4722',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 127,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.pbtc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x31fa2f516b77c4273168b284ac6d9def5aa6dafb',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0000031',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 126,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lien,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x7112f8988f075c7784666ab071927ae4109a8076',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.003472',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 125,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bbadger,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x126dfbcef85c5bf335f8be99ca4006037f417892',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00265278',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 124,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bdigg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4f0ad2332b1f9983e8f63cbee617523bb7de5031',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00000403',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 123,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bondly,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9483ca44324de06802576866b9d296f7614f45ac',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4629',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 122,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.xed,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x72ceec6e2a142678e703ab0710de78bc819f4ce0',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3472',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 121,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.cgg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1c6ed21d3313822ae73ed0d94811ffbbe543f341',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.10918',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 120,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.perl,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1ac0d0333640f57327c83053c581340ebc829e30',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.1574',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 119,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.arpa,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xc707e5589aeb1dc117b0bb5a3622362f1812d4fc',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.949',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 118,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.oddz,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x22106cdcf9787969e1672d8e6a9c03a889cda9c5',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.11284',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 117,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dexe,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x999b86e8bba3d4f05afb8155963999db70afa97f',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.009837',\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 116,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dfd,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xAF3EfE5fCEeBc603Eada6A2b0172be11f7405102',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.46296',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 115,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.alpaca,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xf73fdeb26a8c7a4abf3809d3db11a06ba5c13d0e',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.22743',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 114,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.τbtc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xaac7171afc93f4b75e1268d208040b152ac65e32',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00000608',\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 113,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.τbtc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2c6017269b4324d016ca5d8e3267368652c18905',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00000608',\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 112,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.swingby,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x675434c68f2672c983e36cf10ed13a4014720b79',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.21527',\r\n//   },\r\n//   {\r\n//     sousId: 111,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.xed,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x05d6c2d1d687eacfb5e6440d5a3511e91f2201a8',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3472',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 110,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hakka,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xd623a32da4a632ce01766c317d07cb2cad56949b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.4722',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 109,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.cgg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xdf75f38dbc98f9f26377414e567abcb8d57cca33',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.10918',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 108,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mix,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xce64a930884b2c68cd93fc1c7c7cdc221d427692',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.3721',\r\n//   },\r\n//   {\r\n//     sousId: 107,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.suter,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xc1E70edd0141c454b834Deac7ddDeA413424aEf9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '15.3356',\r\n//   },\r\n//   {\r\n//     sousId: 106,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.broobee,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x189d8228CdfDc404Bd9e5bD65ff958cb5fd8855c',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '14.4675',\r\n//   },\r\n//   {\r\n//     sousId: 105,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hzn,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0196c582216e2463f052E2B07Ef8667Bec9Fb17a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.6944',\r\n//   },\r\n//   {\r\n//     sousId: 104,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.alpa,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x8f84106286c9c8A42bc3555C835E6e2090684ab7',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.23495',\r\n//   },\r\n//   {\r\n//     sousId: 103,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.perl,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xa8d32b31ECB5142f067548Bf0424389eE98FaF26',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.1574',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 102,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.tlm,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xC59aa49aE508050c2dF653E77bE13822fFf02E9A',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '17.361',\r\n//   },\r\n//   {\r\n//     sousId: 101,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.jgn,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x14AeA62384789EDA98f444cCb970F6730877d3F9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.08796',\r\n//   },\r\n//   {\r\n//     sousId: 100,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.eps,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xebb87dF24D65977cbe62538E4B3cFBD5d0308642',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.07716',\r\n//   },\r\n//   {\r\n//     sousId: 99,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.arpa,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x40918EF8efFF4aA061656013a81E0e5A8A702eA7',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.949',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 98,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.itam,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x44eC1B26035865D9A7C130fD872670CD7Ebac2bC',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '3.096',\r\n//   },\r\n//   {\r\n//     sousId: 97,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bondly,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1329ad151dE6C441184E32E108401126AE850937',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.4629',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 96,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.tko,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9bbDc92474a7e7321B78dcDA5EF35f4981438760',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.1574',\r\n//   },\r\n//   {\r\n//     sousId: 95,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.apys,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x46530d79b238f809e80313e73715b160c66677aF',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.09953',\r\n//   },\r\n//   {\r\n//     sousId: 94,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hoo,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x47fD853D5baD391899172892F91FAa6d0cd8A2Aa',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.489',\r\n//   },\r\n//   {\r\n//     sousId: 93,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.oddz,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xe25aB6F05BBF6C1be953BF2d7df15B3e01b8e5a5',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.11284',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 92,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.easy,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xEB8Fd597921E3Dd37B0F103a2625F855e2C9b9B5',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0072338',\r\n//   },\r\n//   {\r\n//     sousId: 91,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.nrv,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xABFd8d1942628124aB971937154f826Bce86DcbC',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.15046',\r\n//   },\r\n//   {\r\n//     sousId: 90,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dego,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x526d3c204255f807C95a99b69596f2f9f72345e5',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00405',\r\n//   },\r\n//   {\r\n//     sousId: 89,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.gum,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xAa2082BeE04fc518300ec673F9497ffa6F669dB8',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.08912',\r\n//   },\r\n//   {\r\n//     sousId: 88,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.pbtc,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9096625Bc0d36F5EDa6d44e511641667d89C28f4',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.0000031',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 87,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dft,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x78BD4dB48F8983c3C36C8EAFbEF38f6aC7B55285',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.6811',\r\n//   },\r\n//   {\r\n//     sousId: 86,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.swth,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x35418e14F5aA615C4f020eFBa6e01C5DbF15AdD2',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '2.3148',\r\n//   },\r\n//   {\r\n//     sousId: 85,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lien,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3c7cC49a35942fbD3C2ad428a6c22490cd709d03',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.003472',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 84,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.zil,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xF795739737ABcFE0273f4Dced076460fdD024Dd9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '1.0995',\r\n//   },\r\n//   {\r\n//     sousId: 83,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.pcws,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x06FF8960F7F4aE572A3f57FAe77B2882BE94Bf90',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00434',\r\n//   },\r\n//   {\r\n//     sousId: 82,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bbadger,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xe4dD0C50fb314A8B2e84D211546F5B57eDd7c2b9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00265278',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 81,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bdigg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xb627A7e33Db571bE792B0b69c5C2f5a8160d5500',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.00000403',\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 80,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lto,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xadBfFA25594AF8Bc421ecaDF54D057236a99781e',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '0.2893',\r\n//   },\r\n//   {\r\n//     sousId: 79,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mir,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3e31488f08EBcE6F2D8a2AA512aeFa49a3C7dFa7',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01273',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 78,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.mir,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x453a75908fb5a36d482d5f8fe88eca836f32ead5',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01273',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 77,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.trade,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x509C99D73FB54b2c20689708b3F824147292D38e',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.4484',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 76,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dusk,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xF1bd5673Ea4a1C415ec84fa3E402F2F7788E7717',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.4629',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 75,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bifi,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xB4C68A1C565298834360BbFF1652284275120D47',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.00007234',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 74,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.txl,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x153e62257F1AAe05d5d253a670Ca7585c8D3F94F',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.434027',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 73,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.cos,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xF682D186168b4114ffDbF1291F19429310727151',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '5.787',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 72,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bunny,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xaDdAE5f4dB84847ac9d947AED1304A8e7D19f7cA',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.00289',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 71,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.alice,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4C32048628D0d32d4D6c52662FB4A92747782B56',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.14467',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 70,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.for,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x47642101e8D8578C42765d7AbcFd0bA31868c523',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '2.8935',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 69,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bux,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x07F8217c68ed9b838b0b8B58C19c79bACE746e9A',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.5787',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 68,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.nuls,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x580DC9bB9260A922E3A4355b9119dB990F09410d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0868',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 67,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.belt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6f0037d158eD1AeE395e1c12d21aE8583842F472',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.00868',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 66,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ramp,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x423382f989C6C289c8D441000e1045e231bd7d90',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.4861',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 65,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bfi,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0A595623b58dFDe6eB468b613C11A7A8E84F09b9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0001157',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 64,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dexe,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9E6dA246d369a41DC44673ce658966cAf487f7b2',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.009837',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 63,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bel,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2C0f449387b15793B9da27c2d945dBed83ab1B07',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0549',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 62,\r\n//     stakingToken: tokens.tpt,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0c3D6892aa3b23811Af3bd1bbeA8b0740E8e4528',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0462',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 61,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.tpt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x75C91844c5383A68b7d3A427A44C32E3ba66Fe45',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '3.616',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 60,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.watch,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xC58954199E268505fa3D3Cb0A00b7207af8C2D1d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.3472',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 59,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.xmark,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xA5137e08C48167E363Be8Ec42A68f4F54330964E',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0413',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 58,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bmxx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6F31B87f51654424Ce57E9F8243E27ed13846CDB',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.00248',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 57,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.iotx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xCE54BA909d23B9d4BE0Ff0d84e5aE83F0ADD8D9a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '6.365',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 56,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bor,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3e677dC00668d69c2A7724b9AFA7363e8A56994e',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.000395',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 55,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bopen,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x5Ac8406498dC1921735d559CeC271bEd23B294A7',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0723',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 54,\r\n//     stakingToken: tokens.sushi,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xb69b6e390cba1F68442A886bC89E955048DAe7E3',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0367',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 53,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.dodo,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xae3001ddb18A6A57BEC2C19D71680437CA87bA1D',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0578',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 52,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.swingby,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x02aa767e855b8e80506fb47176202aA58A95315a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.13',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 51,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bry,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1c736F4FB20C7742Ee83a4099fE92abA61dFca41',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.1157',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 50,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.zee,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x02861B607a5E87daf3FD6ec19DFB715F1b371379',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.1736',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 49,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.swgb,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x73e4E8d010289267dEe3d1Fc48974B60363963CE',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.899',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 48,\r\n//     stakingToken: tokens.comp,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xE0565fBb109A3f3f8097D8A9D931277bfd795072',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.055',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 47,\r\n//     stakingToken: tokens.comp,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xc3693e3cbc3514d5d07EA5b27A721F184F617900',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.55',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 46,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.sfp,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2B02d43967765b18E31a9621da640588f3550EFD',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.6',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 45,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lina,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x212bb602418C399c29D52C55100fD6bBa12bea05',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.983',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 44,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lina,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x04aE8ca68A116278026fB721c06dCe709eD7013C',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0983',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 43,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.lit,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1714bAAE9DD4738CDEA07756427FA8d4F08D9479',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.231',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 42,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hget,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xcCD0b93cC6ce3dC6dFaA9DB68f70e5C8455aC5bd',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0138',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 41,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bdo,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9cB24e9460351bC51d4066BC6AEd1F3809b02B78',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.075',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 40,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.egld,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x2dcf4cDFf4Dd954683Fe0a6123077f8a025b66cF',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.001215',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 39,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ust,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x6EFa207ACdE6e1caB77c1322CbdE9628929ba88F',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.1157',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 38,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.wsote,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xD0b738eC507571176D40f28bd56a0120E375f73a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.23',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 37,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.front,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xf7a31366732F08E8e6B88519dC3E827e04616Fc9',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.2546',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 36,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.helmet,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9F23658D5f4CEd69282395089B0f8E4dB85C6e79',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.81',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 35,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.btcst,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xB6fd2724cc9c90DD31DA35DbDf0300009dceF97d',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.011574',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 34,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bscx,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x108BFE84Ca8BCe0741998cb0F60d313823cEC143',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.17361',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 33,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ten,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x4A26b082B432B060B1b00A84eE4E823F04a6f69a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.05787',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 32,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.balbt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x3cc08B7C6A31739CfEd9d8d38b484FDb245C79c8',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.4166',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 31,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.asr,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xd18E1AEb349ef0a6727eCe54597D98D263e05CAB',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 30,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.atm,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x68C7d180bD8F7086D91E65A422c59514e4aFD638',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 29,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.og,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xbE65d7e42E05aD2c4ad28769dc9c5b4b6EAff2C7',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 28,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.reef,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1500fa1afbfe4f4277ed0345cdf12b2c9ca7e139',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '115.74',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 27,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ditto,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x624ef5C2C6080Af188AF96ee5B3160Bb28bb3E02',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.01157',\r\n//     sortOrder: 999,\r\n//     isFinished: false,\r\n//   },\r\n//   {\r\n//     sousId: 26,\r\n//     stakingToken: tokens.twt,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x0554a5D083Abf2f056ae3F6029e1714B9A655174',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.248',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 24,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.juv,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x543467B17cA5De50c8BF7285107A36785Ab57E56',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.02',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 25,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.psg,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x65aFEAFaec49F23159e897EFBDCe19D94A86A1B6',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.02',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 21,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.vai,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x1AD34D8d4D79ddE88c9B6b8490F8fC67831f2CAe',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.104',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 20,\r\n//     stakingToken: tokens.bnb,\r\n//     earningToken: tokens.cake,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x555Ea72d7347E82C614C16f005fA91cAf06DCB5a',\r\n//     },\r\n//     poolCategory: PoolCategory.BINANCE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.5',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 19,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.bnb,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x326D754c64329aD7cb35744770D56D0E1f3B3124',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.0041',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 18,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.blink,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x42Afc29b2dEa792974d1e9420696870f1Ca6d18b',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '23.14',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 17,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.blink,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '23.14',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//     enableEmergencyWithdraw: true,\r\n//   },\r\n//   {\r\n//     sousId: 16,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.unfi,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xFb1088Dae0f03C5123587d2babb3F307831E6367',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.02893',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 15,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.twt,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x9c4EBADa591FFeC4124A7785CAbCfb7068fED2fb',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '5',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 14,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.hard,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0x90F995b9d46b32c4a1908A8c6D0122e392B3Be97',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.346',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 13,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.broobee,\r\n//     contractAddress: {\r\n//       97: '',\r\n//       56: '0xdc8c45b7F3747Ca9CaAEB3fa5e0b5FCE9430646b',\r\n//     },\r\n//     poolCategory: PoolCategory.COMMUNITY,\r\n//     harvest: true,\r\n//     tokenPerBlock: '12.5',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 12,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.stax,\r\n//     contractAddress: {\r\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n//       56: '0xFF02241a2A1d2a7088A344309400E9fE74772815',\r\n//     },\r\n//     poolCategory: PoolCategory.COMMUNITY,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.2',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 11,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.nar,\r\n//     contractAddress: {\r\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n//       56: '0xDc938BA1967b06d666dA79A7B1E31a8697D1565E',\r\n//     },\r\n//     poolCategory: PoolCategory.COMMUNITY,\r\n//     harvest: true,\r\n//     tokenPerBlock: '1',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 10,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.nya,\r\n//     contractAddress: {\r\n//       97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n//       56: '0x07a0A5B67136d40F4d7d95Bc8e0583bafD7A81b9',\r\n//     },\r\n//     poolCategory: PoolCategory.COMMUNITY,\r\n//     harvest: true,\r\n//     sortOrder: 999,\r\n//     tokenPerBlock: '10',\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 9,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.ctk,\r\n//     contractAddress: {\r\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n//       56: '0x21A9A53936E812Da06B7623802DEc9A1f94ED23a',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.5',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 8,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.twt,\r\n//     contractAddress: {\r\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n//       56: '0xe7f9A439Aa7292719aC817798DDd1c4D35934aAF',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '20',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n//   {\r\n//     sousId: 7,\r\n//     stakingToken: tokens.cake,\r\n//     earningToken: tokens.inj,\r\n//     contractAddress: {\r\n//       97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\r\n//       56: '0xcec2671C81a0Ecf7F8Ee796EFa6DBDc5Cb062693',\r\n//     },\r\n//     poolCategory: PoolCategory.CORE,\r\n//     harvest: true,\r\n//     tokenPerBlock: '0.25',\r\n//     sortOrder: 999,\r\n//     isFinished: true,\r\n//   },\r\n]\r\n\r\nexport default pools\r\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\r\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\r\nexport const GRAPH_API_LOTTERY = process.env.REACT_APP_GRAPH_API_LOTTERY\r\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\r\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\r\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\r\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.JsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","import { ethers, Contract } from 'ethers'\r\n\r\n/**\r\n * Estimate the gas needed to call a function, and add a 10% margin\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const estimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[],\r\n  gasMarginPer10000: number,\r\n) => {\r\n  if (!contract[methodName]) {\r\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\r\n  }\r\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\r\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\r\n  const gasEstimation = rawGasEstimation\r\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\r\n    .div(ethers.BigNumber.from(10000))\r\n  return gasEstimation\r\n}\r\n\r\n/**\r\n * Perform a contract call with a gas value returned from estimateGas\r\n * @param contract Used to perform the call\r\n * @param methodName The name of the methode called\r\n * @param args An array of arguments to pass to the method\r\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\r\n */\r\nexport const callWithEstimateGas = async (\r\n  contract: Contract,\r\n  methodName: string,\r\n  methodArgs: any[] = [],\r\n  gasMarginPer10000 = 1000,\r\n): Promise<ethers.providers.TransactionResponse> => {\r\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\r\n  const tx = await contract[methodName](...methodArgs, {\r\n    gasLimit: gasEstimation,\r\n  })\r\n  return tx\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nconst options = {\r\n  gasLimit: DEFAULT_GAS_LIMIT,\r\n}\r\n\r\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.enterStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\r\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\r\n  if (pid === 0) {\r\n    const tx = await masterChefContract.leaveStaking(value, options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.withdraw(pid, value, options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n\r\nexport const harvestFarm = async (masterChefContract, pid) => {\r\n  if (pid === 0) {\r\n    const tx = await await masterChefContract.leaveStaking('0', options)\r\n    const receipt = await tx.wait()\r\n    return receipt.status\r\n  }\r\n\r\n  const tx = await masterChefContract.deposit(pid, '0', options)\r\n  const receipt = await tx.wait()\r\n  return receipt.status\r\n}\r\n","/* eslint-disable import/prefer-default-export */\r\nimport BigNumber from 'bignumber.js'\r\nimport pools from 'config/constants/pools'\r\nimport sousChefV2 from 'config/abi/sousChefV2.json'\r\nimport multicall from '../multicall'\r\nimport { simpleRpcProvider } from '../providers'\r\nimport { getAddress } from '../addressHelpers'\r\n\r\n/**\r\n * Returns the total number of pools that were active at a given block\r\n */\r\nexport const getActivePools = async (block?: number) => {\r\n  const eligiblePools = pools\r\n    .filter((pool) => pool.sousId !== 0)\r\n    .filter((pool) => pool.isFinished === false || pool.isFinished === undefined)\r\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\r\n  const startBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'startBlock',\r\n  }))\r\n  const endBlockCalls = eligiblePools.map(({ contractAddress }) => ({\r\n    address: getAddress(contractAddress),\r\n    name: 'bonusEndBlock',\r\n  }))\r\n  const startBlocks = await multicall(sousChefV2, startBlockCalls)\r\n  const endBlocks = await multicall(sousChefV2, endBlockCalls)\r\n\r\n  return eligiblePools.reduce((accum, poolCheck, index) => {\r\n    const startBlock = startBlocks[index] ? new BigNumber(startBlocks[index]) : null\r\n    const endBlock = endBlocks[index] ? new BigNumber(endBlocks[index]) : null\r\n\r\n    if (!startBlock || !endBlock) {\r\n      return accum\r\n    }\r\n\r\n    if (startBlock.gte(blockNumber) || endBlock.lte(blockNumber)) {\r\n      return accum\r\n    }\r\n\r\n    return [...accum, poolCheck]\r\n  }, [])\r\n}\r\n","import tokens from './tokens'\r\nimport { FarmConfig } from './types'\r\n\r\nconst priceHelperLps: FarmConfig[] = [\r\n  /**\r\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\r\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\r\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\r\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\r\n   * Before storing to redux, farms without a PID are filtered out.\r\n   */\r\n//   {\r\n//     pid: null,\r\n//     lpSymbol: 'QSD-BNB LP',\r\n//     lpAddresses: {\r\n//       97: '',\r\n//       56: '0x7b3ae32eE8C532016f3E31C8941D937c59e055B9',\r\n//     },\r\n//     token: tokens.qsd,\r\n//     quoteToken: tokens.wbnb,\r\n//   },\r\n]\r\n\r\nexport default priceHelperLps\r\n","import BigNumber from 'bignumber.js'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport erc20 from 'config/abi/erc20.json'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\r\nimport multicall from 'utils/multicall'\r\nimport { Farm, SerializedBigNumber } from '../types'\r\n\r\ntype PublicFarmData = {\r\n  tokenAmountMc: SerializedBigNumber\r\n  quoteTokenAmountMc: SerializedBigNumber\r\n  tokenAmountTotal: SerializedBigNumber\r\n  quoteTokenAmountTotal: SerializedBigNumber\r\n  lpTotalInQuoteToken: SerializedBigNumber\r\n  lpTotalSupply: SerializedBigNumber\r\n  tokenPriceVsQuote: SerializedBigNumber\r\n  poolWeight: SerializedBigNumber\r\n  multiplier: string\r\n  fee : string\r\n} \r\n\r\nconst fetchFarm = async (farm: Farm): Promise<PublicFarmData> => {\r\n  const { pid, lpAddresses, token, quoteToken } = farm\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const calls = [\r\n    // Balance of token in the LP contract\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of quote token on LP contract\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'balanceOf',\r\n      params: [lpAddress],\r\n    },\r\n    // Balance of LP tokens in the master chef contract\r\n    {\r\n      address: lpAddress,\r\n      name: 'balanceOf',\r\n      params: [getMasterChefAddress()],\r\n    },\r\n    // Total supply of LP tokens\r\n    {\r\n      address: lpAddress,\r\n      name: 'totalSupply',\r\n    },\r\n    // Token decimals\r\n    {\r\n      address: getAddress(token.address),\r\n      name: 'decimals',\r\n    },\r\n    // Quote token decimals\r\n    {\r\n      address: getAddress(quoteToken.address),\r\n      name: 'decimals',\r\n    },\r\n  ]\r\n\r\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\r\n    await multicall(erc20, calls)\r\n\r\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\r\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\r\n\r\n  // Raw amount of token in the LP, including those not staked\r\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\r\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\r\n\r\n  // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\r\n  const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\r\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\r\n\r\n  // Total staked in LP, in quote token value\r\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\r\n\r\n  // Only make masterchef calls if farm has pid\r\n  const [info, totalAllocPoint] =\r\n    pid || pid === 0\r\n      ? await multicall(masterchefABI, [\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'poolInfo',\r\n            params: [pid],\r\n          },\r\n          {\r\n            address: getMasterChefAddress(),\r\n            name: 'totalAllocPoint',\r\n          },\r\n        ])\r\n      : [null, null]\r\n\r\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\r\n  const feeaddress = info ? new BigNumber(info.depositeFee?._hex) : BIG_ZERO\r\n//   // console.log(allocPoint.div(100).toString(),feeaddress.div(100).toString())\r\n\r\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\r\n  return {\r\n    tokenAmountMc: tokenAmountMc.toJSON(),\r\n    quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\r\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\r\n    quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\r\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\r\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\r\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\r\n    poolWeight: poolWeight.toJSON(),\r\n    multiplier: `${allocPoint.div(100).toString()}X`,\r\n    fee: `${feeaddress.div(100).toString()}`,\r\n\r\n  }\r\n}\r\n\r\nexport default fetchFarm\r\n","import { Farm } from 'state/types'\r\nimport fetchPublicFarmData from './fetchPublicFarmData'\r\n\r\nconst fetchFarm = async (farm: Farm): Promise<Farm> => {\r\n  const farmPublicData = await fetchPublicFarmData(farm)\r\n//   // console.log(\"my data..\",farm)\r\n\r\n  return { ...farm, ...farmPublicData }\r\n}\r\n\r\n\r\nexport default fetchFarm\r\n","import { FarmConfig } from 'config/constants/types'\r\nimport fetchFarm from './fetchFarm'\r\n\r\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\r\n  const data = await Promise.all(\r\n    farmsToFetch.map(async (farmConfig) => {\r\n      const farm = await fetchFarm(farmConfig)\r\n      return farm\r\n    }),\r\n  )\r\n  return data\r\n}\r\n\r\nexport default fetchFarms\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\r\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\r\nimport { Farm } from 'state/types'\r\n\r\nconst getFarmFromTokenSymbol = (farms: Farm[], tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\r\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\r\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\r\n  return filteredFarm\r\n}\r\n\r\nconst getFarmBaseTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\r\n\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  // Possible alternative farm quoteTokens:\r\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\r\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\r\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\r\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\r\n    return hasTokenPriceVsQuote && quoteTokenInBusd\r\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\r\n      : BIG_ZERO\r\n  }\r\n\r\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\r\n  return BIG_ZERO\r\n}\r\n\r\nconst getFarmQuoteTokenPrice = (farm: Farm, quoteTokenFarm: Farm, bnbPriceBusd: BigNumber): BigNumber => {\r\n  if (farm.quoteToken.symbol === 'BUSD') {\r\n    return BIG_ONE\r\n  }\r\n\r\n  if (farm.quoteToken.symbol === 'wBNB') {\r\n    return bnbPriceBusd\r\n  }\r\n\r\n  if (!quoteTokenFarm) {\r\n    return BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\r\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\r\n  }\r\n\r\n  return BIG_ZERO\r\n}\r\n\r\nconst fetchFarmsPrices = async (farms) => {\r\n  const bnbBusdFarm = farms.find((farm: Farm) => farm.pid === 2)\r\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\r\n\r\n  const farmsWithPrices = farms.map((farm) => {\r\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\r\n    const baseTokenPrice = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const quoteTokenPrice = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\r\n    const token = { ...farm.token, busdPrice: baseTokenPrice.toJSON() }\r\n    const quoteToken = { ...farm.quoteToken, busdPrice: quoteTokenPrice.toJSON() }\r\n    return { ...farm, token, quoteToken }\r\n  })\r\n\r\n  return farmsWithPrices\r\n}\r\n\r\nexport default fetchFarmsPrices\r\n","import BigNumber from 'bignumber.js'\r\nimport erc20ABI from 'config/abi/erc20.json'\r\nimport masterchefABI from 'config/abi/masterchef.json'\r\nimport multicall from 'utils/multicall'\r\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\r\nimport { FarmConfig } from 'config/constants/types'\r\n\r\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\r\n  })\r\n\r\n  const rawLpAllowances = await multicall(erc20ABI, calls)\r\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\r\n    return new BigNumber(lpBalance).toJSON()\r\n  })\r\n  return parsedLpAllowances\r\n}\r\n\r\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const calls = farmsToFetch.map((farm) => {\r\n    const lpContractAddress = getAddress(farm.lpAddresses)\r\n    return {\r\n      address: lpContractAddress,\r\n      name: 'balanceOf',\r\n      params: [account],\r\n    }\r\n  })\r\n\r\n  const rawTokenBalances = await multicall(erc20ABI, calls)\r\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\r\n    return new BigNumber(tokenBalance).toJSON()\r\n  })\r\n  return parsedTokenBalances\r\n}\r\n\r\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'userInfo',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawStakedBalances = await multicall(masterchefABI, calls)\r\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\r\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\r\n  })\r\n  return parsedStakedBalances\r\n}\r\n\r\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\r\n  const masterChefAddress = getMasterChefAddress()\r\n\r\n  const calls = farmsToFetch.map((farm) => {\r\n    return {\r\n      address: masterChefAddress,\r\n      name: 'pendingCake',\r\n      params: [farm.pid, account],\r\n    }\r\n  })\r\n\r\n  const rawEarnings = await multicall(masterchefABI, calls)\r\n  const parsedEarnings = rawEarnings.map((earnings) => {\r\n    return new BigNumber(earnings).toJSON()\r\n  })\r\n  return parsedEarnings\r\n}\r\n","/* eslint-disable no-param-reassign */\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport farmsConfig from 'config/constants/farms'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\r\nimport fetchFarms from './fetchFarms'\r\nimport fetchFarmsPrices from './fetchFarmsPrices'\r\nimport {\r\n  fetchFarmUserEarnings,\r\n  fetchFarmUserAllowances,\r\n  fetchFarmUserTokenBalances,\r\n  fetchFarmUserStakedBalances,\r\n} from './fetchFarmUser'\r\nimport { FarmsState, Farm } from '../types'\r\n\r\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\r\n  ...farm,\r\n  userData: {\r\n    allowance: '0',\r\n    tokenBalance: '0',\r\n    stakedBalance: '0',\r\n    earnings: '0',\r\n  },\r\n})) \r\n\r\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\r\n\r\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\r\n\r\n// Async thunks\r\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<Farm[], number[]>(\r\n  'farms/fetchFarmsPublicDataAsync',\r\n  async (pids) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n\r\n    // Add price helper farms\r\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\r\n\r\n    const farms = await fetchFarms(farmsWithPriceHelpers)\r\n    const farmsWithPrices = await fetchFarmsPrices(farms)\r\n\r\n    // Filter out price helper LP config farms\r\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: Farm) => {\r\n      return farm.pid || farm.pid === 0\r\n    })\r\n\r\n    return farmsWithoutHelperLps\r\n  },\r\n)\r\n\r\ninterface FarmUserDataResponse {\r\n  pid: number\r\n  allowance: string\r\n  tokenBalance: string\r\n  stakedBalance: string\r\n  earnings: string\r\n}\r\n\r\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\r\n  'farms/fetchFarmUserDataAsync',\r\n  async ({ account, pids }) => {\r\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\r\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\r\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\r\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\r\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\r\n\r\n    return userFarmAllowances.map((farmAllowance, index) => {\r\n      return {\r\n        pid: farmsToFetch[index].pid,\r\n        allowance: userFarmAllowances[index],\r\n        tokenBalance: userFarmTokenBalances[index],\r\n        stakedBalance: userStakedBalances[index],\r\n        earnings: userFarmEarnings[index],\r\n      }\r\n    })\r\n  },\r\n)\r\n\r\nexport const farmsSlice = createSlice({\r\n  name: 'Farms',\r\n  initialState,\r\n  reducers: {\r\n    setLoadArchivedFarmsData: (state, action) => {\r\n      const loadArchivedFarmsData = action.payload\r\n      state.loadArchivedFarmsData = loadArchivedFarmsData\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    // Update farms with live data\r\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\r\n      state.data = state.data.map((farm) => {\r\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\r\n        return { ...farm, ...liveFarmData }\r\n      })\r\n    })\r\n\r\n    // Update farms with user data\r\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\r\n      action.payload.forEach((userDataEl) => {\r\n        const { pid } = userDataEl\r\n        const index = state.data.findIndex((farm) => farm.pid === pid)\r\n        state.data[index] = { ...state.data[index], userData: userDataEl }\r\n      })\r\n      state.userDataLoaded = true\r\n    })\r\n  },\r\n})\r\n\r\n// Actions\r\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\r\n\r\nexport default farmsSlice.reducer\r\n"],"sourceRoot":""}